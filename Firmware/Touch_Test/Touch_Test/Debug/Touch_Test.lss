
Touch_Test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001d6c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000a0  00800060  00001d6c  00001e00  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000054  00800100  00800100  00001ea0  2**0
                  ALLOC
  3 .stab         00001758  00000000  00000000  00001ea0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000052e  00000000  00000000  000035f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000168  00000000  00000000  00003b28  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001e13  00000000  00000000  00003c90  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000504  00000000  00000000  00005aa3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d55  00000000  00000000  00005fa7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001bc  00000000  00000000  00006cfc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000610  00000000  00000000  00006eb8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000012e5  00000000  00000000  000074c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  000087ad  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	10 c0       	rjmp	.+32     	; 0x22 <__ctors_end>
       2:	2a c0       	rjmp	.+84     	; 0x58 <__bad_interrupt>
       4:	29 c0       	rjmp	.+82     	; 0x58 <__bad_interrupt>
       6:	28 c0       	rjmp	.+80     	; 0x58 <__bad_interrupt>
       8:	27 c0       	rjmp	.+78     	; 0x58 <__bad_interrupt>
       a:	26 c0       	rjmp	.+76     	; 0x58 <__bad_interrupt>
       c:	25 c0       	rjmp	.+74     	; 0x58 <__bad_interrupt>
       e:	24 c0       	rjmp	.+72     	; 0x58 <__bad_interrupt>
      10:	23 c0       	rjmp	.+70     	; 0x58 <__bad_interrupt>
      12:	e8 c1       	rjmp	.+976    	; 0x3e4 <__vector_9>
      14:	21 c0       	rjmp	.+66     	; 0x58 <__bad_interrupt>
      16:	20 c0       	rjmp	.+64     	; 0x58 <__bad_interrupt>
      18:	1f c0       	rjmp	.+62     	; 0x58 <__bad_interrupt>
      1a:	1e c0       	rjmp	.+60     	; 0x58 <__bad_interrupt>
      1c:	1d c0       	rjmp	.+58     	; 0x58 <__bad_interrupt>
      1e:	1c c0       	rjmp	.+56     	; 0x58 <__bad_interrupt>
      20:	1b c0       	rjmp	.+54     	; 0x58 <__bad_interrupt>

00000022 <__ctors_end>:
      22:	11 24       	eor	r1, r1
      24:	1f be       	out	0x3f, r1	; 63
      26:	cf e5       	ldi	r28, 0x5F	; 95
      28:	d2 e0       	ldi	r29, 0x02	; 2
      2a:	de bf       	out	0x3e, r29	; 62
      2c:	cd bf       	out	0x3d, r28	; 61

0000002e <__do_copy_data>:
      2e:	11 e0       	ldi	r17, 0x01	; 1
      30:	a0 e6       	ldi	r26, 0x60	; 96
      32:	b0 e0       	ldi	r27, 0x00	; 0
      34:	ec e6       	ldi	r30, 0x6C	; 108
      36:	fd e1       	ldi	r31, 0x1D	; 29
      38:	02 c0       	rjmp	.+4      	; 0x3e <__SP_H__>
      3a:	05 90       	lpm	r0, Z+
      3c:	0d 92       	st	X+, r0
      3e:	a0 30       	cpi	r26, 0x00	; 0
      40:	b1 07       	cpc	r27, r17
      42:	d9 f7       	brne	.-10     	; 0x3a <__CCP__+0x6>

00000044 <__do_clear_bss>:
      44:	11 e0       	ldi	r17, 0x01	; 1
      46:	a0 e0       	ldi	r26, 0x00	; 0
      48:	b1 e0       	ldi	r27, 0x01	; 1
      4a:	01 c0       	rjmp	.+2      	; 0x4e <.do_clear_bss_start>

0000004c <.do_clear_bss_loop>:
      4c:	1d 92       	st	X+, r1

0000004e <.do_clear_bss_start>:
      4e:	a4 35       	cpi	r26, 0x54	; 84
      50:	b1 07       	cpc	r27, r17
      52:	e1 f7       	brne	.-8      	; 0x4c <.do_clear_bss_loop>
      54:	c4 d8       	rcall	.-3704   	; 0xfffff1de <__eeprom_end+0xff7ef1de>
      56:	88 ce       	rjmp	.-752    	; 0xfffffd68 <__eeprom_end+0xff7efd68>

00000058 <__bad_interrupt>:
      58:	d3 cf       	rjmp	.-90     	; 0x0 <__vectors>

0000005a <i2c_delay_T2>:
;*************************************************************************
	.stabs	"",100,0,0,i2c_delay_T2
	.stabs	"i2cmaster.S",100,0,0,i2c_delay_T2
	.func i2c_delay_T2	; delay 5.0 microsec with 4 Mhz crystal	
i2c_delay_T2:        ; 4 cycles
	rjmp 1f      ; 2   "
      5a:	00 c0       	rjmp	.+0      	; 0x5c <i2c_delay_T2+0x2>
1:	rjmp 2f      ; 2   "
      5c:	00 c0       	rjmp	.+0      	; 0x5e <i2c_delay_T2+0x4>
2:	rjmp 3f      ; 2   "
      5e:	00 c0       	rjmp	.+0      	; 0x60 <i2c_delay_T2+0x6>
3:	rjmp 4f      ; 2   "
      60:	00 c0       	rjmp	.+0      	; 0x62 <i2c_delay_T2+0x8>
4:	rjmp 5f      ; 2   "
      62:	00 c0       	rjmp	.+0      	; 0x64 <i2c_delay_T2+0xa>
5: 	rjmp 6f      ; 2   "
      64:	00 c0       	rjmp	.+0      	; 0x66 <i2c_delay_T2+0xc>
6:	nop          ; 1   "
      66:	00 00       	nop
	ret          ; 3   "
      68:	08 95       	ret

0000006a <i2c_init>:
; extern void i2c_init(void)
;*************************************************************************
	.global i2c_init
	.func i2c_init
i2c_init:
	cbi SDA_DDR,SDA		;release SDA
      6a:	d6 98       	cbi	0x1a, 6	; 26
	cbi SCL_DDR,SCL		;release SCL
      6c:	d4 98       	cbi	0x1a, 4	; 26
	cbi SDA_OUT,SDA
      6e:	de 98       	cbi	0x1b, 6	; 27
	cbi SCL_OUT,SCL
      70:	dc 98       	cbi	0x1b, 4	; 27
	ret
      72:	08 95       	ret

00000074 <i2c_start>:
;*************************************************************************

	.global i2c_start
	.func   i2c_start
i2c_start:
	sbi 	SDA_DDR,SDA	;force SDA low
      74:	d6 9a       	sbi	0x1a, 6	; 26
	rcall 	i2c_delay_T2	;delay T/2
      76:	f1 df       	rcall	.-30     	; 0x5a <i2c_delay_T2>
	
	rcall 	i2c_write	;write address
      78:	1d d0       	rcall	.+58     	; 0xb4 <i2c_write>
	ret
      7a:	08 95       	ret

0000007c <i2c_rep_start>:
;*************************************************************************

	.global i2c_rep_start
	.func	i2c_rep_start
i2c_rep_start:
	sbi	SCL_DDR,SCL	;force SCL low
      7c:	d4 9a       	sbi	0x1a, 4	; 26
	rcall 	i2c_delay_T2	;delay  T/2
      7e:	ed df       	rcall	.-38     	; 0x5a <i2c_delay_T2>
	cbi	SDA_DDR,SDA	;release SDA
      80:	d6 98       	cbi	0x1a, 6	; 26
	rcall	i2c_delay_T2	;delay T/2
      82:	eb df       	rcall	.-42     	; 0x5a <i2c_delay_T2>
	cbi	SCL_DDR,SCL	;release SCL
      84:	d4 98       	cbi	0x1a, 4	; 26
	rcall 	i2c_delay_T2	;delay  T/2
      86:	e9 df       	rcall	.-46     	; 0x5a <i2c_delay_T2>
	sbi 	SDA_DDR,SDA	;force SDA low
      88:	d6 9a       	sbi	0x1a, 6	; 26
	rcall 	i2c_delay_T2	;delay	T/2
      8a:	e7 df       	rcall	.-50     	; 0x5a <i2c_delay_T2>
	
	rcall	i2c_write	;write address
      8c:	13 d0       	rcall	.+38     	; 0xb4 <i2c_write>
	ret
      8e:	08 95       	ret

00000090 <i2c_start_wait>:
;*************************************************************************

	.global i2c_start_wait
	.func   i2c_start_wait
i2c_start_wait:
	mov	__tmp_reg__,r24
      90:	08 2e       	mov	r0, r24

00000092 <i2c_start_wait1>:
i2c_start_wait1:
	sbi 	SDA_DDR,SDA	;force SDA low
      92:	d6 9a       	sbi	0x1a, 6	; 26
	rcall 	i2c_delay_T2	;delay T/2
      94:	e2 df       	rcall	.-60     	; 0x5a <i2c_delay_T2>
	mov	r24,__tmp_reg__
      96:	80 2d       	mov	r24, r0
	rcall 	i2c_write	;write address
      98:	0d d0       	rcall	.+26     	; 0xb4 <i2c_write>
	tst	r24		;if device not busy -> done
      9a:	88 23       	and	r24, r24
	breq	i2c_start_wait_done
      9c:	11 f0       	breq	.+4      	; 0xa2 <i2c_start_wait_done>
	rcall	i2c_stop	;terminate write operation
      9e:	02 d0       	rcall	.+4      	; 0xa4 <i2c_stop>
	rjmp	i2c_start_wait1	;device busy, poll ack again
      a0:	f8 cf       	rjmp	.-16     	; 0x92 <i2c_start_wait1>

000000a2 <i2c_start_wait_done>:
i2c_start_wait_done:
	ret
      a2:	08 95       	ret

000000a4 <i2c_stop>:
;*************************************************************************

	.global	i2c_stop
	.func	i2c_stop
i2c_stop:
	sbi	SCL_DDR,SCL	;force SCL low
      a4:	d4 9a       	sbi	0x1a, 4	; 26
	sbi	SDA_DDR,SDA	;force SDA low
      a6:	d6 9a       	sbi	0x1a, 6	; 26
	rcall	i2c_delay_T2	;delay T/2
      a8:	d8 df       	rcall	.-80     	; 0x5a <i2c_delay_T2>
	cbi	SCL_DDR,SCL	;release SCL
      aa:	d4 98       	cbi	0x1a, 4	; 26
	rcall	i2c_delay_T2	;delay T/2
      ac:	d6 df       	rcall	.-84     	; 0x5a <i2c_delay_T2>
	cbi	SDA_DDR,SDA	;release SDA
      ae:	d6 98       	cbi	0x1a, 6	; 26
	rcall	i2c_delay_T2	;delay T/2
      b0:	d4 df       	rcall	.-88     	; 0x5a <i2c_delay_T2>
	ret
      b2:	08 95       	ret

000000b4 <i2c_write>:
;	data = r24,  return = r25(=0):r24
;*************************************************************************
	.global i2c_write
	.func	i2c_write
i2c_write:
	sec			;set carry flag
      b4:	08 94       	sec
	rol 	r24		;shift in carry and out bit one
      b6:	88 1f       	adc	r24, r24
	rjmp	i2c_write_first
      b8:	01 c0       	rjmp	.+2      	; 0xbc <i2c_write_first>

000000ba <i2c_write_bit>:
i2c_write_bit:
	lsl	r24		;if transmit register empty
      ba:	88 0f       	add	r24, r24

000000bc <i2c_write_first>:
i2c_write_first:
	breq	i2c_get_ack
      bc:	59 f0       	breq	.+22     	; 0xd4 <i2c_get_ack>
	sbi	SCL_DDR,SCL	;force SCL low
      be:	d4 9a       	sbi	0x1a, 4	; 26
	brcc	i2c_write_low
      c0:	18 f4       	brcc	.+6      	; 0xc8 <i2c_write_low>
	nop
      c2:	00 00       	nop
	cbi	SDA_DDR,SDA	;release SDA
      c4:	d6 98       	cbi	0x1a, 6	; 26
	rjmp	i2c_write_high
      c6:	02 c0       	rjmp	.+4      	; 0xcc <i2c_write_high>

000000c8 <i2c_write_low>:
i2c_write_low:
	sbi	SDA_DDR,SDA	;force SDA low
      c8:	d6 9a       	sbi	0x1a, 6	; 26
	rjmp	i2c_write_high
      ca:	00 c0       	rjmp	.+0      	; 0xcc <i2c_write_high>

000000cc <i2c_write_high>:
i2c_write_high:
	rcall 	i2c_delay_T2	;delay T/2
      cc:	c6 df       	rcall	.-116    	; 0x5a <i2c_delay_T2>
	cbi	SCL_DDR,SCL	;release SCL
      ce:	d4 98       	cbi	0x1a, 4	; 26
	rcall	i2c_delay_T2	;delay T/2
      d0:	c4 df       	rcall	.-120    	; 0x5a <i2c_delay_T2>
	rjmp	i2c_write_bit
      d2:	f3 cf       	rjmp	.-26     	; 0xba <i2c_write_bit>

000000d4 <i2c_get_ack>:
	
i2c_get_ack:
	sbi	SCL_DDR,SCL	;force SCL low
      d4:	d4 9a       	sbi	0x1a, 4	; 26
	cbi	SDA_DDR,SDA	;release SDA
      d6:	d6 98       	cbi	0x1a, 6	; 26
	rcall	i2c_delay_T2	;delay T/2
      d8:	c0 df       	rcall	.-128    	; 0x5a <i2c_delay_T2>
	cbi	SCL_DDR,SCL	;release SCL
      da:	d4 98       	cbi	0x1a, 4	; 26

000000dc <i2c_ack_wait>:
i2c_ack_wait:
	sbis	SCL_IN,SCL	;wait SCL high (in case wait states are inserted)
      dc:	cc 9b       	sbis	0x19, 4	; 25
	rjmp	i2c_ack_wait
      de:	fe cf       	rjmp	.-4      	; 0xdc <i2c_ack_wait>
	
	clr	r24		;return 0
      e0:	88 27       	eor	r24, r24
	sbic	SDA_IN,SDA	;if SDA high -> return 1
      e2:	ce 99       	sbic	0x19, 6	; 25
	ldi	r24,1
      e4:	81 e0       	ldi	r24, 0x01	; 1
	rcall	i2c_delay_T2	;delay T/2
      e6:	b9 df       	rcall	.-142    	; 0x5a <i2c_delay_T2>
	clr	r25
      e8:	99 27       	eor	r25, r25
	ret
      ea:	08 95       	ret

000000ec <i2c_readNak>:
	.global i2c_readAck
	.global i2c_readNak
	.global i2c_read		
	.func	i2c_read
i2c_readNak:
	clr	r24
      ec:	88 27       	eor	r24, r24
	rjmp	i2c_read
      ee:	01 c0       	rjmp	.+2      	; 0xf2 <i2c_read>

000000f0 <i2c_readAck>:
i2c_readAck:
	ldi	r24,0x01
      f0:	81 e0       	ldi	r24, 0x01	; 1

000000f2 <i2c_read>:
i2c_read:
	ldi	r23,0x01	;data = 0x01
      f2:	71 e0       	ldi	r23, 0x01	; 1

000000f4 <i2c_read_bit>:
i2c_read_bit:
	sbi	SCL_DDR,SCL	;force SCL low
      f4:	d4 9a       	sbi	0x1a, 4	; 26
	cbi	SDA_DDR,SDA	;release SDA (from previous ACK)
      f6:	d6 98       	cbi	0x1a, 6	; 26
	rcall	i2c_delay_T2	;delay T/2
      f8:	b0 df       	rcall	.-160    	; 0x5a <i2c_delay_T2>
	
	cbi	SCL_DDR,SCL	;release SCL
      fa:	d4 98       	cbi	0x1a, 4	; 26
	rcall	i2c_delay_T2	;delay T/2
      fc:	ae df       	rcall	.-164    	; 0x5a <i2c_delay_T2>

000000fe <i2c_read_stretch>:
	
i2c_read_stretch:
    sbis SCL_IN, SCL        ;loop until SCL is high (allow slave to stretch SCL)
      fe:	cc 9b       	sbis	0x19, 4	; 25
    rjmp	i2c_read_stretch
     100:	fe cf       	rjmp	.-4      	; 0xfe <i2c_read_stretch>
    	
	clc			;clear carry flag
     102:	88 94       	clc
	sbic	SDA_IN,SDA	;if SDA is high
     104:	ce 99       	sbic	0x19, 6	; 25
	sec			;  set carry flag
     106:	08 94       	sec
	
	rol	r23		;store bit
     108:	77 1f       	adc	r23, r23
	brcc	i2c_read_bit	;while receive register not full
     10a:	a0 f7       	brcc	.-24     	; 0xf4 <i2c_read_bit>

0000010c <i2c_put_ack>:
	
i2c_put_ack:
	sbi	SCL_DDR,SCL	;force SCL low	
     10c:	d4 9a       	sbi	0x1a, 4	; 26
	cpi	r24,1
     10e:	81 30       	cpi	r24, 0x01	; 1
	breq	i2c_put_ack_low	;if (ack=0)
     110:	11 f0       	breq	.+4      	; 0x116 <i2c_put_ack_low>
	cbi	SDA_DDR,SDA	;      release SDA
     112:	d6 98       	cbi	0x1a, 6	; 26
	rjmp	i2c_put_ack_high
     114:	01 c0       	rjmp	.+2      	; 0x118 <i2c_put_ack_high>

00000116 <i2c_put_ack_low>:
i2c_put_ack_low:                ;else
	sbi	SDA_DDR,SDA	;      force SDA low
     116:	d6 9a       	sbi	0x1a, 6	; 26

00000118 <i2c_put_ack_high>:
i2c_put_ack_high:
	rcall	i2c_delay_T2	;delay T/2
     118:	a0 df       	rcall	.-192    	; 0x5a <i2c_delay_T2>
	cbi	SCL_DDR,SCL	;release SCL
     11a:	d4 98       	cbi	0x1a, 4	; 26

0000011c <i2c_put_ack_wait>:
i2c_put_ack_wait:
	sbis	SCL_IN,SCL	;wait SCL high
     11c:	cc 9b       	sbis	0x19, 4	; 25
	rjmp	i2c_put_ack_wait
     11e:	fe cf       	rjmp	.-4      	; 0x11c <i2c_put_ack_wait>
	rcall	i2c_delay_T2	;delay T/2
     120:	9c df       	rcall	.-200    	; 0x5a <i2c_delay_T2>
	mov	r24,r23
     122:	87 2f       	mov	r24, r23
	clr	r25
     124:	99 27       	eor	r25, r25
	ret
     126:	08 95       	ret

00000128 <pca9685_init2>:
	12,    // Channel 0
};


void pca9685_init2(int address)
{
     128:	cf 93       	push	r28
     12a:	df 93       	push	r29
     12c:	d8 2f       	mov	r29, r24
	/********************************************/
	/* Init code for the PCA9685                */
	/* Input:[address of the pc9685 to init]    */
	/* Output:[void]                            */
	/********************************************/
	i2c_start(address);                // Start
     12e:	a2 df       	rcall	.-188    	; 0x74 <i2c_start>
	i2c_write(MODE1);           // Mode 1 address
     130:	80 e0       	ldi	r24, 0x00	; 0
     132:	c0 df       	rcall	.-128    	; 0xb4 <i2c_write>
	i2c_write(PCA9685_RESTART);      // Setting mode to sleep so we can change the default PWM frequency
     134:	80 e8       	ldi	r24, 0x80	; 128
     136:	be df       	rcall	.-132    	; 0xb4 <i2c_write>
	i2c_stop();                 // Stop
     138:	b5 df       	rcall	.-150    	; 0xa4 <i2c_stop>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     13a:	8f e1       	ldi	r24, 0x1F	; 31
     13c:	9e e4       	ldi	r25, 0x4E	; 78
     13e:	01 97       	sbiw	r24, 0x01	; 1
     140:	f1 f7       	brne	.-4      	; 0x13e <pca9685_init2+0x16>
     142:	00 c0       	rjmp	.+0      	; 0x144 <pca9685_init2+0x1c>
     144:	00 00       	nop
	
	_delay_ms(10);
	
	i2c_start(address);                // Start
     146:	8d 2f       	mov	r24, r29
     148:	95 df       	rcall	.-214    	; 0x74 <i2c_start>
	i2c_write(MODE1);            // PWM frequency PRE_SCALE address
     14a:	80 e0       	ldi	r24, 0x00	; 0
     14c:	b3 df       	rcall	.-154    	; 0xb4 <i2c_write>
	i2c_write(PCA9685_AI);            // osc_clk/(4096*update_rate) // 25000000/(4096*1500)= 4.069 ~4
     14e:	80 e2       	ldi	r24, 0x20	; 32
     150:	b1 df       	rcall	.-158    	; 0xb4 <i2c_write>
	i2c_stop();                 // Stop
     152:	a8 df       	rcall	.-176    	; 0xa4 <i2c_stop>
     154:	8f e1       	ldi	r24, 0x1F	; 31
     156:	9e e4       	ldi	r25, 0x4E	; 78
     158:	01 97       	sbiw	r24, 0x01	; 1
     15a:	f1 f7       	brne	.-4      	; 0x158 <pca9685_init2+0x30>
     15c:	00 c0       	rjmp	.+0      	; 0x15e <pca9685_init2+0x36>
     15e:	00 00       	nop
	
	_delay_ms(10);
	
	i2c_start(address);                // Start
     160:	8d 2f       	mov	r24, r29
     162:	88 df       	rcall	.-240    	; 0x74 <i2c_start>
	i2c_write(MODE2);           // Mode 1 register address
     164:	81 e0       	ldi	r24, 0x01	; 1
     166:	a6 df       	rcall	.-180    	; 0xb4 <i2c_write>
	i2c_write(PCA9685_INVRT);            // Set to our preferred mode[ Reset, INT_CLK, Auto-Increment, Normal Mode]
     168:	80 e1       	ldi	r24, 0x10	; 16
     16a:	a4 df       	rcall	.-184    	; 0xb4 <i2c_write>
	i2c_stop();                 // Stop
     16c:	9b df       	rcall	.-202    	; 0xa4 <i2c_stop>
     16e:	8f e1       	ldi	r24, 0x1F	; 31
     170:	9e e4       	ldi	r25, 0x4E	; 78
     172:	01 97       	sbiw	r24, 0x01	; 1
     174:	f1 f7       	brne	.-4      	; 0x172 <pca9685_init2+0x4a>
     176:	00 c0       	rjmp	.+0      	; 0x178 <pca9685_init2+0x50>
     178:	00 00       	nop
     17a:	c6 e0       	ldi	r28, 0x06	; 6
	_delay_ms(10);
	
	
	for(int i = 0; i <= LEDCOUNT; i++)
	{
		i2c_start(address);                // Start
     17c:	8d 2f       	mov	r24, r29
     17e:	7a df       	rcall	.-268    	; 0x74 <i2c_start>
		i2c_write(LED0_ON_L + 4 * i);
     180:	8c 2f       	mov	r24, r28
     182:	98 df       	rcall	.-208    	; 0xb4 <i2c_write>
		i2c_write(0x00);
     184:	80 e0       	ldi	r24, 0x00	; 0
     186:	96 df       	rcall	.-212    	; 0xb4 <i2c_write>
		i2c_write(0x00);
     188:	80 e0       	ldi	r24, 0x00	; 0
     18a:	94 df       	rcall	.-216    	; 0xb4 <i2c_write>
		i2c_write(0x10);
     18c:	80 e1       	ldi	r24, 0x10	; 16
     18e:	92 df       	rcall	.-220    	; 0xb4 <i2c_write>
		i2c_write(0x50);
     190:	80 e5       	ldi	r24, 0x50	; 80
     192:	90 df       	rcall	.-224    	; 0xb4 <i2c_write>
		i2c_stop();                 // Stop
     194:	87 df       	rcall	.-242    	; 0xa4 <i2c_stop>
     196:	8f e1       	ldi	r24, 0x1F	; 31
     198:	9e e4       	ldi	r25, 0x4E	; 78
     19a:	01 97       	sbiw	r24, 0x01	; 1
     19c:	f1 f7       	brne	.-4      	; 0x19a <pca9685_init2+0x72>
     19e:	00 c0       	rjmp	.+0      	; 0x1a0 <pca9685_init2+0x78>
     1a0:	00 00       	nop
     1a2:	cc 5f       	subi	r28, 0xFC	; 252
	i2c_stop();                 // Stop
	
	_delay_ms(10);
	
	
	for(int i = 0; i <= LEDCOUNT; i++)
     1a4:	c6 34       	cpi	r28, 0x46	; 70
     1a6:	51 f7       	brne	.-44     	; 0x17c <pca9685_init2+0x54>
		i2c_stop();                 // Stop
		_delay_ms(10);
		
	}
	
}
     1a8:	df 91       	pop	r29
     1aa:	cf 91       	pop	r28
     1ac:	08 95       	ret

000001ae <pca9685_send_all>:



void pca9685_send_all(int address) 
{ 
     1ae:	cf 92       	push	r12
     1b0:	df 92       	push	r13
     1b2:	ff 92       	push	r15
     1b4:	0f 93       	push	r16
     1b6:	1f 93       	push	r17
     1b8:	cf 93       	push	r28
     1ba:	df 93       	push	r29
     1bc:	0f 92       	push	r0
     1be:	cd b7       	in	r28, 0x3d	; 61
     1c0:	de b7       	in	r29, 0x3e	; 62
     1c2:	f8 2e       	mov	r15, r24
     1c4:	0c e9       	ldi	r16, 0x9C	; 156
     1c6:	10 e0       	ldi	r17, 0x00	; 0
     1c8:	96 e0       	ldi	r25, 0x06	; 6
    int i = 0;                  // temp register for LEDCOUNT 
    int pwm;                    // temp register for PWM 
    for(i=0; i<=LEDCOUNT; i++)  // cycle through all 16 LED 
   
	 {
		 i2c_start(address);            // Start
     1ca:	8f 2d       	mov	r24, r15
     1cc:	99 83       	std	Y+1, r25	; 0x01
     1ce:	52 df       	rcall	.-348    	; 0x74 <i2c_start>
		 i2c_write(LED0_ON_L + 4 * i);// start from LED0 address, each pwm constructed from
     1d0:	99 81       	ldd	r25, Y+1	; 0x01
     1d2:	89 2f       	mov	r24, r25
     1d4:	6f df       	rcall	.-290    	; 0xb4 <i2c_write>
		 i2c_write(0x00);        // 4 12bit register, LED_ON_L
     1d6:	80 e0       	ldi	r24, 0x00	; 0
     1d8:	6d df       	rcall	.-294    	; 0xb4 <i2c_write>
		 i2c_write(0x00);        // LED_ON_H
     1da:	80 e0       	ldi	r24, 0x00	; 0
     1dc:	6b df       	rcall	.-298    	; 0xb4 <i2c_write>
	
}



void pca9685_send_all(int address) 
     1de:	68 01       	movw	r12, r16
		 i2c_start(address);            // Start
		 i2c_write(LED0_ON_L + 4 * i);// start from LED0 address, each pwm constructed from
		 i2c_write(0x00);        // 4 12bit register, LED_ON_L
		 i2c_write(0x00);        // LED_ON_H
		 pwm = PWMData[i];       // update selected LED data in the array
		 i2c_write(pwm);         // LED_OFF_L
     1e0:	f8 01       	movw	r30, r16
     1e2:	80 81       	ld	r24, Z
     1e4:	67 df       	rcall	.-306    	; 0xb4 <i2c_write>
     1e6:	0c 5f       	subi	r16, 0xFC	; 252
     1e8:	1f 4f       	sbci	r17, 0xFF	; 255
		 pwm = PWMData[i]>>8;    // update selected LED data in the array
		 i2c_write(pwm);         // LED_OFF_H
     1ea:	f6 01       	movw	r30, r12
     1ec:	81 81       	ldd	r24, Z+1	; 0x01
     1ee:	62 df       	rcall	.-316    	; 0xb4 <i2c_write>
		 i2c_stop();             // Stop
     1f0:	59 df       	rcall	.-334    	; 0xa4 <i2c_stop>
     1f2:	2f ef       	ldi	r18, 0xFF	; 255
     1f4:	36 e7       	ldi	r19, 0x76	; 118
     1f6:	41 e0       	ldi	r20, 0x01	; 1
     1f8:	21 50       	subi	r18, 0x01	; 1
     1fa:	30 40       	sbci	r19, 0x00	; 0
     1fc:	40 40       	sbci	r20, 0x00	; 0
     1fe:	e1 f7       	brne	.-8      	; 0x1f8 <pca9685_send_all+0x4a>
     200:	00 c0       	rjmp	.+0      	; 0x202 <pca9685_send_all+0x54>
     202:	00 00       	nop
     204:	99 81       	ldd	r25, Y+1	; 0x01
     206:	9c 5f       	subi	r25, 0xFC	; 252
/* Input:[address of the pc9685 to update]  */ 
/* Output:[void]                            */ 
/********************************************/ 
    int i = 0;                  // temp register for LEDCOUNT 
    int pwm;                    // temp register for PWM 
    for(i=0; i<=LEDCOUNT; i++)  // cycle through all 16 LED 
     208:	96 34       	cpi	r25, 0x46	; 70
     20a:	f9 f6       	brne	.-66     	; 0x1ca <pca9685_send_all+0x1c>
		 i2c_stop();             // Stop
		_delay_ms(60);           // delay at least 500 us

	 }
	 
} 
     20c:	0f 90       	pop	r0
     20e:	df 91       	pop	r29
     210:	cf 91       	pop	r28
     212:	1f 91       	pop	r17
     214:	0f 91       	pop	r16
     216:	ff 90       	pop	r15
     218:	df 90       	pop	r13
     21a:	cf 90       	pop	r12
     21c:	08 95       	ret

0000021e <pca9685_send>:

void pca9685_send(int address, long value, int led) 
{ 
     21e:	cf 92       	push	r12
     220:	df 92       	push	r13
     222:	ef 92       	push	r14
     224:	ff 92       	push	r15
     226:	cf 93       	push	r28
     228:	df 93       	push	r29
     22a:	00 d0       	rcall	.+0      	; 0x22c <pca9685_send+0xe>
     22c:	cd b7       	in	r28, 0x3d	; 61
     22e:	de b7       	in	r29, 0x3e	; 62
     230:	6a 01       	movw	r12, r20
     232:	7b 01       	movw	r14, r22
     234:	90 e0       	ldi	r25, 0x00	; 0
     236:	c9 16       	cp	r12, r25
     238:	90 e1       	ldi	r25, 0x10	; 16
     23a:	d9 06       	cpc	r13, r25
     23c:	90 e0       	ldi	r25, 0x00	; 0
     23e:	e9 06       	cpc	r14, r25
     240:	90 e0       	ldi	r25, 0x00	; 0
     242:	f9 06       	cpc	r15, r25
     244:	34 f0       	brlt	.+12     	; 0x252 <pca9685_send+0x34>
     246:	9f ef       	ldi	r25, 0xFF	; 255
     248:	c9 2e       	mov	r12, r25
     24a:	9f e0       	ldi	r25, 0x0F	; 15
     24c:	d9 2e       	mov	r13, r25
     24e:	e1 2c       	mov	r14, r1
     250:	f1 2c       	mov	r15, r1
    int pwm;                    // temp variable for PWM 
    if(value > 4095)            // if larger than 4095 than full on 
            value = 4095;       // cant be larger than 4095 
    if(led > 15)                // if LED larger than 15 than on other chip 
            led = 15;           //***** need to implement to select next pcs9685 
    i2c_start(address);                // Start 
     252:	29 83       	std	Y+1, r18	; 0x01
     254:	3a 83       	std	Y+2, r19	; 0x02
     256:	0e df       	rcall	.-484    	; 0x74 <i2c_start>
    i2c_write(LED0_ON_L + 4 * led);  // select selected LED address 
     258:	29 81       	ldd	r18, Y+1	; 0x01
     25a:	82 2f       	mov	r24, r18
     25c:	3a 81       	ldd	r19, Y+2	; 0x02
     25e:	93 2f       	mov	r25, r19
     260:	80 31       	cpi	r24, 0x10	; 16
     262:	91 05       	cpc	r25, r1
     264:	14 f0       	brlt	.+4      	; 0x26a <__stack+0xb>
     266:	8f e0       	ldi	r24, 0x0F	; 15
     268:	90 e0       	ldi	r25, 0x00	; 0
     26a:	88 0f       	add	r24, r24
     26c:	88 0f       	add	r24, r24
     26e:	8a 5f       	subi	r24, 0xFA	; 250
     270:	21 df       	rcall	.-446    	; 0xb4 <i2c_write>
    i2c_write(0x00);            // LED_ON_L 
     272:	80 e0       	ldi	r24, 0x00	; 0
     274:	1f df       	rcall	.-450    	; 0xb4 <i2c_write>
    i2c_write(0x00);            // LED_ON_H 
     276:	80 e0       	ldi	r24, 0x00	; 0
     278:	1d df       	rcall	.-454    	; 0xb4 <i2c_write>
    pwm = value;                // PWM value lo byte 
    i2c_write(pwm);             // LED_OFF_L 
     27a:	8c 2d       	mov	r24, r12
     27c:	1b df       	rcall	.-458    	; 0xb4 <i2c_write>
    pwm = value>>8;             // pwm 16 bit long, now shift upper 8 to lower 8 
    i2c_write(pwm);             // LED_OFF_H 
     27e:	8d 2d       	mov	r24, r13
     280:	19 df       	rcall	.-462    	; 0xb4 <i2c_write>
    i2c_stop();                 // STop 
     282:	10 df       	rcall	.-480    	; 0xa4 <i2c_stop>
} 
     284:	0f 90       	pop	r0
     286:	0f 90       	pop	r0
     288:	df 91       	pop	r29
     28a:	cf 91       	pop	r28
     28c:	ff 90       	pop	r15
     28e:	ef 90       	pop	r14
     290:	df 90       	pop	r13
     292:	cf 90       	pop	r12
     294:	08 95       	ret

00000296 <pca9685_brightness.constprop.1>:


void pca9685_brightness(int address, int percent, int led) 
     296:	0f 93       	push	r16
     298:	1f 93       	push	r17
     29a:	cf 93       	push	r28
     29c:	df 93       	push	r29
     29e:	eb 01       	movw	r28, r22
     2a0:	8b 01       	movw	r16, r22
     2a2:	00 0f       	add	r16, r16
     2a4:	11 1f       	adc	r17, r17
     2a6:	00 0f       	add	r16, r16
     2a8:	11 1f       	adc	r17, r17
/* LED to set brightness 0to15]             */ 
/* Output:[void]                            */ 
/********************************************/ 
    float off;                          // temp variable 
    const float onePercent = 40.96; 
    if (percent < 1) {                  // if % less than 1 than LED OFF 
     2aa:	18 16       	cp	r1, r24
     2ac:	19 06       	cpc	r1, r25
     2ae:	6c f0       	brlt	.+26     	; 0x2ca <pca9685_brightness.constprop.1+0x34>
    PWMData[led] = PCA9685_LED_OFF>>8;  // update data in array in case we use update all LED next 
     2b0:	f8 01       	movw	r30, r16
     2b2:	e4 56       	subi	r30, 0x64	; 100
     2b4:	ff 4f       	sbci	r31, 0xFF	; 255
     2b6:	10 82       	st	Z, r1
     2b8:	11 82       	std	Z+1, r1	; 0x01
     2ba:	12 82       	std	Z+2, r1	; 0x02
     2bc:	13 82       	std	Z+3, r1	; 0x03
    pca9685_send(address,0,led);        // update selected LED 
     2be:	8a ea       	ldi	r24, 0xAA	; 170
     2c0:	90 e0       	ldi	r25, 0x00	; 0
     2c2:	40 e0       	ldi	r20, 0x00	; 0
     2c4:	50 e0       	ldi	r21, 0x00	; 0
     2c6:	ba 01       	movw	r22, r20
     2c8:	29 c0       	rjmp	.+82     	; 0x31c <pca9685_brightness.constprop.1+0x86>
    return;                             // return from function 
    } 
    if (percent >= 100) {               // if % greater than 100 than LED ON 
     2ca:	84 36       	cpi	r24, 0x64	; 100
     2cc:	91 05       	cpc	r25, r1
     2ce:	74 f0       	brlt	.+28     	; 0x2ec <pca9685_brightness.constprop.1+0x56>
    PWMData[led] = PCA9685_LED_ON>>8;   // update data in array 
     2d0:	f8 01       	movw	r30, r16
     2d2:	e4 56       	subi	r30, 0x64	; 100
     2d4:	ff 4f       	sbci	r31, 0xFF	; 255
     2d6:	10 82       	st	Z, r1
     2d8:	11 82       	std	Z+1, r1	; 0x01
     2da:	12 82       	std	Z+2, r1	; 0x02
     2dc:	13 82       	std	Z+3, r1	; 0x03
    pca9685_send(address,4095,led);     // update selected LED 
     2de:	8a ea       	ldi	r24, 0xAA	; 170
     2e0:	90 e0       	ldi	r25, 0x00	; 0
     2e2:	4f ef       	ldi	r20, 0xFF	; 255
     2e4:	5f e0       	ldi	r21, 0x0F	; 15
     2e6:	60 e0       	ldi	r22, 0x00	; 0
     2e8:	70 e0       	ldi	r23, 0x00	; 0
     2ea:	18 c0       	rjmp	.+48     	; 0x31c <pca9685_brightness.constprop.1+0x86>
    return;                             // return from function 
    } 
    off = onePercent * percent;         // different approach with float need to check if code faster than int32 way ? 
     2ec:	9c 01       	movw	r18, r24
     2ee:	b9 01       	movw	r22, r18
     2f0:	88 27       	eor	r24, r24
     2f2:	77 fd       	sbrc	r23, 7
     2f4:	80 95       	com	r24
     2f6:	98 2f       	mov	r25, r24
     2f8:	f7 db       	rcall	.-2066   	; 0xfffffae8 <__eeprom_end+0xff7efae8>
     2fa:	2a e0       	ldi	r18, 0x0A	; 10
     2fc:	37 ed       	ldi	r19, 0xD7	; 215
     2fe:	43 e2       	ldi	r20, 0x23	; 35
     300:	52 e4       	ldi	r21, 0x42	; 66
     302:	56 dc       	rcall	.-1876   	; 0xfffffbb0 <__eeprom_end+0xff7efbb0>
//    off = (int32)4096 * percent;        // calculate percent (max*percent)/100 
//    off = off / 100;                    // ex (4096*50%)=204800/100=2048 
//    x = make16(off>>8,off);             // make 16 of 32 ?! why.. dont care at this time 
    PWMData[led] = off;                 // update data array in case we update all LED next 
     304:	be db       	rcall	.-2180   	; 0xfffffa82 <__eeprom_end+0xff7efa82>
     306:	ab 01       	movw	r20, r22
     308:	bc 01       	movw	r22, r24
     30a:	f8 01       	movw	r30, r16
     30c:	e4 56       	subi	r30, 0x64	; 100
     30e:	ff 4f       	sbci	r31, 0xFF	; 255
     310:	40 83       	st	Z, r20
     312:	51 83       	std	Z+1, r21	; 0x01
     314:	62 83       	std	Z+2, r22	; 0x02
     316:	73 83       	std	Z+3, r23	; 0x03
    pca9685_send(address,off,led);      // send it to pca9685 
     318:	8a ea       	ldi	r24, 0xAA	; 170
     31a:	90 e0       	ldi	r25, 0x00	; 0
     31c:	9e 01       	movw	r18, r28
     31e:	7f df       	rcall	.-258    	; 0x21e <pca9685_send>
} 
     320:	df 91       	pop	r29
     322:	cf 91       	pop	r28
     324:	1f 91       	pop	r17
     326:	0f 91       	pop	r16
     328:	08 95       	ret

0000032a <pca9685_brightness>:
    i2c_stop();                 // STop 
} 


void pca9685_brightness(int address, int percent, int led) 
{ 
     32a:	ef 92       	push	r14
     32c:	ff 92       	push	r15
     32e:	0f 93       	push	r16
     330:	1f 93       	push	r17
     332:	cf 93       	push	r28
     334:	df 93       	push	r29
     336:	8c 01       	movw	r16, r24
     338:	ea 01       	movw	r28, r20
     33a:	7a 01       	movw	r14, r20
     33c:	ee 0c       	add	r14, r14
     33e:	ff 1c       	adc	r15, r15
     340:	ee 0c       	add	r14, r14
     342:	ff 1c       	adc	r15, r15
/* LED to set brightness 0to15]             */ 
/* Output:[void]                            */ 
/********************************************/ 
    float off;                          // temp variable 
    const float onePercent = 40.96; 
    if (percent < 1) {                  // if % less than 1 than LED OFF 
     344:	16 16       	cp	r1, r22
     346:	17 06       	cpc	r1, r23
     348:	5c f0       	brlt	.+22     	; 0x360 <pca9685_brightness+0x36>
    PWMData[led] = PCA9685_LED_OFF>>8;  // update data in array in case we use update all LED next 
     34a:	f7 01       	movw	r30, r14
     34c:	e4 56       	subi	r30, 0x64	; 100
     34e:	ff 4f       	sbci	r31, 0xFF	; 255
     350:	10 82       	st	Z, r1
     352:	11 82       	std	Z+1, r1	; 0x01
     354:	12 82       	std	Z+2, r1	; 0x02
     356:	13 82       	std	Z+3, r1	; 0x03
    pca9685_send(address,0,led);        // update selected LED 
     358:	40 e0       	ldi	r20, 0x00	; 0
     35a:	50 e0       	ldi	r21, 0x00	; 0
     35c:	ba 01       	movw	r22, r20
     35e:	24 c0       	rjmp	.+72     	; 0x3a8 <pca9685_brightness+0x7e>
    return;                             // return from function 
    } 
    if (percent >= 100) {               // if % greater than 100 than LED ON 
     360:	64 36       	cpi	r22, 0x64	; 100
     362:	71 05       	cpc	r23, r1
     364:	64 f0       	brlt	.+24     	; 0x37e <pca9685_brightness+0x54>
    PWMData[led] = PCA9685_LED_ON>>8;   // update data in array 
     366:	f7 01       	movw	r30, r14
     368:	e4 56       	subi	r30, 0x64	; 100
     36a:	ff 4f       	sbci	r31, 0xFF	; 255
     36c:	10 82       	st	Z, r1
     36e:	11 82       	std	Z+1, r1	; 0x01
     370:	12 82       	std	Z+2, r1	; 0x02
     372:	13 82       	std	Z+3, r1	; 0x03
    pca9685_send(address,4095,led);     // update selected LED 
     374:	4f ef       	ldi	r20, 0xFF	; 255
     376:	5f e0       	ldi	r21, 0x0F	; 15
     378:	60 e0       	ldi	r22, 0x00	; 0
     37a:	70 e0       	ldi	r23, 0x00	; 0
     37c:	15 c0       	rjmp	.+42     	; 0x3a8 <pca9685_brightness+0x7e>
    return;                             // return from function 
    } 
    off = onePercent * percent;         // different approach with float need to check if code faster than int32 way ? 
     37e:	88 27       	eor	r24, r24
     380:	77 fd       	sbrc	r23, 7
     382:	80 95       	com	r24
     384:	98 2f       	mov	r25, r24
     386:	b0 db       	rcall	.-2208   	; 0xfffffae8 <__eeprom_end+0xff7efae8>
     388:	2a e0       	ldi	r18, 0x0A	; 10
     38a:	37 ed       	ldi	r19, 0xD7	; 215
     38c:	43 e2       	ldi	r20, 0x23	; 35
     38e:	52 e4       	ldi	r21, 0x42	; 66
     390:	0f dc       	rcall	.-2018   	; 0xfffffbb0 <__eeprom_end+0xff7efbb0>
//    off = (int32)4096 * percent;        // calculate percent (max*percent)/100 
//    off = off / 100;                    // ex (4096*50%)=204800/100=2048 
//    x = make16(off>>8,off);             // make 16 of 32 ?! why.. dont care at this time 
    PWMData[led] = off;                 // update data array in case we update all LED next 
     392:	77 db       	rcall	.-2322   	; 0xfffffa82 <__eeprom_end+0xff7efa82>
     394:	ab 01       	movw	r20, r22
     396:	bc 01       	movw	r22, r24
     398:	f7 01       	movw	r30, r14
     39a:	e4 56       	subi	r30, 0x64	; 100
     39c:	ff 4f       	sbci	r31, 0xFF	; 255
     39e:	40 83       	st	Z, r20
     3a0:	51 83       	std	Z+1, r21	; 0x01
     3a2:	62 83       	std	Z+2, r22	; 0x02
     3a4:	73 83       	std	Z+3, r23	; 0x03
    pca9685_send(address,off,led);      // send it to pca9685 
     3a6:	c8 01       	movw	r24, r16
     3a8:	9e 01       	movw	r18, r28
     3aa:	39 df       	rcall	.-398    	; 0x21e <pca9685_send>
} 
     3ac:	df 91       	pop	r29
     3ae:	cf 91       	pop	r28
     3b0:	1f 91       	pop	r17
     3b2:	0f 91       	pop	r16
     3b4:	ff 90       	pop	r15
     3b6:	ef 90       	pop	r14
     3b8:	08 95       	ret

000003ba <PCA9685AllLedOff>:

void PCA9685AllLedOff(int address) 
{ 
    i2c_start(address);                        // Start 
     3ba:	5c de       	rcall	.-840    	; 0x74 <i2c_start>
    i2c_write(ALL_LED_OFF_L);         // AllLED Off register 
     3bc:	8c ef       	ldi	r24, 0xFC	; 252
     3be:	7a de       	rcall	.-780    	; 0xb4 <i2c_write>
    i2c_write(0b00000000);              // data 
     3c0:	80 e0       	ldi	r24, 0x00	; 0
     3c2:	78 de       	rcall	.-784    	; 0xb4 <i2c_write>
    i2c_write(0b00010000);              // data 
     3c4:	80 e1       	ldi	r24, 0x10	; 16
     3c6:	76 de       	rcall	.-788    	; 0xb4 <i2c_write>
    i2c_stop();                         // Stop 
     3c8:	6d de       	rcall	.-806    	; 0xa4 <i2c_stop>
} 
     3ca:	08 95       	ret

000003cc <init_timer_isr>:
============================================================================*/
void init_timer_isr( void )
{
   /*  set timer compare value (how often timer ISR will fire set to 1 ms timer interrupt) */

   OCR0A = ( TICKS_PER_MS * 1);
     3cc:	84 e0       	ldi	r24, 0x04	; 4
     3ce:	86 bf       	out	0x36, r24	; 54

   /*  enable timer ISR on compare A */
   TIMSK0 |= 0x02u; // Caution
     3d0:	89 b7       	in	r24, 0x39	; 57
     3d2:	82 60       	ori	r24, 0x02	; 2
     3d4:	89 bf       	out	0x39, r24	; 57
   /*  timer prescaler = system clock / 1024  */
   TCCR0B |= 0x05u; // Caution
     3d6:	83 b7       	in	r24, 0x33	; 51
     3d8:	85 60       	ori	r24, 0x05	; 5
     3da:	83 bf       	out	0x33, r24	; 51
   /*  timer mode = CTC (count up to compare value, then reset)    */
   TCCR0A |= 0x02u; // Caution
     3dc:	80 b7       	in	r24, 0x30	; 48
     3de:	82 60       	ori	r24, 0x02	; 2
     3e0:	80 bf       	out	0x30, r24	; 48
}
     3e2:	08 95       	ret

000003e4 <__vector_9>:

ISR(TIM0_COMPA_vect)
{
     3e4:	1f 92       	push	r1
     3e6:	0f 92       	push	r0
     3e8:	0f b6       	in	r0, 0x3f	; 63
     3ea:	0f 92       	push	r0
     3ec:	11 24       	eor	r1, r1
     3ee:	2f 93       	push	r18
     3f0:	3f 93       	push	r19
     3f2:	8f 93       	push	r24
     3f4:	9f 93       	push	r25
  time_ms_inc++;
     3f6:	80 91 03 01 	lds	r24, 0x0103
     3fa:	90 91 04 01 	lds	r25, 0x0104
     3fe:	01 96       	adiw	r24, 0x01	; 1
     400:	90 93 04 01 	sts	0x0104, r25
     404:	80 93 03 01 	sts	0x0103, r24

  if(time_ms_inc >= qt_measurement_period_msec)
     408:	20 91 dc 00 	lds	r18, 0x00DC
     40c:	30 91 dd 00 	lds	r19, 0x00DD
     410:	82 17       	cp	r24, r18
     412:	93 07       	cpc	r25, r19
     414:	38 f0       	brcs	.+14     	; 0x424 <__vector_9+0x40>
  {
    time_ms_inc =0;
     416:	10 92 04 01 	sts	0x0104, r1
     41a:	10 92 03 01 	sts	0x0103, r1
   /*  set flag: it's time to measure touch    */
   time_to_measure_touch = 1u;
     41e:	81 e0       	ldi	r24, 0x01	; 1
     420:	80 93 02 01 	sts	0x0102, r24
  else
  {

  }
  /*  update the current time */
   current_time_ms_touch++;;
     424:	80 91 00 01 	lds	r24, 0x0100
     428:	90 91 01 01 	lds	r25, 0x0101
     42c:	01 96       	adiw	r24, 0x01	; 1
     42e:	90 93 01 01 	sts	0x0101, r25
     432:	80 93 00 01 	sts	0x0100, r24
}
     436:	9f 91       	pop	r25
     438:	8f 91       	pop	r24
     43a:	3f 91       	pop	r19
     43c:	2f 91       	pop	r18
     43e:	0f 90       	pop	r0
     440:	0f be       	out	0x3f, r0	; 63
     442:	0f 90       	pop	r0
     444:	1f 90       	pop	r1
     446:	18 95       	reti

00000448 <set_timer_period>:
------------------------------------------------------------------------------
Purpose :   set the timer period
============================================================================*/
void set_timer_period(uint16_t qt_measurement_period_msec)
{
	OCR0A = ( TICKS_PER_MS * 1);
     448:	84 e0       	ldi	r24, 0x04	; 4
     44a:	86 bf       	out	0x36, r24	; 54
}
     44c:	08 95       	ret

0000044e <init_system>:
Purpose :   initialise host app, pins, watchdog, etc
============================================================================*/
void init_system( void )
{
    /*  run at 4MHz (assuming internal clock is set to 8MHz)*/
    CLKPR = 0x80u;
     44e:	80 e8       	ldi	r24, 0x80	; 128
     450:	86 bd       	out	0x26, r24	; 38
    CLKPR = 0x01u;
     452:	81 e0       	ldi	r24, 0x01	; 1
     454:	86 bd       	out	0x26, r24	; 38

    /*  disable pull-ups    */
    MCUCR |= (1u << PUD);
     456:	85 b7       	in	r24, 0x35	; 53
     458:	80 64       	ori	r24, 0x40	; 64
     45a:	85 bf       	out	0x35, r24	; 53

}
     45c:	08 95       	ret

0000045e <_00110000001_>:
EXTERN reg_clyb;
EXTERN reg_flyab;
#endif
GLOBAL_FUNCTION _00110000001_
_00110000001_:
    push usr_1
     45e:	7f 93       	push	r23
    push usr_2
     460:	9f 93       	push	r25
    in   usr_1,REG(PORT,PORT_YB)
     462:	7b b3       	in	r23, 0x1b	; 27
    mov  usr_2,p_1
     464:	98 2f       	mov	r25, r24
    com  usr_2
     466:	90 95       	com	r25
    and  usr_1,usr_2
     468:	79 23       	and	r23, r25
    out  REG(PORT,PORT_YB),usr_1
     46a:	7b bb       	out	0x1b, r23	; 27
    in   usr_1,REG(PORT,PORT_YA)
     46c:	7b b3       	in	r23, 0x1b	; 27
    mov  usr_2,p_2
     46e:	96 2f       	mov	r25, r22
    com  usr_2
     470:	90 95       	com	r25
    and  usr_1,usr_2
     472:	79 23       	and	r23, r25
    out  REG(PORT,PORT_YA),usr_1
     474:	7b bb       	out	0x1b, r23	; 27
    mov  usr_2,p_1
     476:	98 2f       	mov	r25, r24
    in   usr_1,REG(DDR,PORT_YB)
     478:	7a b3       	in	r23, 0x1a	; 26
    or   usr_1,usr_2
     47a:	79 2b       	or	r23, r25
    out  REG(DDR,PORT_YB),usr_1
     47c:	7a bb       	out	0x1a, r23	; 26
    in   usr_1,REG(DDR,PORT_YA)
     47e:	7a b3       	in	r23, 0x1a	; 26
    mov  usr_2,p_2
     480:	96 2f       	mov	r25, r22
    or   usr_1,usr_2
     482:	79 2b       	or	r23, r25
    out  REG(DDR,PORT_YA),usr_1
     484:	7a bb       	out	0x1a, r23	; 26
#if (NUM_X_PORTS>=1)
    mov  usr_2,p_3
     486:	94 2f       	mov	r25, r20
    com  usr_2
     488:	90 95       	com	r25
    in   usr_1,REG(PORT,PORT_X_1)
     48a:	78 b3       	in	r23, 0x18	; 24
    and  usr_1,usr_2
     48c:	79 23       	and	r23, r25
    out  REG(PORT,PORT_X_1),usr_1
     48e:	78 bb       	out	0x18, r23	; 24
    in   usr_1, REG(DDR,PORT_X_1)
     490:	77 b3       	in	r23, 0x17	; 23
    mov  usr_2,p_3
     492:	94 2f       	mov	r25, r20
    or   usr_1, usr_2
     494:	79 2b       	or	r23, r25
    out  REG(DDR,PORT_X_1), usr_1    
     496:	77 bb       	out	0x17, r23	; 23
    in   usr_1, REG(DDR,PORT_X_3)
    mov  usr_2,p_5
    or   usr_1, usr_2
    out  REG(DDR,PORT_X_3), usr_1    
#endif
    cbi  REG( PORT, PORT_SMP ),SMP_BIT 
     498:	db 98       	cbi	0x1b, 3	; 27
    sbi  REG( DDR, PORT_SMP ),SMP_BIT
     49a:	d3 9a       	sbi	0x1a, 3	; 26
    pop  usr_2
     49c:	9f 91       	pop	r25
    pop  usr_1
     49e:	7f 91       	pop	r23
    ret
     4a0:	08 95       	ret

000004a2 <_00110000100_>:

GLOBAL_FUNCTION _00110000100_
_00110000100_:
    push usr_1
     4a2:	7f 93       	push	r23
    push usr_2
     4a4:	9f 93       	push	r25
    in   usr_1, REG( DDR, PORT_YA ) 
     4a6:	7a b3       	in	r23, 0x1a	; 26
    sts  reg_clya, usr_1
     4a8:	70 93 49 01 	sts	0x0149, r23
    sts  reg_flya, usr_1
     4ac:	70 93 53 01 	sts	0x0153, r23
    in   usr_1, REG( DDR, PORT_YB )
     4b0:	7a b3       	in	r23, 0x1a	; 26
    sts  reg_clyb, usr_1
     4b2:	70 93 4c 01 	sts	0x014C, r23
    sts  reg_flyb, usr_1    
     4b6:	70 93 4d 01 	sts	0x014D, r23

	mov  usr_1, p_1
     4ba:	78 2f       	mov	r23, r24
    com  usr_1
     4bc:	70 95       	com	r23
  	lds  usr_2, reg_flya
     4be:	90 91 53 01 	lds	r25, 0x0153
    and  usr_2,usr_1
     4c2:	97 23       	and	r25, r23
    sts  reg_flya, usr_2
     4c4:	90 93 53 01 	sts	0x0153, r25
  	mov  usr_1, p_2
     4c8:	76 2f       	mov	r23, r22
    com  usr_1
     4ca:	70 95       	com	r23
  	lds  usr_2, reg_flyb
     4cc:	90 91 4d 01 	lds	r25, 0x014D
	and  usr_2,usr_1
     4d0:	97 23       	and	r25, r23
    sts  reg_flyb, usr_2
     4d2:	90 93 4d 01 	sts	0x014D, r25
#if (SHARED_YAYB == 1) 
#elif (SHARED_YAYB == 0)
  clr  r_v
#endif  	
#if (SHARED_YAYB == 1)    
    push usr_3
     4d6:	5f 93       	push	r21
    mov  usr_1, p_1
     4d8:	78 2f       	mov	r23, r24
    mov  usr_2, p_2
     4da:	96 2f       	mov	r25, r22
    or   usr_2, usr_1
     4dc:	97 2b       	or	r25, r23
    com  usr_2
     4de:	90 95       	com	r25
    in   usr_1, REG( DDR, PORT_YA ) 
     4e0:	7a b3       	in	r23, 0x1a	; 26
    and  usr_2, usr_1
     4e2:	97 23       	and	r25, r23
    sts  reg_flyab, usr_2
     4e4:	90 93 4b 01 	sts	0x014B, r25
    mov  usr_3,usr_2
     4e8:	59 2f       	mov	r21, r25
    or   usr_2, p_2
     4ea:	96 2b       	or	r25, r22
    sts  reg_clyb, usr_2
     4ec:	90 93 4c 01 	sts	0x014C, r25
    mov  usr_2, usr_3
     4f0:	95 2f       	mov	r25, r21
    or   usr_2, p_1
     4f2:	98 2b       	or	r25, r24
    sts  reg_clya, usr_2
     4f4:	90 93 49 01 	sts	0x0149, r25
    lds  r_v, reg_flyab
     4f8:	80 91 4b 01 	lds	r24, 0x014B
    pop  usr_3
     4fc:	5f 91       	pop	r21
	_10100001_
	_01101001_
	_00011001_
	_00011001_
#endif
    lds  usr_1, reg_flyb 
     4fe:	70 91 4d 01 	lds	r23, 0x014D
    out  REG( DDR, PORT_YB ), usr_1
     502:	7a bb       	out	0x1a, r23	; 26
    pop  usr_2
     504:	9f 91       	pop	r25
    pop  usr_1
     506:	7f 91       	pop	r23
    ret
     508:	08 95       	ret

0000050a <_00110000010_>:

#if (NUM_X_PORTS>=1)
GLOBAL_FUNCTION _00110000010_
_00110000010_:
#if (SHARED_YAYB == 1)
    out  REG( DDR, PORT_YA ), p_2
     50a:	6a bb       	out	0x1a, r22	; 26
#elif (SHARED_YAYB == 0)
    out  REG( DDR, PORT_YA ), p_3
#endif
    out  REG( PIN, PORT_X_1 ), p_1  
     50c:	86 bb       	out	0x16, r24	; 22
	_10100010_
	_01101010_
	_00011001_
	_00011001_
#endif
    out  REG( DDR, PORT_YB ), p_6
     50e:	ea ba       	out	0x1a, r14	; 26
	_01101011_
	_00011001_
	_00011001_
#endif
#if (SHARED_YAYB == 1)
    out  REG( DDR, PORT_YB ), p_2
     510:	6a bb       	out	0x1a, r22	; 26
#elif (SHARED_YAYB == 0)
    out  REG( DDR, PORT_YB ), p_4
#endif    
    out  REG( DDR, PORT_YA ), p_5
     512:	0a bb       	out	0x1a, r16	; 26
    out  REG( PIN, PORT_X_1 ), p_1      
     514:	86 bb       	out	0x16, r24	; 22
	_10100100_
	_01101100_
	_00011001_
	_00011001_
#endif
    ret
     516:	08 95       	ret

00000518 <_00110000011_>:
/*//////////////////////////////////////////////////////////////////////////////////    */


GLOBAL_FUNCTION _00110000011_
_00110000011_:
    sbi  REG( PORT, PORT_SMP ),SMP_BIT  
     518:	db 9a       	sbi	0x1b, 3	; 27
    ret
     51a:	08 95       	ret

0000051c <_00110000110_>:
   
GLOBAL_FUNCTION _00110000110_
_00110000110_:
    cbi  REG( PORT, PORT_SMP ),SMP_BIT  
     51c:	db 98       	cbi	0x1b, 3	; 27
    lds  usr_1,reg_clyb 
     51e:	70 91 4c 01 	lds	r23, 0x014C
    out  REG( DDR, PORT_YB ), usr_1 
     522:	7a bb       	out	0x1a, r23	; 26
	_10100101_
	_01101101_
	_00011001_
	_00011001_
#endif
    ret
     524:	08 95       	ret

00000526 <touch_init>:
Output  :   n/a
Notes   :   Generated code from QTouch Studio. Do not change
============================================================================*/
static void config_sensors(void)
{
	qt_enable_key( CHANNEL_0, NO_AKS_GROUP, 26u, HYST_6_25 );
     526:	80 e0       	ldi	r24, 0x00	; 0
     528:	60 e0       	ldi	r22, 0x00	; 0
     52a:	4a e1       	ldi	r20, 0x1A	; 26
     52c:	23 e0       	ldi	r18, 0x03	; 3
     52e:	6f d1       	rcall	.+734    	; 0x80e <qt_enable_key>

    /* Configure the Sensors as keys or Keys With Rotor/Sliders in this function */
    config_sensors();

    /* initialize touch sensing */
    qt_init_sensing();
     530:	b0 d0       	rcall	.+352    	; 0x692 <qt_init_sensing_with_burst>

static void qt_set_parameters( void )
{

/*  This will be modified by the user to different values   */
qt_config_data.qt_di              = 2;
     532:	82 e0       	ldi	r24, 0x02	; 2
     534:	80 93 14 01 	sts	0x0114, r24
qt_config_data.qt_neg_drift_rate  = 20;
     538:	84 e1       	ldi	r24, 0x14	; 20
     53a:	80 93 17 01 	sts	0x0117, r24
qt_config_data.qt_pos_drift_rate  = 5;
     53e:	95 e0       	ldi	r25, 0x05	; 5
     540:	90 93 18 01 	sts	0x0118, r25
qt_config_data.qt_max_on_duration = 0;
     544:	10 92 16 01 	sts	0x0116, r1
qt_config_data.qt_drift_hold_time = 20;
     548:	80 93 15 01 	sts	0x0115, r24
qt_config_data.qt_recal_threshold = 1;
     54c:	e4 e1       	ldi	r30, 0x14	; 20
     54e:	f1 e0       	ldi	r31, 0x01	; 1
     550:	81 e0       	ldi	r24, 0x01	; 1
     552:	82 93       	st	-Z, r24
qt_config_data.qt_pos_recal_delay = 0;
     554:	16 82       	std	Z+6, r1	; 0x06
              qt_filter_callback = &set_timestamp1;
       #else
              qt_filter_callback = 0;
       #endif
       #else
              qt_filter_callback = 0;
     556:	10 92 1b 01 	sts	0x011B, r1
     55a:	10 92 1a 01 	sts	0x011A, r1
    /* Initialize debug protocol */
    QDebug_Init();
#endif

    /* enable interrupts */
    __enable_interrupt();
     55e:	78 94       	sei
#ifdef _DEBUG_INTERFACE_
    /* Process commands from PC */
    QDebug_ProcessCommands();
#endif

}
     560:	08 95       	ret

00000562 <touch_measure>:
{
   /*status flags to indicate the re-burst for library*/
   static uint16_t status_flag = 0u;
   static uint16_t burst_flag = 0u;

	  if( time_to_measure_touch )
     562:	80 91 02 01 	lds	r24, 0x0102
     566:	88 23       	and	r24, r24
     568:	99 f0       	breq	.+38     	; 0x590 <touch_measure+0x2e>
        {

            /*  clear flag: it's time to measure touch  */
            time_to_measure_touch = 0u;
     56a:	10 92 02 01 	sts	0x0102, r1
				#ifdef _QDEBUG_TIME_STAMPS_
						TIMESTAMP0;
				#endif
				#endif
                /*  one time measure touch sensors    */
                status_flag = qt_measure_sensors( current_time_ms_touch );
     56e:	80 91 00 01 	lds	r24, 0x0100
     572:	90 91 01 01 	lds	r25, 0x0101
     576:	d3 d0       	rcall	.+422    	; 0x71e <qt_measure_sensors>
     578:	90 93 06 01 	sts	0x0106, r25
     57c:	80 93 05 01 	sts	0x0105, r24
				#ifdef _DEBUG_INTERFACE_
				#ifdef _QDEBUG_TIME_STAMPS_
					  TIMESTAMP2;
				#endif
				#endif
                burst_flag = status_flag & QTLIB_BURST_AGAIN;
     580:	80 70       	andi	r24, 0x00	; 0
     582:	91 70       	andi	r25, 0x01	; 1
     584:	90 93 08 01 	sts	0x0108, r25
     588:	80 93 07 01 	sts	0x0107, r24

                /* Time-critical host application code goes here */
				
				

            }while (burst_flag) ;
     58c:	00 97       	sbiw	r24, 0x00	; 0
     58e:	79 f7       	brne	.-34     	; 0x56e <touch_measure+0xc>

        }

return status_flag;

}
     590:	80 91 05 01 	lds	r24, 0x0105
     594:	90 91 06 01 	lds	r25, 0x0106
     598:	08 95       	ret

0000059a <burst_qm_1>:
     59a:	a0 e0       	ldi	r26, 0x00	; 0
     59c:	b0 e0       	ldi	r27, 0x00	; 0
     59e:	e2 ed       	ldi	r30, 0xD2	; 210
     5a0:	f2 e0       	ldi	r31, 0x02	; 2
     5a2:	b4 cb       	rjmp	.-2200   	; 0xfffffd0c <__eeprom_end+0xff7efd0c>
     5a4:	c8 2f       	mov	r28, r24
     5a6:	16 2f       	mov	r17, r22
     5a8:	f8 94       	cli
     5aa:	00 98       	cbi	0x00, 0	; 0
     5ac:	e8 2f       	mov	r30, r24
     5ae:	e6 95       	lsr	r30
     5b0:	e6 95       	lsr	r30
     5b2:	f0 e0       	ldi	r31, 0x00	; 0
     5b4:	ee 0f       	add	r30, r30
     5b6:	ff 1f       	adc	r31, r31
     5b8:	df 01       	movw	r26, r30
     5ba:	ac 51       	subi	r26, 0x1C	; 28
     5bc:	bf 4f       	sbci	r27, 0xFF	; 255
     5be:	8c 91       	ld	r24, X
     5c0:	87 b9       	out	0x07, r24	; 7
     5c2:	00 9a       	sbi	0x00, 0	; 0
     5c4:	df 01       	movw	r26, r30
     5c6:	a9 51       	subi	r26, 0x19	; 25
     5c8:	bf 4f       	sbci	r27, 0xFF	; 255
     5ca:	eb 51       	subi	r30, 0x1B	; 27
     5cc:	ff 4f       	sbci	r31, 0xFF	; 255
     5ce:	8c 91       	ld	r24, X
     5d0:	60 81       	ld	r22, Z
     5d2:	67 df       	rcall	.-306    	; 0x4a2 <_00110000100_>
     5d4:	f8 2e       	mov	r15, r24
     5d6:	d0 e0       	ldi	r29, 0x00	; 0
     5d8:	fe 01       	movw	r30, r28
     5da:	e5 50       	subi	r30, 0x05	; 5
     5dc:	ff 4f       	sbci	r31, 0xFF	; 255
     5de:	b0 80       	ld	r11, Z
     5e0:	dd 24       	eor	r13, r13
     5e2:	cc 24       	eor	r12, r12
     5e4:	c3 94       	inc	r12
     5e6:	1e c0       	rjmp	.+60     	; 0x624 <burst_qm_1+0x8a>
     5e8:	81 2f       	mov	r24, r17
     5ea:	6f 2d       	mov	r22, r15
     5ec:	40 91 53 01 	lds	r20, 0x0153
     5f0:	20 91 4d 01 	lds	r18, 0x014D
     5f4:	00 91 49 01 	lds	r16, 0x0149
     5f8:	e0 90 4c 01 	lds	r14, 0x014C
     5fc:	86 df       	rcall	.-244    	; 0x50a <_00110000010_>
     5fe:	8f b7       	in	r24, 0x3f	; 63
     600:	90 91 4a 01 	lds	r25, 0x014A
     604:	89 2b       	or	r24, r25
     606:	8f bf       	out	0x3f, r24	; 63
     608:	80 91 fa 00 	lds	r24, 0x00FA
     60c:	8f 5f       	subi	r24, 0xFF	; 255
     60e:	80 93 fa 00 	sts	0x00FA, r24
     612:	82 30       	cpi	r24, 0x02	; 2
     614:	30 f0       	brcs	.+12     	; 0x622 <burst_qm_1+0x88>
     616:	82 30       	cpi	r24, 0x02	; 2
     618:	21 f0       	breq	.+8      	; 0x622 <burst_qm_1+0x88>
     61a:	83 30       	cpi	r24, 0x03	; 3
     61c:	11 f0       	breq	.+4      	; 0x622 <burst_qm_1+0x88>
     61e:	c0 92 fa 00 	sts	0x00FA, r12
     622:	d3 94       	inc	r13
     624:	f8 94       	cli
     626:	db 14       	cp	r13, r11
     628:	f9 f6       	brne	.-66     	; 0x5e8 <burst_qm_1+0x4e>
     62a:	76 df       	rcall	.-276    	; 0x518 <_00110000011_>
     62c:	1d bc       	out	0x2d, r1	; 45
     62e:	1c bc       	out	0x2c, r1	; 44
     630:	5d 9a       	sbi	0x0b, 5	; 11
     632:	45 9b       	sbis	0x08, 5	; 8
     634:	15 c0       	rjmp	.+42     	; 0x660 <burst_qm_1+0xc6>
     636:	8f b7       	in	r24, 0x3f	; 63
     638:	90 91 4a 01 	lds	r25, 0x014A
     63c:	89 2b       	or	r24, r25
     63e:	8f bf       	out	0x3f, r24	; 63
     640:	06 c0       	rjmp	.+12     	; 0x64e <burst_qm_1+0xb4>
     642:	8c b5       	in	r24, 0x2c	; 44
     644:	9d b5       	in	r25, 0x2d	; 45
     646:	20 e2       	ldi	r18, 0x20	; 32
     648:	80 30       	cpi	r24, 0x00	; 0
     64a:	92 07       	cpc	r25, r18
     64c:	80 f4       	brcc	.+32     	; 0x66e <burst_qm_1+0xd4>
     64e:	5d 9b       	sbis	0x0b, 5	; 11
     650:	f8 cf       	rjmp	.-16     	; 0x642 <burst_qm_1+0xa8>
     652:	84 b5       	in	r24, 0x24	; 36
     654:	95 b5       	in	r25, 0x25	; 37
     656:	cc 0f       	add	r28, r28
     658:	dd 1f       	adc	r29, r29
     65a:	c4 5e       	subi	r28, 0xE4	; 228
     65c:	de 4f       	sbci	r29, 0xFE	; 254
     65e:	0d c0       	rjmp	.+26     	; 0x67a <burst_qm_1+0xe0>
     660:	cc 0f       	add	r28, r28
     662:	dd 1f       	adc	r29, r29
     664:	c4 5e       	subi	r28, 0xE4	; 228
     666:	de 4f       	sbci	r29, 0xFE	; 254
     668:	81 e0       	ldi	r24, 0x01	; 1
     66a:	90 e0       	ldi	r25, 0x00	; 0
     66c:	06 c0       	rjmp	.+12     	; 0x67a <burst_qm_1+0xe0>
     66e:	cc 0f       	add	r28, r28
     670:	dd 1f       	adc	r29, r29
     672:	c4 5e       	subi	r28, 0xE4	; 228
     674:	de 4f       	sbci	r29, 0xFE	; 254
     676:	80 e0       	ldi	r24, 0x00	; 0
     678:	90 e2       	ldi	r25, 0x20	; 32
     67a:	99 83       	std	Y+1, r25	; 0x01
     67c:	88 83       	st	Y, r24
     67e:	4e df       	rcall	.-356    	; 0x51c <_00110000110_>
     680:	8f b7       	in	r24, 0x3f	; 63
     682:	90 91 4a 01 	lds	r25, 0x014A
     686:	89 2b       	or	r24, r25
     688:	8f bf       	out	0x3f, r24	; 63
     68a:	cd b7       	in	r28, 0x3d	; 61
     68c:	de b7       	in	r29, 0x3e	; 62
     68e:	e9 e0       	ldi	r30, 0x09	; 9
     690:	59 cb       	rjmp	.-2382   	; 0xfffffd44 <__eeprom_end+0xff7efd44>

00000692 <qt_init_sensing_with_burst>:
     692:	cf 93       	push	r28
     694:	c0 e0       	ldi	r28, 0x00	; 0
     696:	03 c0       	rjmp	.+6      	; 0x69e <qt_init_sensing_with_burst+0xc>
     698:	8c 2f       	mov	r24, r28
     69a:	9a d1       	rcall	.+820    	; 0x9d0 <start_cal_sensor>
     69c:	cf 5f       	subi	r28, 0xFF	; 255
     69e:	80 91 30 01 	lds	r24, 0x0130
     6a2:	c8 17       	cp	r28, r24
     6a4:	c8 f3       	brcs	.-14     	; 0x698 <qt_init_sensing_with_burst+0x6>
     6a6:	10 92 0c 01 	sts	0x010C, r1
     6aa:	10 92 0b 01 	sts	0x010B, r1
     6ae:	da d4       	rcall	.+2484   	; 0x1064 <burst_init>
     6b0:	cf 91       	pop	r28
     6b2:	08 95       	ret

000006b4 <qt_get_library_sig>:
     6b4:	fc 01       	movw	r30, r24
     6b6:	81 e2       	ldi	r24, 0x21	; 33
     6b8:	90 e0       	ldi	r25, 0x00	; 0
     6ba:	91 83       	std	Z+1, r25	; 0x01
     6bc:	80 83       	st	Z, r24
     6be:	84 e2       	ldi	r24, 0x24	; 36
     6c0:	90 e0       	ldi	r25, 0x00	; 0
     6c2:	93 83       	std	Z+3, r25	; 0x03
     6c4:	82 83       	std	Z+2, r24	; 0x02
     6c6:	80 e0       	ldi	r24, 0x00	; 0
     6c8:	95 e0       	ldi	r25, 0x05	; 5
     6ca:	95 83       	std	Z+5, r25	; 0x05
     6cc:	84 83       	std	Z+4, r24	; 0x04
     6ce:	08 95       	ret

000006d0 <qt_calibrate_sensing>:
     6d0:	cf 93       	push	r28
     6d2:	c0 e0       	ldi	r28, 0x00	; 0
     6d4:	03 c0       	rjmp	.+6      	; 0x6dc <qt_calibrate_sensing+0xc>
     6d6:	8c 2f       	mov	r24, r28
     6d8:	7b d1       	rcall	.+758    	; 0x9d0 <start_cal_sensor>
     6da:	cf 5f       	subi	r28, 0xFF	; 255
     6dc:	80 91 30 01 	lds	r24, 0x0130
     6e0:	c8 17       	cp	r28, r24
     6e2:	c8 f3       	brcs	.-14     	; 0x6d6 <qt_calibrate_sensing+0x6>
     6e4:	cf 91       	pop	r28
     6e6:	08 95       	ret

000006e8 <qt_reset_sensing>:
     6e8:	10 92 30 01 	sts	0x0130, r1
     6ec:	84 e0       	ldi	r24, 0x04	; 4
     6ee:	80 93 14 01 	sts	0x0114, r24
     6f2:	84 e1       	ldi	r24, 0x14	; 20
     6f4:	80 93 17 01 	sts	0x0117, r24
     6f8:	95 e0       	ldi	r25, 0x05	; 5
     6fa:	90 93 18 01 	sts	0x0118, r25
     6fe:	10 92 16 01 	sts	0x0116, r1
     702:	80 93 15 01 	sts	0x0115, r24
     706:	e4 e1       	ldi	r30, 0x14	; 20
     708:	f1 e0       	ldi	r31, 0x01	; 1
     70a:	81 e0       	ldi	r24, 0x01	; 1
     70c:	82 93       	st	-Z, r24
     70e:	83 e0       	ldi	r24, 0x03	; 3
     710:	86 83       	std	Z+6, r24	; 0x06
     712:	09 d5       	rcall	.+2578   	; 0x1126 <burst_reset>
     714:	10 92 1b 01 	sts	0x011B, r1
     718:	10 92 1a 01 	sts	0x011A, r1
     71c:	08 95       	ret

0000071e <qt_measure_sensors>:
     71e:	1f 93       	push	r17
     720:	cf 93       	push	r28
     722:	df 93       	push	r29
     724:	10 92 2e 01 	sts	0x012E, r1
     728:	10 92 2d 01 	sts	0x012D, r1
     72c:	40 91 0b 01 	lds	r20, 0x010B
     730:	50 91 0c 01 	lds	r21, 0x010C
     734:	90 93 0c 01 	sts	0x010C, r25
     738:	80 93 0b 01 	sts	0x010B, r24
     73c:	20 91 0d 01 	lds	r18, 0x010D
     740:	30 91 0e 01 	lds	r19, 0x010E
     744:	24 1b       	sub	r18, r20
     746:	35 0b       	sbc	r19, r21
     748:	28 0f       	add	r18, r24
     74a:	39 1f       	adc	r19, r25
     74c:	c0 e0       	ldi	r28, 0x00	; 0
     74e:	03 c0       	rjmp	.+6      	; 0x756 <qt_measure_sensors+0x38>
     750:	28 5c       	subi	r18, 0xC8	; 200
     752:	30 40       	sbci	r19, 0x00	; 0
     754:	cf 5f       	subi	r28, 0xFF	; 255
     756:	28 3c       	cpi	r18, 0xC8	; 200
     758:	31 05       	cpc	r19, r1
     75a:	d0 f7       	brcc	.-12     	; 0x750 <qt_measure_sensors+0x32>
     75c:	30 93 0e 01 	sts	0x010E, r19
     760:	20 93 0d 01 	sts	0x010D, r18
     764:	80 91 2f 01 	lds	r24, 0x012F
     768:	88 23       	and	r24, r24
     76a:	41 f0       	breq	.+16     	; 0x77c <qt_measure_sensors+0x5e>
     76c:	8c 17       	cp	r24, r28
     76e:	18 f4       	brcc	.+6      	; 0x776 <qt_measure_sensors+0x58>
     770:	10 92 2f 01 	sts	0x012F, r1
     774:	03 c0       	rjmp	.+6      	; 0x77c <qt_measure_sensors+0x5e>
     776:	8c 1b       	sub	r24, r28
     778:	80 93 2f 01 	sts	0x012F, r24
     77c:	de d4       	rcall	.+2492   	; 0x113a <burst>
     77e:	e0 91 1a 01 	lds	r30, 0x011A
     782:	f0 91 1b 01 	lds	r31, 0x011B
     786:	30 97       	sbiw	r30, 0x00	; 0
     788:	09 f0       	breq	.+2      	; 0x78c <qt_measure_sensors+0x6e>
     78a:	09 95       	icall
     78c:	10 e0       	ldi	r17, 0x00	; 0
     78e:	d0 e0       	ldi	r29, 0x00	; 0
     790:	05 c0       	rjmp	.+10     	; 0x79c <qt_measure_sensors+0x7e>
     792:	8d 2f       	mov	r24, r29
     794:	6c 2f       	mov	r22, r28
     796:	37 d1       	rcall	.+622    	; 0xa06 <process_sensor>
     798:	18 2b       	or	r17, r24
     79a:	df 5f       	subi	r29, 0xFF	; 255
     79c:	50 91 30 01 	lds	r21, 0x0130
     7a0:	d5 17       	cp	r29, r21
     7a2:	b8 f3       	brcs	.-18     	; 0x792 <qt_measure_sensors+0x74>
     7a4:	11 23       	and	r17, r17
     7a6:	49 f0       	breq	.+18     	; 0x7ba <qt_measure_sensors+0x9c>
     7a8:	80 91 2d 01 	lds	r24, 0x012D
     7ac:	90 91 2e 01 	lds	r25, 0x012E
     7b0:	91 60       	ori	r25, 0x01	; 1
     7b2:	90 93 2e 01 	sts	0x012E, r25
     7b6:	80 93 2d 01 	sts	0x012D, r24
     7ba:	10 92 2c 01 	sts	0x012C, r1
     7be:	a1 e3       	ldi	r26, 0x31	; 49
     7c0:	b1 e0       	ldi	r27, 0x01	; 1
     7c2:	40 e0       	ldi	r20, 0x00	; 0
     7c4:	81 e0       	ldi	r24, 0x01	; 1
     7c6:	90 e0       	ldi	r25, 0x00	; 0
     7c8:	18 c0       	rjmp	.+48     	; 0x7fa <qt_measure_sensors+0xdc>
     7ca:	2c 91       	ld	r18, X
     7cc:	28 71       	andi	r18, 0x18	; 24
     7ce:	99 f0       	breq	.+38     	; 0x7f6 <qt_measure_sensors+0xd8>
     7d0:	e4 2f       	mov	r30, r20
     7d2:	e6 95       	lsr	r30
     7d4:	e6 95       	lsr	r30
     7d6:	e6 95       	lsr	r30
     7d8:	f0 e0       	ldi	r31, 0x00	; 0
     7da:	e4 5e       	subi	r30, 0xE4	; 228
     7dc:	fe 4f       	sbci	r31, 0xFE	; 254
     7de:	24 2f       	mov	r18, r20
     7e0:	27 70       	andi	r18, 0x07	; 7
     7e2:	bc 01       	movw	r22, r24
     7e4:	02 c0       	rjmp	.+4      	; 0x7ea <qt_measure_sensors+0xcc>
     7e6:	66 0f       	add	r22, r22
     7e8:	77 1f       	adc	r23, r23
     7ea:	2a 95       	dec	r18
     7ec:	e2 f7       	brpl	.-8      	; 0x7e6 <qt_measure_sensors+0xc8>
     7ee:	9b 01       	movw	r18, r22
     7f0:	30 89       	ldd	r19, Z+16	; 0x10
     7f2:	32 2b       	or	r19, r18
     7f4:	30 8b       	std	Z+16, r19	; 0x10
     7f6:	4f 5f       	subi	r20, 0xFF	; 255
     7f8:	16 96       	adiw	r26, 0x06	; 6
     7fa:	45 17       	cp	r20, r21
     7fc:	31 f7       	brne	.-52     	; 0x7ca <qt_measure_sensors+0xac>
     7fe:	80 91 2d 01 	lds	r24, 0x012D
     802:	90 91 2e 01 	lds	r25, 0x012E
     806:	df 91       	pop	r29
     808:	cf 91       	pop	r28
     80a:	1f 91       	pop	r17
     80c:	08 95       	ret

0000080e <qt_enable_key>:
     80e:	cf 93       	push	r28
     810:	df 93       	push	r29
     812:	c8 2f       	mov	r28, r24
     814:	d6 2f       	mov	r29, r22
     816:	30 91 30 01 	lds	r19, 0x0130
     81a:	e1 e3       	ldi	r30, 0x31	; 49
     81c:	f1 e0       	ldi	r31, 0x01	; 1
     81e:	83 2f       	mov	r24, r19
     820:	90 e0       	ldi	r25, 0x00	; 0
     822:	66 e0       	ldi	r22, 0x06	; 6
     824:	70 e0       	ldi	r23, 0x00	; 0
     826:	57 da       	rcall	.-2898   	; 0xfffffcd6 <__eeprom_end+0xff7efcd6>
     828:	df 01       	movw	r26, r30
     82a:	a8 0f       	add	r26, r24
     82c:	b9 1f       	adc	r27, r25
     82e:	13 96       	adiw	r26, 0x03	; 3
     830:	4c 93       	st	X, r20
     832:	83 2f       	mov	r24, r19
     834:	90 e0       	ldi	r25, 0x00	; 0
     836:	66 e0       	ldi	r22, 0x06	; 6
     838:	70 e0       	ldi	r23, 0x00	; 0
     83a:	4d da       	rcall	.-2918   	; 0xfffffcd6 <__eeprom_end+0xff7efcd6>
     83c:	df 01       	movw	r26, r30
     83e:	a8 0f       	add	r26, r24
     840:	b9 1f       	adc	r27, r25
     842:	d7 70       	andi	r29, 0x07	; 7
     844:	dd 0f       	add	r29, r29
     846:	dd 0f       	add	r29, r29
     848:	dd 0f       	add	r29, r29
     84a:	14 96       	adiw	r26, 0x04	; 4
     84c:	dc 93       	st	X, r29
     84e:	83 2f       	mov	r24, r19
     850:	90 e0       	ldi	r25, 0x00	; 0
     852:	66 e0       	ldi	r22, 0x06	; 6
     854:	70 e0       	ldi	r23, 0x00	; 0
     856:	3f da       	rcall	.-2946   	; 0xfffffcd6 <__eeprom_end+0xff7efcd6>
     858:	df 01       	movw	r26, r30
     85a:	a8 0f       	add	r26, r24
     85c:	b9 1f       	adc	r27, r25
     85e:	15 96       	adiw	r26, 0x05	; 5
     860:	cc 93       	st	X, r28
     862:	83 2f       	mov	r24, r19
     864:	90 e0       	ldi	r25, 0x00	; 0
     866:	66 e0       	ldi	r22, 0x06	; 6
     868:	70 e0       	ldi	r23, 0x00	; 0
     86a:	35 da       	rcall	.-2966   	; 0xfffffcd6 <__eeprom_end+0xff7efcd6>
     86c:	df 01       	movw	r26, r30
     86e:	a8 0f       	add	r26, r24
     870:	b9 1f       	adc	r27, r25
     872:	23 70       	andi	r18, 0x03	; 3
     874:	83 2f       	mov	r24, r19
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	66 e0       	ldi	r22, 0x06	; 6
     87a:	70 e0       	ldi	r23, 0x00	; 0
     87c:	2c da       	rcall	.-2984   	; 0xfffffcd6 <__eeprom_end+0xff7efcd6>
     87e:	e8 0f       	add	r30, r24
     880:	f9 1f       	adc	r31, r25
     882:	84 81       	ldd	r24, Z+4	; 0x04
     884:	8c 7f       	andi	r24, 0xFC	; 252
     886:	28 2b       	or	r18, r24
     888:	14 96       	adiw	r26, 0x04	; 4
     88a:	2c 93       	st	X, r18
     88c:	14 97       	sbiw	r26, 0x04	; 4
     88e:	3f 5f       	subi	r19, 0xFF	; 255
     890:	30 93 30 01 	sts	0x0130, r19
     894:	df 91       	pop	r29
     896:	cf 91       	pop	r28
     898:	08 95       	ret

0000089a <qt_get_sensor_delta>:
     89a:	0f 93       	push	r16
     89c:	1f 93       	push	r17
     89e:	cf 93       	push	r28
     8a0:	c8 2f       	mov	r28, r24
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	66 e0       	ldi	r22, 0x06	; 6
     8a6:	70 e0       	ldi	r23, 0x00	; 0
     8a8:	16 da       	rcall	.-3028   	; 0xfffffcd6 <__eeprom_end+0xff7efcd6>
     8aa:	fc 01       	movw	r30, r24
     8ac:	ef 5c       	subi	r30, 0xCF	; 207
     8ae:	fe 4f       	sbci	r31, 0xFE	; 254
     8b0:	45 81       	ldd	r20, Z+5	; 0x05
     8b2:	8c 2f       	mov	r24, r28
     8b4:	90 e0       	ldi	r25, 0x00	; 0
     8b6:	66 e0       	ldi	r22, 0x06	; 6
     8b8:	70 e0       	ldi	r23, 0x00	; 0
     8ba:	0d da       	rcall	.-3046   	; 0xfffffcd6 <__eeprom_end+0xff7efcd6>
     8bc:	fc 01       	movw	r30, r24
     8be:	ef 5c       	subi	r30, 0xCF	; 207
     8c0:	fe 4f       	sbci	r31, 0xFE	; 254
     8c2:	23 81       	ldd	r18, Z+3	; 0x03
     8c4:	30 e0       	ldi	r19, 0x00	; 0
     8c6:	00 90 13 01 	lds	r0, 0x0113
     8ca:	02 c0       	rjmp	.+4      	; 0x8d0 <qt_get_sensor_delta+0x36>
     8cc:	35 95       	asr	r19
     8ce:	27 95       	ror	r18
     8d0:	0a 94       	dec	r0
     8d2:	e2 f7       	brpl	.-8      	; 0x8cc <qt_get_sensor_delta+0x32>
     8d4:	02 2f       	mov	r16, r18
     8d6:	24 30       	cpi	r18, 0x04	; 4
     8d8:	08 f4       	brcc	.+2      	; 0x8dc <qt_get_sensor_delta+0x42>
     8da:	04 e0       	ldi	r16, 0x04	; 4
     8dc:	80 91 30 01 	lds	r24, 0x0130
     8e0:	c8 17       	cp	r28, r24
     8e2:	f0 f5       	brcc	.+124    	; 0x960 <qt_get_sensor_delta+0xc6>
     8e4:	84 2f       	mov	r24, r20
     8e6:	a8 d3       	rcall	.+1872   	; 0x1038 <get_channel_delta>
     8e8:	9c 01       	movw	r18, r24
     8ea:	a0 2f       	mov	r26, r16
     8ec:	b0 e0       	ldi	r27, 0x00	; 0
     8ee:	06 95       	lsr	r16
     8f0:	06 95       	lsr	r16
     8f2:	80 2f       	mov	r24, r16
     8f4:	90 e0       	ldi	r25, 0x00	; 0
     8f6:	8a 1b       	sub	r24, r26
     8f8:	9b 0b       	sbc	r25, r27
     8fa:	82 17       	cp	r24, r18
     8fc:	93 07       	cpc	r25, r19
     8fe:	a4 f4       	brge	.+40     	; 0x928 <qt_get_sensor_delta+0x8e>
     900:	8c 2f       	mov	r24, r28
     902:	90 e0       	ldi	r25, 0x00	; 0
     904:	66 e0       	ldi	r22, 0x06	; 6
     906:	70 e0       	ldi	r23, 0x00	; 0
     908:	e6 d9       	rcall	.-3124   	; 0xfffffcd6 <__eeprom_end+0xff7efcd6>
     90a:	8c 01       	movw	r16, r24
     90c:	0f 5c       	subi	r16, 0xCF	; 207
     90e:	1e 4f       	sbci	r17, 0xFE	; 254
     910:	8c 2f       	mov	r24, r28
     912:	90 e0       	ldi	r25, 0x00	; 0
     914:	66 e0       	ldi	r22, 0x06	; 6
     916:	70 e0       	ldi	r23, 0x00	; 0
     918:	de d9       	rcall	.-3140   	; 0xfffffcd6 <__eeprom_end+0xff7efcd6>
     91a:	fc 01       	movw	r30, r24
     91c:	ef 5c       	subi	r30, 0xCF	; 207
     91e:	fe 4f       	sbci	r31, 0xFE	; 254
     920:	84 81       	ldd	r24, Z+4	; 0x04
     922:	8b 7f       	andi	r24, 0xFB	; 251
     924:	f8 01       	movw	r30, r16
     926:	84 83       	std	Z+4, r24	; 0x04
     928:	b0 95       	com	r27
     92a:	a1 95       	neg	r26
     92c:	bf 4f       	sbci	r27, 0xFF	; 255
     92e:	a2 17       	cp	r26, r18
     930:	b3 07       	cpc	r27, r19
     932:	c4 f0       	brlt	.+48     	; 0x964 <qt_get_sensor_delta+0xca>
     934:	8c 2f       	mov	r24, r28
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	66 e0       	ldi	r22, 0x06	; 6
     93a:	70 e0       	ldi	r23, 0x00	; 0
     93c:	cc d9       	rcall	.-3176   	; 0xfffffcd6 <__eeprom_end+0xff7efcd6>
     93e:	fc 01       	movw	r30, r24
     940:	ef 5c       	subi	r30, 0xCF	; 207
     942:	fe 4f       	sbci	r31, 0xFE	; 254
     944:	8c 2f       	mov	r24, r28
     946:	90 e0       	ldi	r25, 0x00	; 0
     948:	66 e0       	ldi	r22, 0x06	; 6
     94a:	70 e0       	ldi	r23, 0x00	; 0
     94c:	c4 d9       	rcall	.-3192   	; 0xfffffcd6 <__eeprom_end+0xff7efcd6>
     94e:	dc 01       	movw	r26, r24
     950:	af 5c       	subi	r26, 0xCF	; 207
     952:	be 4f       	sbci	r27, 0xFE	; 254
     954:	14 96       	adiw	r26, 0x04	; 4
     956:	8c 91       	ld	r24, X
     958:	14 97       	sbiw	r26, 0x04	; 4
     95a:	84 60       	ori	r24, 0x04	; 4
     95c:	84 83       	std	Z+4, r24	; 0x04
     95e:	02 c0       	rjmp	.+4      	; 0x964 <qt_get_sensor_delta+0xca>
     960:	20 e0       	ldi	r18, 0x00	; 0
     962:	30 e0       	ldi	r19, 0x00	; 0
     964:	c9 01       	movw	r24, r18
     966:	cf 91       	pop	r28
     968:	1f 91       	pop	r17
     96a:	0f 91       	pop	r16
     96c:	08 95       	ret

0000096e <goto_no_detect>:
     96e:	cf 93       	push	r28
     970:	c8 2f       	mov	r28, r24
     972:	21 e3       	ldi	r18, 0x31	; 49
     974:	31 e0       	ldi	r19, 0x01	; 1
     976:	90 e0       	ldi	r25, 0x00	; 0
     978:	66 e0       	ldi	r22, 0x06	; 6
     97a:	70 e0       	ldi	r23, 0x00	; 0
     97c:	ac d9       	rcall	.-3240   	; 0xfffffcd6 <__eeprom_end+0xff7efcd6>
     97e:	f9 01       	movw	r30, r18
     980:	e8 0f       	add	r30, r24
     982:	f9 1f       	adc	r31, r25
     984:	e5 81       	ldd	r30, Z+5	; 0x05
     986:	8c 2f       	mov	r24, r28
     988:	90 e0       	ldi	r25, 0x00	; 0
     98a:	66 e0       	ldi	r22, 0x06	; 6
     98c:	70 e0       	ldi	r23, 0x00	; 0
     98e:	a3 d9       	rcall	.-3258   	; 0xfffffcd6 <__eeprom_end+0xff7efcd6>
     990:	d9 01       	movw	r26, r18
     992:	a8 0f       	add	r26, r24
     994:	b9 1f       	adc	r27, r25
     996:	82 e0       	ldi	r24, 0x02	; 2
     998:	8c 93       	st	X, r24
     99a:	40 91 2d 01 	lds	r20, 0x012D
     99e:	50 91 2e 01 	lds	r21, 0x012E
     9a2:	42 60       	ori	r20, 0x02	; 2
     9a4:	50 93 2e 01 	sts	0x012E, r21
     9a8:	40 93 2d 01 	sts	0x012D, r20
     9ac:	8c 2f       	mov	r24, r28
     9ae:	90 e0       	ldi	r25, 0x00	; 0
     9b0:	66 e0       	ldi	r22, 0x06	; 6
     9b2:	70 e0       	ldi	r23, 0x00	; 0
     9b4:	90 d9       	rcall	.-3296   	; 0xfffffcd6 <__eeprom_end+0xff7efcd6>
     9b6:	28 0f       	add	r18, r24
     9b8:	39 1f       	adc	r19, r25
     9ba:	d9 01       	movw	r26, r18
     9bc:	12 96       	adiw	r26, 0x02	; 2
     9be:	1c 92       	st	X, r1
     9c0:	12 97       	sbiw	r26, 0x02	; 2
     9c2:	f0 e0       	ldi	r31, 0x00	; 0
     9c4:	e1 5f       	subi	r30, 0xF1	; 241
     9c6:	fe 4f       	sbci	r31, 0xFE	; 254
     9c8:	80 e8       	ldi	r24, 0x80	; 128
     9ca:	80 83       	st	Z, r24
     9cc:	cf 91       	pop	r28
     9ce:	08 95       	ret

000009d0 <start_cal_sensor>:
     9d0:	cf 93       	push	r28
     9d2:	c8 2f       	mov	r28, r24
     9d4:	cc df       	rcall	.-104    	; 0x96e <goto_no_detect>
     9d6:	21 e3       	ldi	r18, 0x31	; 49
     9d8:	31 e0       	ldi	r19, 0x01	; 1
     9da:	8c 2f       	mov	r24, r28
     9dc:	90 e0       	ldi	r25, 0x00	; 0
     9de:	66 e0       	ldi	r22, 0x06	; 6
     9e0:	70 e0       	ldi	r23, 0x00	; 0
     9e2:	79 d9       	rcall	.-3342   	; 0xfffffcd6 <__eeprom_end+0xff7efcd6>
     9e4:	f9 01       	movw	r30, r18
     9e6:	e8 0f       	add	r30, r24
     9e8:	f9 1f       	adc	r31, r25
     9ea:	81 e0       	ldi	r24, 0x01	; 1
     9ec:	80 83       	st	Z, r24
     9ee:	8c 2f       	mov	r24, r28
     9f0:	90 e0       	ldi	r25, 0x00	; 0
     9f2:	66 e0       	ldi	r22, 0x06	; 6
     9f4:	70 e0       	ldi	r23, 0x00	; 0
     9f6:	6f d9       	rcall	.-3362   	; 0xfffffcd6 <__eeprom_end+0xff7efcd6>
     9f8:	28 0f       	add	r18, r24
     9fa:	39 1f       	adc	r19, r25
     9fc:	8f e0       	ldi	r24, 0x0F	; 15
     9fe:	f9 01       	movw	r30, r18
     a00:	81 83       	std	Z+1, r24	; 0x01
     a02:	cf 91       	pop	r28
     a04:	08 95       	ret

00000a06 <process_sensor>:
     a06:	ef 92       	push	r14
     a08:	ff 92       	push	r15
     a0a:	0f 93       	push	r16
     a0c:	1f 93       	push	r17
     a0e:	cf 93       	push	r28
     a10:	df 93       	push	r29
     a12:	c8 2f       	mov	r28, r24
     a14:	d6 2f       	mov	r29, r22
     a16:	41 df       	rcall	.-382    	; 0x89a <qt_get_sensor_delta>
     a18:	7c 01       	movw	r14, r24
     a1a:	8c 2f       	mov	r24, r28
     a1c:	90 e0       	ldi	r25, 0x00	; 0
     a1e:	66 e0       	ldi	r22, 0x06	; 6
     a20:	70 e0       	ldi	r23, 0x00	; 0
     a22:	59 d9       	rcall	.-3406   	; 0xfffffcd6 <__eeprom_end+0xff7efcd6>
     a24:	fc 01       	movw	r30, r24
     a26:	ef 5c       	subi	r30, 0xCF	; 207
     a28:	fe 4f       	sbci	r31, 0xFE	; 254
     a2a:	24 81       	ldd	r18, Z+4	; 0x04
     a2c:	8c 2f       	mov	r24, r28
     a2e:	90 e0       	ldi	r25, 0x00	; 0
     a30:	66 e0       	ldi	r22, 0x06	; 6
     a32:	70 e0       	ldi	r23, 0x00	; 0
     a34:	50 d9       	rcall	.-3424   	; 0xfffffcd6 <__eeprom_end+0xff7efcd6>
     a36:	fc 01       	movw	r30, r24
     a38:	ef 5c       	subi	r30, 0xCF	; 207
     a3a:	fe 4f       	sbci	r31, 0xFE	; 254
     a3c:	a3 81       	ldd	r26, Z+3	; 0x03
     a3e:	b0 e0       	ldi	r27, 0x00	; 0
     a40:	82 2f       	mov	r24, r18
     a42:	83 70       	andi	r24, 0x03	; 3
     a44:	90 e0       	ldi	r25, 0x00	; 0
     a46:	01 96       	adiw	r24, 0x01	; 1
     a48:	ad 01       	movw	r20, r26
     a4a:	02 c0       	rjmp	.+4      	; 0xa50 <process_sensor+0x4a>
     a4c:	55 95       	asr	r21
     a4e:	47 95       	ror	r20
     a50:	8a 95       	dec	r24
     a52:	e2 f7       	brpl	.-8      	; 0xa4c <process_sensor+0x46>
     a54:	ca 01       	movw	r24, r20
     a56:	42 30       	cpi	r20, 0x02	; 2
     a58:	08 f4       	brcc	.+2      	; 0xa5c <process_sensor+0x56>
     a5a:	82 e0       	ldi	r24, 0x02	; 2
     a5c:	8d 01       	movw	r16, r26
     a5e:	08 1b       	sub	r16, r24
     a60:	11 09       	sbc	r17, r1
     a62:	8c 2f       	mov	r24, r28
     a64:	90 e0       	ldi	r25, 0x00	; 0
     a66:	66 e0       	ldi	r22, 0x06	; 6
     a68:	70 e0       	ldi	r23, 0x00	; 0
     a6a:	35 d9       	rcall	.-3478   	; 0xfffffcd6 <__eeprom_end+0xff7efcd6>
     a6c:	fc 01       	movw	r30, r24
     a6e:	ef 5c       	subi	r30, 0xCF	; 207
     a70:	fe 4f       	sbci	r31, 0xFE	; 254
     a72:	80 81       	ld	r24, Z
     a74:	84 30       	cpi	r24, 0x04	; 4
     a76:	09 f4       	brne	.+2      	; 0xa7a <process_sensor+0x74>
     a78:	09 c1       	rjmp	.+530    	; 0xc8c <process_sensor+0x286>
     a7a:	85 30       	cpi	r24, 0x05	; 5
     a7c:	30 f4       	brcc	.+12     	; 0xa8a <process_sensor+0x84>
     a7e:	81 30       	cpi	r24, 0x01	; 1
     a80:	71 f0       	breq	.+28     	; 0xa9e <process_sensor+0x98>
     a82:	82 30       	cpi	r24, 0x02	; 2
     a84:	09 f0       	breq	.+2      	; 0xa88 <process_sensor+0x82>
     a86:	d2 c2       	rjmp	.+1444   	; 0x102c <process_sensor+0x626>
     a88:	70 c0       	rjmp	.+224    	; 0xb6a <process_sensor+0x164>
     a8a:	80 31       	cpi	r24, 0x10	; 16
     a8c:	09 f4       	brne	.+2      	; 0xa90 <process_sensor+0x8a>
     a8e:	c5 c1       	rjmp	.+906    	; 0xe1a <process_sensor+0x414>
     a90:	80 32       	cpi	r24, 0x20	; 32
     a92:	09 f4       	brne	.+2      	; 0xa96 <process_sensor+0x90>
     a94:	93 c2       	rjmp	.+1318   	; 0xfbc <process_sensor+0x5b6>
     a96:	88 30       	cpi	r24, 0x08	; 8
     a98:	09 f0       	breq	.+2      	; 0xa9c <process_sensor+0x96>
     a9a:	c8 c2       	rjmp	.+1424   	; 0x102c <process_sensor+0x626>
     a9c:	42 c2       	rjmp	.+1156   	; 0xf22 <process_sensor+0x51c>
     a9e:	00 91 2d 01 	lds	r16, 0x012D
     aa2:	10 91 2e 01 	lds	r17, 0x012E
     aa6:	c8 01       	movw	r24, r16
     aa8:	92 60       	ori	r25, 0x02	; 2
     aaa:	90 93 2e 01 	sts	0x012E, r25
     aae:	80 93 2d 01 	sts	0x012D, r24
     ab2:	8c 2f       	mov	r24, r28
     ab4:	90 e0       	ldi	r25, 0x00	; 0
     ab6:	66 e0       	ldi	r22, 0x06	; 6
     ab8:	70 e0       	ldi	r23, 0x00	; 0
     aba:	0d d9       	rcall	.-3558   	; 0xfffffcd6 <__eeprom_end+0xff7efcd6>
     abc:	fc 01       	movw	r30, r24
     abe:	ef 5c       	subi	r30, 0xCF	; 207
     ac0:	fe 4f       	sbci	r31, 0xFE	; 254
     ac2:	25 81       	ldd	r18, Z+5	; 0x05
     ac4:	8c 2f       	mov	r24, r28
     ac6:	90 e0       	ldi	r25, 0x00	; 0
     ac8:	66 e0       	ldi	r22, 0x06	; 6
     aca:	70 e0       	ldi	r23, 0x00	; 0
     acc:	04 d9       	rcall	.-3576   	; 0xfffffcd6 <__eeprom_end+0xff7efcd6>
     ace:	fc 01       	movw	r30, r24
     ad0:	ef 5c       	subi	r30, 0xCF	; 207
     ad2:	fe 4f       	sbci	r31, 0xFE	; 254
     ad4:	41 81       	ldd	r20, Z+1	; 0x01
     ad6:	82 2f       	mov	r24, r18
     ad8:	90 e0       	ldi	r25, 0x00	; 0
     ada:	4a 30       	cpi	r20, 0x0A	; 10
     adc:	80 f0       	brcs	.+32     	; 0xafe <process_sensor+0xf8>
     ade:	fc 01       	movw	r30, r24
     ae0:	ee 0f       	add	r30, r30
     ae2:	ff 1f       	adc	r31, r31
     ae4:	ec 5d       	subi	r30, 0xDC	; 220
     ae6:	fe 4f       	sbci	r31, 0xFE	; 254
     ae8:	dc 01       	movw	r26, r24
     aea:	aa 0f       	add	r26, r26
     aec:	bb 1f       	adc	r27, r27
     aee:	a4 5e       	subi	r26, 0xE4	; 228
     af0:	be 4f       	sbci	r27, 0xFE	; 254
     af2:	8d 91       	ld	r24, X+
     af4:	9c 91       	ld	r25, X
     af6:	11 97       	sbiw	r26, 0x01	; 1
     af8:	91 83       	std	Z+1, r25	; 0x01
     afa:	80 83       	st	Z, r24
     afc:	1d c0       	rjmp	.+58     	; 0xb38 <process_sensor+0x132>
     afe:	dc 01       	movw	r26, r24
     b00:	aa 0f       	add	r26, r26
     b02:	bb 1f       	adc	r27, r27
     b04:	ac 5d       	subi	r26, 0xDC	; 220
     b06:	be 4f       	sbci	r27, 0xFE	; 254
     b08:	2d 91       	ld	r18, X+
     b0a:	3c 91       	ld	r19, X
     b0c:	11 97       	sbiw	r26, 0x01	; 1
     b0e:	fc 01       	movw	r30, r24
     b10:	ee 0f       	add	r30, r30
     b12:	ff 1f       	adc	r31, r31
     b14:	e4 5e       	subi	r30, 0xE4	; 228
     b16:	fe 4f       	sbci	r31, 0xFE	; 254
     b18:	80 81       	ld	r24, Z
     b1a:	91 81       	ldd	r25, Z+1	; 0x01
     b1c:	82 17       	cp	r24, r18
     b1e:	93 07       	cpc	r25, r19
     b20:	18 f4       	brcc	.+6      	; 0xb28 <process_sensor+0x122>
     b22:	21 50       	subi	r18, 0x01	; 1
     b24:	30 40       	sbci	r19, 0x00	; 0
     b26:	05 c0       	rjmp	.+10     	; 0xb32 <process_sensor+0x12c>
     b28:	28 17       	cp	r18, r24
     b2a:	39 07       	cpc	r19, r25
     b2c:	58 f4       	brcc	.+22     	; 0xb44 <process_sensor+0x13e>
     b2e:	2f 5f       	subi	r18, 0xFF	; 255
     b30:	3f 4f       	sbci	r19, 0xFF	; 255
     b32:	11 96       	adiw	r26, 0x01	; 1
     b34:	3c 93       	st	X, r19
     b36:	2e 93       	st	-X, r18
     b38:	08 60       	ori	r16, 0x08	; 8
     b3a:	12 60       	ori	r17, 0x02	; 2
     b3c:	10 93 2e 01 	sts	0x012E, r17
     b40:	00 93 2d 01 	sts	0x012D, r16
     b44:	41 50       	subi	r20, 0x01	; 1
     b46:	8c 2f       	mov	r24, r28
     b48:	90 e0       	ldi	r25, 0x00	; 0
     b4a:	66 e0       	ldi	r22, 0x06	; 6
     b4c:	70 e0       	ldi	r23, 0x00	; 0
     b4e:	c3 d8       	rcall	.-3706   	; 0xfffffcd6 <__eeprom_end+0xff7efcd6>
     b50:	fc 01       	movw	r30, r24
     b52:	ef 5c       	subi	r30, 0xCF	; 207
     b54:	fe 4f       	sbci	r31, 0xFE	; 254
     b56:	41 83       	std	Z+1, r20	; 0x01
     b58:	44 23       	and	r20, r20
     b5a:	11 f4       	brne	.+4      	; 0xb60 <process_sensor+0x15a>
     b5c:	8c 2f       	mov	r24, r28
     b5e:	07 df       	rcall	.-498    	; 0x96e <goto_no_detect>
     b60:	80 91 15 01 	lds	r24, 0x0115
     b64:	80 93 2f 01 	sts	0x012F, r24
     b68:	59 c2       	rjmp	.+1202   	; 0x101c <process_sensor+0x616>
     b6a:	22 ff       	sbrs	r18, 2
     b6c:	18 c0       	rjmp	.+48     	; 0xb9e <process_sensor+0x198>
     b6e:	8c 2f       	mov	r24, r28
     b70:	90 e0       	ldi	r25, 0x00	; 0
     b72:	66 e0       	ldi	r22, 0x06	; 6
     b74:	70 e0       	ldi	r23, 0x00	; 0
     b76:	af d8       	rcall	.-3746   	; 0xfffffcd6 <__eeprom_end+0xff7efcd6>
     b78:	fc 01       	movw	r30, r24
     b7a:	ef 5c       	subi	r30, 0xCF	; 207
     b7c:	fe 4f       	sbci	r31, 0xFE	; 254
     b7e:	e5 81       	ldd	r30, Z+5	; 0x05
     b80:	f0 e0       	ldi	r31, 0x00	; 0
     b82:	e1 5f       	subi	r30, 0xF1	; 241
     b84:	fe 4f       	sbci	r31, 0xFE	; 254
     b86:	10 82       	st	Z, r1
     b88:	8c 2f       	mov	r24, r28
     b8a:	90 e0       	ldi	r25, 0x00	; 0
     b8c:	66 e0       	ldi	r22, 0x06	; 6
     b8e:	70 e0       	ldi	r23, 0x00	; 0
     b90:	a2 d8       	rcall	.-3772   	; 0xfffffcd6 <__eeprom_end+0xff7efcd6>
     b92:	fc 01       	movw	r30, r24
     b94:	ef 5c       	subi	r30, 0xCF	; 207
     b96:	fe 4f       	sbci	r31, 0xFE	; 254
     b98:	80 e2       	ldi	r24, 0x20	; 32
     b9a:	80 83       	st	Z, r24
     b9c:	36 c2       	rjmp	.+1132   	; 0x100a <process_sensor+0x604>
     b9e:	c7 01       	movw	r24, r14
     ba0:	f7 fe       	sbrs	r15, 7
     ba2:	02 c0       	rjmp	.+4      	; 0xba8 <process_sensor+0x1a2>
     ba4:	80 e0       	ldi	r24, 0x00	; 0
     ba6:	90 e0       	ldi	r25, 0x00	; 0
     ba8:	8a 17       	cp	r24, r26
     baa:	9b 07       	cpc	r25, r27
     bac:	a0 f0       	brcs	.+40     	; 0xbd6 <process_sensor+0x1d0>
     bae:	8c 2f       	mov	r24, r28
     bb0:	90 e0       	ldi	r25, 0x00	; 0
     bb2:	66 e0       	ldi	r22, 0x06	; 6
     bb4:	70 e0       	ldi	r23, 0x00	; 0
     bb6:	8f d8       	rcall	.-3810   	; 0xfffffcd6 <__eeprom_end+0xff7efcd6>
     bb8:	fc 01       	movw	r30, r24
     bba:	ef 5c       	subi	r30, 0xCF	; 207
     bbc:	fe 4f       	sbci	r31, 0xFE	; 254
     bbe:	84 e0       	ldi	r24, 0x04	; 4
     bc0:	80 83       	st	Z, r24
     bc2:	8c 2f       	mov	r24, r28
     bc4:	90 e0       	ldi	r25, 0x00	; 0
     bc6:	66 e0       	ldi	r22, 0x06	; 6
     bc8:	70 e0       	ldi	r23, 0x00	; 0
     bca:	85 d8       	rcall	.-3830   	; 0xfffffcd6 <__eeprom_end+0xff7efcd6>
     bcc:	fc 01       	movw	r30, r24
     bce:	ef 5c       	subi	r30, 0xCF	; 207
     bd0:	fe 4f       	sbci	r31, 0xFE	; 254
     bd2:	12 82       	std	Z+2, r1	; 0x02
     bd4:	25 c2       	rjmp	.+1098   	; 0x1020 <process_sensor+0x61a>
     bd6:	dd 23       	and	r29, r29
     bd8:	09 f4       	brne	.+2      	; 0xbdc <process_sensor+0x1d6>
     bda:	28 c2       	rjmp	.+1104   	; 0x102c <process_sensor+0x626>
     bdc:	80 91 2f 01 	lds	r24, 0x012F
     be0:	88 23       	and	r24, r24
     be2:	09 f0       	breq	.+2      	; 0xbe6 <process_sensor+0x1e0>
     be4:	23 c2       	rjmp	.+1094   	; 0x102c <process_sensor+0x626>
     be6:	8c 2f       	mov	r24, r28
     be8:	90 e0       	ldi	r25, 0x00	; 0
     bea:	66 e0       	ldi	r22, 0x06	; 6
     bec:	70 e0       	ldi	r23, 0x00	; 0
     bee:	73 d8       	rcall	.-3866   	; 0xfffffcd6 <__eeprom_end+0xff7efcd6>
     bf0:	fc 01       	movw	r30, r24
     bf2:	ef 5c       	subi	r30, 0xCF	; 207
     bf4:	fe 4f       	sbci	r31, 0xFE	; 254
     bf6:	25 81       	ldd	r18, Z+5	; 0x05
     bf8:	30 e0       	ldi	r19, 0x00	; 0
     bfa:	d9 01       	movw	r26, r18
     bfc:	aa 0f       	add	r26, r26
     bfe:	bb 1f       	adc	r27, r27
     c00:	ac 5d       	subi	r26, 0xDC	; 220
     c02:	be 4f       	sbci	r27, 0xFE	; 254
     c04:	8d 91       	ld	r24, X+
     c06:	9c 91       	ld	r25, X
     c08:	11 97       	sbiw	r26, 0x01	; 1
     c0a:	f9 01       	movw	r30, r18
     c0c:	ee 0f       	add	r30, r30
     c0e:	ff 1f       	adc	r31, r31
     c10:	e4 5e       	subi	r30, 0xE4	; 228
     c12:	fe 4f       	sbci	r31, 0xFE	; 254
     c14:	40 81       	ld	r20, Z
     c16:	51 81       	ldd	r21, Z+1	; 0x01
     c18:	f9 01       	movw	r30, r18
     c1a:	e1 5f       	subi	r30, 0xF1	; 241
     c1c:	fe 4f       	sbci	r31, 0xFE	; 254
     c1e:	84 17       	cp	r24, r20
     c20:	95 07       	cpc	r25, r21
     c22:	68 f4       	brcc	.+26     	; 0xc3e <process_sensor+0x238>
     c24:	20 81       	ld	r18, Z
     c26:	2d 0f       	add	r18, r29
     c28:	20 83       	st	Z, r18
     c2a:	30 91 18 01 	lds	r19, 0x0118
     c2e:	30 58       	subi	r19, 0x80	; 128
     c30:	23 17       	cp	r18, r19
     c32:	08 f4       	brcc	.+2      	; 0xc36 <process_sensor+0x230>
     c34:	fb c1       	rjmp	.+1014   	; 0x102c <process_sensor+0x626>
     c36:	20 e8       	ldi	r18, 0x80	; 128
     c38:	20 83       	st	Z, r18
     c3a:	01 96       	adiw	r24, 0x01	; 1
     c3c:	10 c0       	rjmp	.+32     	; 0xc5e <process_sensor+0x258>
     c3e:	48 17       	cp	r20, r24
     c40:	59 07       	cpc	r21, r25
     c42:	d0 f4       	brcc	.+52     	; 0xc78 <process_sensor+0x272>
     c44:	20 81       	ld	r18, Z
     c46:	2d 1b       	sub	r18, r29
     c48:	20 83       	st	Z, r18
     c4a:	30 e8       	ldi	r19, 0x80	; 128
     c4c:	40 91 17 01 	lds	r20, 0x0117
     c50:	53 2f       	mov	r21, r19
     c52:	54 1b       	sub	r21, r20
     c54:	52 17       	cp	r21, r18
     c56:	08 f4       	brcc	.+2      	; 0xc5a <process_sensor+0x254>
     c58:	e9 c1       	rjmp	.+978    	; 0x102c <process_sensor+0x626>
     c5a:	30 83       	st	Z, r19
     c5c:	01 97       	sbiw	r24, 0x01	; 1
     c5e:	11 96       	adiw	r26, 0x01	; 1
     c60:	9c 93       	st	X, r25
     c62:	8e 93       	st	-X, r24
     c64:	80 91 2d 01 	lds	r24, 0x012D
     c68:	90 91 2e 01 	lds	r25, 0x012E
     c6c:	88 60       	ori	r24, 0x08	; 8
     c6e:	90 93 2e 01 	sts	0x012E, r25
     c72:	80 93 2d 01 	sts	0x012D, r24
     c76:	da c1       	rjmp	.+948    	; 0x102c <process_sensor+0x626>
     c78:	80 81       	ld	r24, Z
     c7a:	81 38       	cpi	r24, 0x81	; 129
     c7c:	10 f0       	brcs	.+4      	; 0xc82 <process_sensor+0x27c>
     c7e:	81 50       	subi	r24, 0x01	; 1
     c80:	80 83       	st	Z, r24
     c82:	80 81       	ld	r24, Z
     c84:	87 fd       	sbrc	r24, 7
     c86:	d2 c1       	rjmp	.+932    	; 0x102c <process_sensor+0x626>
     c88:	8f 5f       	subi	r24, 0xFF	; 255
     c8a:	b4 c1       	rjmp	.+872    	; 0xff4 <process_sensor+0x5ee>
     c8c:	c7 01       	movw	r24, r14
     c8e:	f7 fe       	sbrs	r15, 7
     c90:	02 c0       	rjmp	.+4      	; 0xc96 <process_sensor+0x290>
     c92:	80 e0       	ldi	r24, 0x00	; 0
     c94:	90 e0       	ldi	r25, 0x00	; 0
     c96:	8a 17       	cp	r24, r26
     c98:	9b 07       	cpc	r25, r27
     c9a:	08 f4       	brcc	.+2      	; 0xc9e <process_sensor+0x298>
     c9c:	ad c1       	rjmp	.+858    	; 0xff8 <process_sensor+0x5f2>
     c9e:	80 91 15 01 	lds	r24, 0x0115
     ca2:	80 93 2f 01 	sts	0x012F, r24
     ca6:	8c 2f       	mov	r24, r28
     ca8:	90 e0       	ldi	r25, 0x00	; 0
     caa:	66 e0       	ldi	r22, 0x06	; 6
     cac:	70 e0       	ldi	r23, 0x00	; 0
     cae:	13 d8       	rcall	.-4058   	; 0xfffffcd6 <__eeprom_end+0xff7efcd6>
     cb0:	fc 01       	movw	r30, r24
     cb2:	ef 5c       	subi	r30, 0xCF	; 207
     cb4:	fe 4f       	sbci	r31, 0xFE	; 254
     cb6:	8c 2f       	mov	r24, r28
     cb8:	90 e0       	ldi	r25, 0x00	; 0
     cba:	66 e0       	ldi	r22, 0x06	; 6
     cbc:	70 e0       	ldi	r23, 0x00	; 0
     cbe:	0b d8       	rcall	.-4074   	; 0xfffffcd6 <__eeprom_end+0xff7efcd6>
     cc0:	dc 01       	movw	r26, r24
     cc2:	af 5c       	subi	r26, 0xCF	; 207
     cc4:	be 4f       	sbci	r27, 0xFE	; 254
     cc6:	12 96       	adiw	r26, 0x02	; 2
     cc8:	8c 91       	ld	r24, X
     cca:	12 97       	sbiw	r26, 0x02	; 2
     ccc:	8f 5f       	subi	r24, 0xFF	; 255
     cce:	82 83       	std	Z+2, r24	; 0x02
     cd0:	8c 2f       	mov	r24, r28
     cd2:	90 e0       	ldi	r25, 0x00	; 0
     cd4:	66 e0       	ldi	r22, 0x06	; 6
     cd6:	70 e0       	ldi	r23, 0x00	; 0
     cd8:	fe d7       	rcall	.+4092   	; 0x1cd6 <__mulhi3>
     cda:	fc 01       	movw	r30, r24
     cdc:	ef 5c       	subi	r30, 0xCF	; 207
     cde:	fe 4f       	sbci	r31, 0xFE	; 254
     ce0:	04 81       	ldd	r16, Z+4	; 0x04
     ce2:	10 e0       	ldi	r17, 0x00	; 0
     ce4:	08 73       	andi	r16, 0x38	; 56
     ce6:	10 70       	andi	r17, 0x00	; 0
     ce8:	33 e0       	ldi	r19, 0x03	; 3
     cea:	16 95       	lsr	r17
     cec:	07 95       	ror	r16
     cee:	3a 95       	dec	r19
     cf0:	e1 f7       	brne	.-8      	; 0xcea <process_sensor+0x2e4>
     cf2:	00 23       	and	r16, r16
     cf4:	09 f0       	breq	.+2      	; 0xcf8 <process_sensor+0x2f2>
     cf6:	4d c0       	rjmp	.+154    	; 0xd92 <process_sensor+0x38c>
     cf8:	55 c0       	rjmp	.+170    	; 0xda4 <process_sensor+0x39e>
     cfa:	dc 17       	cp	r29, r28
     cfc:	09 f4       	brne	.+2      	; 0xd00 <process_sensor+0x2fa>
     cfe:	47 c0       	rjmp	.+142    	; 0xd8e <process_sensor+0x388>
     d00:	8d 2f       	mov	r24, r29
     d02:	90 e0       	ldi	r25, 0x00	; 0
     d04:	66 e0       	ldi	r22, 0x06	; 6
     d06:	70 e0       	ldi	r23, 0x00	; 0
     d08:	e6 d7       	rcall	.+4044   	; 0x1cd6 <__mulhi3>
     d0a:	fc 01       	movw	r30, r24
     d0c:	ef 5c       	subi	r30, 0xCF	; 207
     d0e:	fe 4f       	sbci	r31, 0xFE	; 254
     d10:	84 81       	ldd	r24, Z+4	; 0x04
     d12:	90 e0       	ldi	r25, 0x00	; 0
     d14:	88 73       	andi	r24, 0x38	; 56
     d16:	90 70       	andi	r25, 0x00	; 0
     d18:	23 e0       	ldi	r18, 0x03	; 3
     d1a:	96 95       	lsr	r25
     d1c:	87 95       	ror	r24
     d1e:	2a 95       	dec	r18
     d20:	e1 f7       	brne	.-8      	; 0xd1a <process_sensor+0x314>
     d22:	08 17       	cp	r16, r24
     d24:	a1 f5       	brne	.+104    	; 0xd8e <process_sensor+0x388>
     d26:	8d 2f       	mov	r24, r29
     d28:	b8 dd       	rcall	.-1168   	; 0x89a <qt_get_sensor_delta>
     d2a:	9c 01       	movw	r18, r24
     d2c:	8d 2f       	mov	r24, r29
     d2e:	90 e0       	ldi	r25, 0x00	; 0
     d30:	66 e0       	ldi	r22, 0x06	; 6
     d32:	70 e0       	ldi	r23, 0x00	; 0
     d34:	d0 d7       	rcall	.+4000   	; 0x1cd6 <__mulhi3>
     d36:	fc 01       	movw	r30, r24
     d38:	ef 5c       	subi	r30, 0xCF	; 207
     d3a:	fe 4f       	sbci	r31, 0xFE	; 254
     d3c:	83 81       	ldd	r24, Z+3	; 0x03
     d3e:	28 1b       	sub	r18, r24
     d40:	31 09       	sbc	r19, r1
     d42:	8c 2f       	mov	r24, r28
     d44:	90 e0       	ldi	r25, 0x00	; 0
     d46:	66 e0       	ldi	r22, 0x06	; 6
     d48:	70 e0       	ldi	r23, 0x00	; 0
     d4a:	c5 d7       	rcall	.+3978   	; 0x1cd6 <__mulhi3>
     d4c:	fc 01       	movw	r30, r24
     d4e:	ef 5c       	subi	r30, 0xCF	; 207
     d50:	fe 4f       	sbci	r31, 0xFE	; 254
     d52:	83 81       	ldd	r24, Z+3	; 0x03
     d54:	a7 01       	movw	r20, r14
     d56:	48 1b       	sub	r20, r24
     d58:	51 09       	sbc	r21, r1
     d5a:	42 17       	cp	r20, r18
     d5c:	53 07       	cpc	r21, r19
     d5e:	6c f0       	brlt	.+26     	; 0xd7a <process_sensor+0x374>
     d60:	8d 2f       	mov	r24, r29
     d62:	90 e0       	ldi	r25, 0x00	; 0
     d64:	66 e0       	ldi	r22, 0x06	; 6
     d66:	70 e0       	ldi	r23, 0x00	; 0
     d68:	b6 d7       	rcall	.+3948   	; 0x1cd6 <__mulhi3>
     d6a:	fc 01       	movw	r30, r24
     d6c:	ef 5c       	subi	r30, 0xCF	; 207
     d6e:	fe 4f       	sbci	r31, 0xFE	; 254
     d70:	80 81       	ld	r24, Z
     d72:	80 31       	cpi	r24, 0x10	; 16
     d74:	11 f0       	breq	.+4      	; 0xd7a <process_sensor+0x374>
     d76:	88 30       	cpi	r24, 0x08	; 8
     d78:	51 f4       	brne	.+20     	; 0xd8e <process_sensor+0x388>
     d7a:	8c 2f       	mov	r24, r28
     d7c:	90 e0       	ldi	r25, 0x00	; 0
     d7e:	66 e0       	ldi	r22, 0x06	; 6
     d80:	70 e0       	ldi	r23, 0x00	; 0
     d82:	a9 d7       	rcall	.+3922   	; 0x1cd6 <__mulhi3>
     d84:	fc 01       	movw	r30, r24
     d86:	ef 5c       	subi	r30, 0xCF	; 207
     d88:	fe 4f       	sbci	r31, 0xFE	; 254
     d8a:	12 82       	std	Z+2, r1	; 0x02
     d8c:	11 e0       	ldi	r17, 0x01	; 1
     d8e:	df 5f       	subi	r29, 0xFF	; 255
     d90:	02 c0       	rjmp	.+4      	; 0xd96 <process_sensor+0x390>
     d92:	10 e0       	ldi	r17, 0x00	; 0
     d94:	d0 e0       	ldi	r29, 0x00	; 0
     d96:	80 91 30 01 	lds	r24, 0x0130
     d9a:	d8 17       	cp	r29, r24
     d9c:	08 f4       	brcc	.+2      	; 0xda0 <process_sensor+0x39a>
     d9e:	ad cf       	rjmp	.-166    	; 0xcfa <process_sensor+0x2f4>
     da0:	11 23       	and	r17, r17
     da2:	79 f4       	brne	.+30     	; 0xdc2 <process_sensor+0x3bc>
     da4:	80 91 14 01 	lds	r24, 0x0114
     da8:	88 23       	and	r24, r24
     daa:	59 f0       	breq	.+22     	; 0xdc2 <process_sensor+0x3bc>
     dac:	80 91 2d 01 	lds	r24, 0x012D
     db0:	90 91 2e 01 	lds	r25, 0x012E
     db4:	98 60       	ori	r25, 0x08	; 8
     db6:	90 93 2e 01 	sts	0x012E, r25
     dba:	80 93 2d 01 	sts	0x012D, r24
     dbe:	41 e0       	ldi	r20, 0x01	; 1
     dc0:	01 c0       	rjmp	.+2      	; 0xdc4 <process_sensor+0x3be>
     dc2:	40 e0       	ldi	r20, 0x00	; 0
     dc4:	8c 2f       	mov	r24, r28
     dc6:	90 e0       	ldi	r25, 0x00	; 0
     dc8:	66 e0       	ldi	r22, 0x06	; 6
     dca:	70 e0       	ldi	r23, 0x00	; 0
     dcc:	84 d7       	rcall	.+3848   	; 0x1cd6 <__mulhi3>
     dce:	fc 01       	movw	r30, r24
     dd0:	ef 5c       	subi	r30, 0xCF	; 207
     dd2:	fe 4f       	sbci	r31, 0xFE	; 254
     dd4:	92 81       	ldd	r25, Z+2	; 0x02
     dd6:	80 91 14 01 	lds	r24, 0x0114
     dda:	98 17       	cp	r25, r24
     ddc:	08 f4       	brcc	.+2      	; 0xde0 <process_sensor+0x3da>
     dde:	27 c1       	rjmp	.+590    	; 0x102e <process_sensor+0x628>
     de0:	20 91 2d 01 	lds	r18, 0x012D
     de4:	30 91 2e 01 	lds	r19, 0x012E
     de8:	23 60       	ori	r18, 0x03	; 3
     dea:	30 93 2e 01 	sts	0x012E, r19
     dee:	20 93 2d 01 	sts	0x012D, r18
     df2:	8c 2f       	mov	r24, r28
     df4:	90 e0       	ldi	r25, 0x00	; 0
     df6:	66 e0       	ldi	r22, 0x06	; 6
     df8:	70 e0       	ldi	r23, 0x00	; 0
     dfa:	6d d7       	rcall	.+3802   	; 0x1cd6 <__mulhi3>
     dfc:	fc 01       	movw	r30, r24
     dfe:	ef 5c       	subi	r30, 0xCF	; 207
     e00:	fe 4f       	sbci	r31, 0xFE	; 254
     e02:	80 e1       	ldi	r24, 0x10	; 16
     e04:	80 83       	st	Z, r24
     e06:	8c 2f       	mov	r24, r28
     e08:	90 e0       	ldi	r25, 0x00	; 0
     e0a:	66 e0       	ldi	r22, 0x06	; 6
     e0c:	70 e0       	ldi	r23, 0x00	; 0
     e0e:	63 d7       	rcall	.+3782   	; 0x1cd6 <__mulhi3>
     e10:	fc 01       	movw	r30, r24
     e12:	ef 5c       	subi	r30, 0xCF	; 207
     e14:	fe 4f       	sbci	r31, 0xFE	; 254
     e16:	11 82       	std	Z+1, r1	; 0x01
     e18:	0a c1       	rjmp	.+532    	; 0x102e <process_sensor+0x628>
     e1a:	22 ff       	sbrs	r18, 2
     e1c:	1e c0       	rjmp	.+60     	; 0xe5a <process_sensor+0x454>
     e1e:	8c 2f       	mov	r24, r28
     e20:	90 e0       	ldi	r25, 0x00	; 0
     e22:	66 e0       	ldi	r22, 0x06	; 6
     e24:	70 e0       	ldi	r23, 0x00	; 0
     e26:	57 d7       	rcall	.+3758   	; 0x1cd6 <__mulhi3>
     e28:	fc 01       	movw	r30, r24
     e2a:	ef 5c       	subi	r30, 0xCF	; 207
     e2c:	fe 4f       	sbci	r31, 0xFE	; 254
     e2e:	e5 81       	ldd	r30, Z+5	; 0x05
     e30:	f0 e0       	ldi	r31, 0x00	; 0
     e32:	e1 5f       	subi	r30, 0xF1	; 241
     e34:	fe 4f       	sbci	r31, 0xFE	; 254
     e36:	80 e8       	ldi	r24, 0x80	; 128
     e38:	80 83       	st	Z, r24
     e3a:	8c 2f       	mov	r24, r28
     e3c:	90 e0       	ldi	r25, 0x00	; 0
     e3e:	66 e0       	ldi	r22, 0x06	; 6
     e40:	70 e0       	ldi	r23, 0x00	; 0
     e42:	49 d7       	rcall	.+3730   	; 0x1cd6 <__mulhi3>
     e44:	fc 01       	movw	r30, r24
     e46:	ef 5c       	subi	r30, 0xCF	; 207
     e48:	fe 4f       	sbci	r31, 0xFE	; 254
     e4a:	80 e2       	ldi	r24, 0x20	; 32
     e4c:	80 83       	st	Z, r24
     e4e:	80 91 2d 01 	lds	r24, 0x012D
     e52:	90 91 2e 01 	lds	r25, 0x012E
     e56:	90 61       	ori	r25, 0x10	; 16
     e58:	58 c0       	rjmp	.+176    	; 0xf0a <process_sensor+0x504>
     e5a:	c7 01       	movw	r24, r14
     e5c:	f7 fe       	sbrs	r15, 7
     e5e:	02 c0       	rjmp	.+4      	; 0xe64 <process_sensor+0x45e>
     e60:	80 e0       	ldi	r24, 0x00	; 0
     e62:	90 e0       	ldi	r25, 0x00	; 0
     e64:	80 17       	cp	r24, r16
     e66:	91 07       	cpc	r25, r17
     e68:	80 f4       	brcc	.+32     	; 0xe8a <process_sensor+0x484>
     e6a:	8c 2f       	mov	r24, r28
     e6c:	90 e0       	ldi	r25, 0x00	; 0
     e6e:	66 e0       	ldi	r22, 0x06	; 6
     e70:	70 e0       	ldi	r23, 0x00	; 0
     e72:	31 d7       	rcall	.+3682   	; 0x1cd6 <__mulhi3>
     e74:	fc 01       	movw	r30, r24
     e76:	ef 5c       	subi	r30, 0xCF	; 207
     e78:	fe 4f       	sbci	r31, 0xFE	; 254
     e7a:	88 e0       	ldi	r24, 0x08	; 8
     e7c:	80 83       	st	Z, r24
     e7e:	80 91 2d 01 	lds	r24, 0x012D
     e82:	90 91 2e 01 	lds	r25, 0x012E
     e86:	94 60       	ori	r25, 0x04	; 4
     e88:	40 c0       	rjmp	.+128    	; 0xf0a <process_sensor+0x504>
     e8a:	80 91 2d 01 	lds	r24, 0x012D
     e8e:	90 91 2e 01 	lds	r25, 0x012E
     e92:	81 60       	ori	r24, 0x01	; 1
     e94:	90 93 2e 01 	sts	0x012E, r25
     e98:	80 93 2d 01 	sts	0x012D, r24
     e9c:	8c 2f       	mov	r24, r28
     e9e:	90 e0       	ldi	r25, 0x00	; 0
     ea0:	66 e0       	ldi	r22, 0x06	; 6
     ea2:	70 e0       	ldi	r23, 0x00	; 0
     ea4:	18 d7       	rcall	.+3632   	; 0x1cd6 <__mulhi3>
     ea6:	fc 01       	movw	r30, r24
     ea8:	ef 5c       	subi	r30, 0xCF	; 207
     eaa:	fe 4f       	sbci	r31, 0xFE	; 254
     eac:	22 81       	ldd	r18, Z+2	; 0x02
     eae:	80 91 14 01 	lds	r24, 0x0114
     eb2:	28 17       	cp	r18, r24
     eb4:	50 f4       	brcc	.+20     	; 0xeca <process_sensor+0x4c4>
     eb6:	8c 2f       	mov	r24, r28
     eb8:	90 e0       	ldi	r25, 0x00	; 0
     eba:	66 e0       	ldi	r22, 0x06	; 6
     ebc:	70 e0       	ldi	r23, 0x00	; 0
     ebe:	0b d7       	rcall	.+3606   	; 0x1cd6 <__mulhi3>
     ec0:	fc 01       	movw	r30, r24
     ec2:	ef 5c       	subi	r30, 0xCF	; 207
     ec4:	fe 4f       	sbci	r31, 0xFE	; 254
     ec6:	2f 5f       	subi	r18, 0xFF	; 255
     ec8:	22 83       	std	Z+2, r18	; 0x02
     eca:	30 91 16 01 	lds	r19, 0x0116
     ece:	33 23       	and	r19, r19
     ed0:	11 f1       	breq	.+68     	; 0xf16 <process_sensor+0x510>
     ed2:	8c 2f       	mov	r24, r28
     ed4:	90 e0       	ldi	r25, 0x00	; 0
     ed6:	66 e0       	ldi	r22, 0x06	; 6
     ed8:	70 e0       	ldi	r23, 0x00	; 0
     eda:	fd d6       	rcall	.+3578   	; 0x1cd6 <__mulhi3>
     edc:	fc 01       	movw	r30, r24
     ede:	ef 5c       	subi	r30, 0xCF	; 207
     ee0:	fe 4f       	sbci	r31, 0xFE	; 254
     ee2:	21 81       	ldd	r18, Z+1	; 0x01
     ee4:	8c 2f       	mov	r24, r28
     ee6:	23 17       	cp	r18, r19
     ee8:	50 f4       	brcc	.+20     	; 0xefe <process_sensor+0x4f8>
     eea:	90 e0       	ldi	r25, 0x00	; 0
     eec:	66 e0       	ldi	r22, 0x06	; 6
     eee:	70 e0       	ldi	r23, 0x00	; 0
     ef0:	f2 d6       	rcall	.+3556   	; 0x1cd6 <__mulhi3>
     ef2:	fc 01       	movw	r30, r24
     ef4:	ef 5c       	subi	r30, 0xCF	; 207
     ef6:	fe 4f       	sbci	r31, 0xFE	; 254
     ef8:	d2 0f       	add	r29, r18
     efa:	d1 83       	std	Z+1, r29	; 0x01
     efc:	0c c0       	rjmp	.+24     	; 0xf16 <process_sensor+0x510>
     efe:	68 dd       	rcall	.-1328   	; 0x9d0 <start_cal_sensor>
     f00:	80 91 2d 01 	lds	r24, 0x012D
     f04:	90 91 2e 01 	lds	r25, 0x012E
     f08:	92 60       	ori	r25, 0x02	; 2
     f0a:	90 93 2e 01 	sts	0x012E, r25
     f0e:	80 93 2d 01 	sts	0x012D, r24
     f12:	41 e0       	ldi	r20, 0x01	; 1
     f14:	01 c0       	rjmp	.+2      	; 0xf18 <process_sensor+0x512>
     f16:	40 e0       	ldi	r20, 0x00	; 0
     f18:	80 91 15 01 	lds	r24, 0x0115
     f1c:	80 93 2f 01 	sts	0x012F, r24
     f20:	86 c0       	rjmp	.+268    	; 0x102e <process_sensor+0x628>
     f22:	80 91 15 01 	lds	r24, 0x0115
     f26:	80 93 2f 01 	sts	0x012F, r24
     f2a:	8c 2f       	mov	r24, r28
     f2c:	90 e0       	ldi	r25, 0x00	; 0
     f2e:	66 e0       	ldi	r22, 0x06	; 6
     f30:	70 e0       	ldi	r23, 0x00	; 0
     f32:	d1 d6       	rcall	.+3490   	; 0x1cd6 <__mulhi3>
     f34:	fc 01       	movw	r30, r24
     f36:	ef 5c       	subi	r30, 0xCF	; 207
     f38:	fe 4f       	sbci	r31, 0xFE	; 254
     f3a:	82 81       	ldd	r24, Z+2	; 0x02
     f3c:	88 23       	and	r24, r24
     f3e:	09 f4       	brne	.+2      	; 0xf42 <process_sensor+0x53c>
     f40:	5b c0       	rjmp	.+182    	; 0xff8 <process_sensor+0x5f2>
     f42:	c7 01       	movw	r24, r14
     f44:	f7 fe       	sbrs	r15, 7
     f46:	02 c0       	rjmp	.+4      	; 0xf4c <process_sensor+0x546>
     f48:	80 e0       	ldi	r24, 0x00	; 0
     f4a:	90 e0       	ldi	r25, 0x00	; 0
     f4c:	08 17       	cp	r16, r24
     f4e:	19 07       	cpc	r17, r25
     f50:	a8 f4       	brcc	.+42     	; 0xf7c <process_sensor+0x576>
     f52:	8c 2f       	mov	r24, r28
     f54:	90 e0       	ldi	r25, 0x00	; 0
     f56:	66 e0       	ldi	r22, 0x06	; 6
     f58:	70 e0       	ldi	r23, 0x00	; 0
     f5a:	bd d6       	rcall	.+3450   	; 0x1cd6 <__mulhi3>
     f5c:	fc 01       	movw	r30, r24
     f5e:	ef 5c       	subi	r30, 0xCF	; 207
     f60:	fe 4f       	sbci	r31, 0xFE	; 254
     f62:	80 e1       	ldi	r24, 0x10	; 16
     f64:	80 83       	st	Z, r24
     f66:	80 91 2d 01 	lds	r24, 0x012D
     f6a:	90 91 2e 01 	lds	r25, 0x012E
     f6e:	81 60       	ori	r24, 0x01	; 1
     f70:	90 93 2e 01 	sts	0x012E, r25
     f74:	80 93 2d 01 	sts	0x012D, r24
     f78:	40 e0       	ldi	r20, 0x00	; 0
     f7a:	0a c0       	rjmp	.+20     	; 0xf90 <process_sensor+0x58a>
     f7c:	80 91 2d 01 	lds	r24, 0x012D
     f80:	90 91 2e 01 	lds	r25, 0x012E
     f84:	94 60       	ori	r25, 0x04	; 4
     f86:	90 93 2e 01 	sts	0x012E, r25
     f8a:	80 93 2d 01 	sts	0x012D, r24
     f8e:	41 e0       	ldi	r20, 0x01	; 1
     f90:	8c 2f       	mov	r24, r28
     f92:	90 e0       	ldi	r25, 0x00	; 0
     f94:	66 e0       	ldi	r22, 0x06	; 6
     f96:	70 e0       	ldi	r23, 0x00	; 0
     f98:	9e d6       	rcall	.+3388   	; 0x1cd6 <__mulhi3>
     f9a:	fc 01       	movw	r30, r24
     f9c:	ef 5c       	subi	r30, 0xCF	; 207
     f9e:	fe 4f       	sbci	r31, 0xFE	; 254
     fa0:	8c 2f       	mov	r24, r28
     fa2:	90 e0       	ldi	r25, 0x00	; 0
     fa4:	66 e0       	ldi	r22, 0x06	; 6
     fa6:	70 e0       	ldi	r23, 0x00	; 0
     fa8:	96 d6       	rcall	.+3372   	; 0x1cd6 <__mulhi3>
     faa:	dc 01       	movw	r26, r24
     fac:	af 5c       	subi	r26, 0xCF	; 207
     fae:	be 4f       	sbci	r27, 0xFE	; 254
     fb0:	12 96       	adiw	r26, 0x02	; 2
     fb2:	8c 91       	ld	r24, X
     fb4:	12 97       	sbiw	r26, 0x02	; 2
     fb6:	81 50       	subi	r24, 0x01	; 1
     fb8:	82 83       	std	Z+2, r24	; 0x02
     fba:	39 c0       	rjmp	.+114    	; 0x102e <process_sensor+0x628>
     fbc:	8c 2f       	mov	r24, r28
     fbe:	90 e0       	ldi	r25, 0x00	; 0
     fc0:	66 e0       	ldi	r22, 0x06	; 6
     fc2:	70 e0       	ldi	r23, 0x00	; 0
     fc4:	88 d6       	rcall	.+3344   	; 0x1cd6 <__mulhi3>
     fc6:	fc 01       	movw	r30, r24
     fc8:	ef 5c       	subi	r30, 0xCF	; 207
     fca:	fe 4f       	sbci	r31, 0xFE	; 254
     fcc:	e5 81       	ldd	r30, Z+5	; 0x05
     fce:	f0 e0       	ldi	r31, 0x00	; 0
     fd0:	e1 5f       	subi	r30, 0xF1	; 241
     fd2:	fe 4f       	sbci	r31, 0xFE	; 254
     fd4:	80 81       	ld	r24, Z
     fd6:	8f 5f       	subi	r24, 0xFF	; 255
     fd8:	80 83       	st	Z, r24
     fda:	22 fd       	sbrc	r18, 2
     fdc:	10 c0       	rjmp	.+32     	; 0xffe <process_sensor+0x5f8>
     fde:	87 ff       	sbrs	r24, 7
     fe0:	0b c0       	rjmp	.+22     	; 0xff8 <process_sensor+0x5f2>
     fe2:	8c 2f       	mov	r24, r28
     fe4:	90 e0       	ldi	r25, 0x00	; 0
     fe6:	66 e0       	ldi	r22, 0x06	; 6
     fe8:	70 e0       	ldi	r23, 0x00	; 0
     fea:	75 d6       	rcall	.+3306   	; 0x1cd6 <__mulhi3>
     fec:	fc 01       	movw	r30, r24
     fee:	ef 5c       	subi	r30, 0xCF	; 207
     ff0:	fe 4f       	sbci	r31, 0xFE	; 254
     ff2:	80 e1       	ldi	r24, 0x10	; 16
     ff4:	80 83       	st	Z, r24
     ff6:	1a c0       	rjmp	.+52     	; 0x102c <process_sensor+0x626>
     ff8:	8c 2f       	mov	r24, r28
     ffa:	b9 dc       	rcall	.-1678   	; 0x96e <goto_no_detect>
     ffc:	17 c0       	rjmp	.+46     	; 0x102c <process_sensor+0x626>
     ffe:	90 91 19 01 	lds	r25, 0x0119
    1002:	89 17       	cp	r24, r25
    1004:	68 f0       	brcs	.+26     	; 0x1020 <process_sensor+0x61a>
    1006:	8c 2f       	mov	r24, r28
    1008:	e3 dc       	rcall	.-1594   	; 0x9d0 <start_cal_sensor>
    100a:	80 91 2d 01 	lds	r24, 0x012D
    100e:	90 91 2e 01 	lds	r25, 0x012E
    1012:	90 61       	ori	r25, 0x10	; 16
    1014:	90 93 2e 01 	sts	0x012E, r25
    1018:	80 93 2d 01 	sts	0x012D, r24
    101c:	41 e0       	ldi	r20, 0x01	; 1
    101e:	07 c0       	rjmp	.+14     	; 0x102e <process_sensor+0x628>
    1020:	80 91 2d 01 	lds	r24, 0x012D
    1024:	90 91 2e 01 	lds	r25, 0x012E
    1028:	94 60       	ori	r25, 0x04	; 4
    102a:	f4 cf       	rjmp	.-24     	; 0x1014 <process_sensor+0x60e>
    102c:	40 e0       	ldi	r20, 0x00	; 0
    102e:	84 2f       	mov	r24, r20
    1030:	cd b7       	in	r28, 0x3d	; 61
    1032:	de b7       	in	r29, 0x3e	; 62
    1034:	e6 e0       	ldi	r30, 0x06	; 6
    1036:	89 c6       	rjmp	.+3346   	; 0x1d4a <__epilogue_restores__+0x18>

00001038 <get_channel_delta>:
    1038:	90 e0       	ldi	r25, 0x00	; 0
    103a:	fc 01       	movw	r30, r24
    103c:	34 96       	adiw	r30, 0x04	; 4
    103e:	2c e1       	ldi	r18, 0x1C	; 28
    1040:	31 e0       	ldi	r19, 0x01	; 1
    1042:	ee 0f       	add	r30, r30
    1044:	ff 1f       	adc	r31, r31
    1046:	e2 0f       	add	r30, r18
    1048:	f3 1f       	adc	r31, r19
    104a:	dc 01       	movw	r26, r24
    104c:	aa 0f       	add	r26, r26
    104e:	bb 1f       	adc	r27, r27
    1050:	a2 0f       	add	r26, r18
    1052:	b3 1f       	adc	r27, r19
    1054:	80 81       	ld	r24, Z
    1056:	91 81       	ldd	r25, Z+1	; 0x01
    1058:	2d 91       	ld	r18, X+
    105a:	3c 91       	ld	r19, X
    105c:	11 97       	sbiw	r26, 0x01	; 1
    105e:	82 1b       	sub	r24, r18
    1060:	93 0b       	sbc	r25, r19
    1062:	08 95       	ret

00001064 <burst_init>:
    1064:	0f 93       	push	r16
    1066:	cf 93       	push	r28
    1068:	df 93       	push	r29
    106a:	81 e0       	ldi	r24, 0x01	; 1
    106c:	80 93 fa 00 	sts	0x00FA, r24
    1070:	10 92 4e 01 	sts	0x014E, r1
    1074:	10 92 4f 01 	sts	0x014F, r1
    1078:	10 92 50 01 	sts	0x0150, r1
    107c:	10 92 51 01 	sts	0x0151, r1
    1080:	10 92 52 01 	sts	0x0152, r1
    1084:	30 91 30 01 	lds	r19, 0x0130
    1088:	c6 e3       	ldi	r28, 0x36	; 54
    108a:	d1 e0       	ldi	r29, 0x01	; 1
    108c:	20 e0       	ldi	r18, 0x00	; 0
    108e:	61 e0       	ldi	r22, 0x01	; 1
    1090:	70 e0       	ldi	r23, 0x00	; 0
    1092:	38 c0       	rjmp	.+112    	; 0x1104 <burst_init+0xa0>
    1094:	e8 81       	ld	r30, Y
    1096:	8e 2f       	mov	r24, r30
    1098:	86 95       	lsr	r24
    109a:	86 95       	lsr	r24
    109c:	90 e0       	ldi	r25, 0x00	; 0
    109e:	88 0f       	add	r24, r24
    10a0:	99 1f       	adc	r25, r25
    10a2:	dc 01       	movw	r26, r24
    10a4:	aa 51       	subi	r26, 0x1A	; 26
    10a6:	bf 4f       	sbci	r27, 0xFF	; 255
    10a8:	ab 01       	movw	r20, r22
    10aa:	0c 90       	ld	r0, X
    10ac:	02 c0       	rjmp	.+4      	; 0x10b2 <burst_init+0x4e>
    10ae:	44 0f       	add	r20, r20
    10b0:	55 1f       	adc	r21, r21
    10b2:	0a 94       	dec	r0
    10b4:	e2 f7       	brpl	.-8      	; 0x10ae <burst_init+0x4a>
    10b6:	50 91 4e 01 	lds	r21, 0x014E
    10ba:	54 2b       	or	r21, r20
    10bc:	50 93 4e 01 	sts	0x014E, r21
    10c0:	8c 51       	subi	r24, 0x1C	; 28
    10c2:	9f 4f       	sbci	r25, 0xFF	; 255
    10c4:	ab 01       	movw	r20, r22
    10c6:	dc 01       	movw	r26, r24
    10c8:	0c 90       	ld	r0, X
    10ca:	02 c0       	rjmp	.+4      	; 0x10d0 <burst_init+0x6c>
    10cc:	44 0f       	add	r20, r20
    10ce:	55 1f       	adc	r21, r21
    10d0:	0a 94       	dec	r0
    10d2:	e2 f7       	brpl	.-8      	; 0x10cc <burst_init+0x68>
    10d4:	ca 01       	movw	r24, r20
    10d6:	90 91 4f 01 	lds	r25, 0x014F
    10da:	98 2b       	or	r25, r24
    10dc:	90 93 4f 01 	sts	0x014F, r25
    10e0:	e3 70       	andi	r30, 0x03	; 3
    10e2:	f0 e0       	ldi	r31, 0x00	; 0
    10e4:	ee 0f       	add	r30, r30
    10e6:	ff 1f       	adc	r31, r31
    10e8:	ee 0f       	add	r30, r30
    10ea:	ff 1f       	adc	r31, r31
    10ec:	e8 51       	subi	r30, 0x18	; 24
    10ee:	ff 4f       	sbci	r31, 0xFF	; 255
    10f0:	a3 81       	ldd	r26, Z+3	; 0x03
    10f2:	b0 e0       	ldi	r27, 0x00	; 0
    10f4:	a2 5b       	subi	r26, 0xB2	; 178
    10f6:	be 4f       	sbci	r27, 0xFE	; 254
    10f8:	8c 91       	ld	r24, X
    10fa:	92 81       	ldd	r25, Z+2	; 0x02
    10fc:	89 2b       	or	r24, r25
    10fe:	8c 93       	st	X, r24
    1100:	2f 5f       	subi	r18, 0xFF	; 255
    1102:	26 96       	adiw	r28, 0x06	; 6
    1104:	23 17       	cp	r18, r19
    1106:	31 f6       	brne	.-116    	; 0x1094 <burst_init+0x30>
    1108:	80 91 4f 01 	lds	r24, 0x014F
    110c:	60 91 4e 01 	lds	r22, 0x014E
    1110:	40 91 50 01 	lds	r20, 0x0150
    1114:	20 91 51 01 	lds	r18, 0x0151
    1118:	00 91 52 01 	lds	r16, 0x0152
    111c:	a0 d9       	rcall	.-3264   	; 0x45e <_00110000001_>
    111e:	df 91       	pop	r29
    1120:	cf 91       	pop	r28
    1122:	0f 91       	pop	r16
    1124:	08 95       	ret

00001126 <burst_reset>:
    1126:	80 e4       	ldi	r24, 0x40	; 64
    1128:	80 93 fb 00 	sts	0x00FB, r24
    112c:	80 93 fc 00 	sts	0x00FC, r24
    1130:	80 93 fd 00 	sts	0x00FD, r24
    1134:	80 93 fe 00 	sts	0x00FE, r24
    1138:	08 95       	ret

0000113a <burst>:
    113a:	a0 e0       	ldi	r26, 0x00	; 0
    113c:	b0 e0       	ldi	r27, 0x00	; 0
    113e:	e2 ea       	ldi	r30, 0xA2	; 162
    1140:	f8 e0       	ldi	r31, 0x08	; 8
    1142:	e3 c5       	rjmp	.+3014   	; 0x1d0a <__prologue_saves__+0x10>
    1144:	8f b7       	in	r24, 0x3f	; 63
    1146:	80 78       	andi	r24, 0x80	; 128
    1148:	80 93 4a 01 	sts	0x014A, r24
    114c:	d3 b1       	in	r29, 0x03	; 3
    114e:	18 b1       	in	r17, 0x08	; 8
    1150:	0f b5       	in	r16, 0x2f	; 47
    1152:	fe b4       	in	r15, 0x2e	; 46
    1154:	eb b0       	in	r14, 0x0b	; 11
    1156:	ac b4       	in	r10, 0x2c	; 44
    1158:	bd b4       	in	r11, 0x2d	; 45
    115a:	d0 b0       	in	r13, 0x00	; 0
    115c:	c7 b0       	in	r12, 0x07	; 7
    115e:	80 e4       	ldi	r24, 0x40	; 64
    1160:	83 b9       	out	0x03, r24	; 3
    1162:	84 e0       	ldi	r24, 0x04	; 4
    1164:	88 b9       	out	0x08, r24	; 8
    1166:	1f bc       	out	0x2f, r1	; 47
    1168:	81 e8       	ldi	r24, 0x81	; 129
    116a:	8e bd       	out	0x2e, r24	; 46
    116c:	f8 94       	cli
    116e:	c0 e0       	ldi	r28, 0x00	; 0
    1170:	20 c0       	rjmp	.+64     	; 0x11b2 <burst+0x78>
    1172:	8c 2f       	mov	r24, r28
    1174:	90 e0       	ldi	r25, 0x00	; 0
    1176:	66 e0       	ldi	r22, 0x06	; 6
    1178:	70 e0       	ldi	r23, 0x00	; 0
    117a:	ad d5       	rcall	.+2906   	; 0x1cd6 <__mulhi3>
    117c:	fc 01       	movw	r30, r24
    117e:	ef 5c       	subi	r30, 0xCF	; 207
    1180:	fe 4f       	sbci	r31, 0xFE	; 254
    1182:	85 81       	ldd	r24, Z+5	; 0x05
    1184:	a8 2f       	mov	r26, r24
    1186:	a3 70       	andi	r26, 0x03	; 3
    1188:	b0 e0       	ldi	r27, 0x00	; 0
    118a:	aa 0f       	add	r26, r26
    118c:	bb 1f       	adc	r27, r27
    118e:	aa 0f       	add	r26, r26
    1190:	bb 1f       	adc	r27, r27
    1192:	a8 51       	subi	r26, 0x18	; 24
    1194:	bf 4f       	sbci	r27, 0xFF	; 255
    1196:	ed 91       	ld	r30, X+
    1198:	fc 91       	ld	r31, X
    119a:	11 97       	sbiw	r26, 0x01	; 1
    119c:	30 97       	sbiw	r30, 0x00	; 0
    119e:	19 f0       	breq	.+6      	; 0x11a6 <burst+0x6c>
    11a0:	12 96       	adiw	r26, 0x02	; 2
    11a2:	6c 91       	ld	r22, X
    11a4:	09 95       	icall
    11a6:	8f b7       	in	r24, 0x3f	; 63
    11a8:	90 91 4a 01 	lds	r25, 0x014A
    11ac:	89 2b       	or	r24, r25
    11ae:	8f bf       	out	0x3f, r24	; 63
    11b0:	cf 5f       	subi	r28, 0xFF	; 255
    11b2:	80 91 30 01 	lds	r24, 0x0130
    11b6:	c8 17       	cp	r28, r24
    11b8:	e0 f2       	brcs	.-72     	; 0x1172 <burst+0x38>
    11ba:	d3 b9       	out	0x03, r29	; 3
    11bc:	18 b9       	out	0x08, r17	; 8
    11be:	0f bd       	out	0x2f, r16	; 47
    11c0:	fe bc       	out	0x2e, r15	; 46
    11c2:	eb b8       	out	0x0b, r14	; 11
    11c4:	bd bc       	out	0x2d, r11	; 45
    11c6:	ac bc       	out	0x2c, r10	; 44
    11c8:	d0 b8       	out	0x00, r13	; 0
    11ca:	c7 b8       	out	0x07, r12	; 7
    11cc:	8f b7       	in	r24, 0x3f	; 63
    11ce:	90 91 4a 01 	lds	r25, 0x014A
    11d2:	89 2b       	or	r24, r25
    11d4:	8f bf       	out	0x3f, r24	; 63
    11d6:	cd b7       	in	r28, 0x3d	; 61
    11d8:	de b7       	in	r29, 0x3e	; 62
    11da:	ea e0       	ldi	r30, 0x0A	; 10
    11dc:	b2 c5       	rjmp	.+2916   	; 0x1d42 <__epilogue_restores__+0x10>

000011de <main>:
{
	char modeStatus = 2; // Startup Mode
		

   /* initialize host app, pins, watchdog, etc */
    init_system();
    11de:	37 d9       	rcall	.-3474   	; 0x44e <init_system>

    /* configure timer ISR to fire regularly */
    init_timer_isr();
    11e0:	f5 d8       	rcall	.-3606   	; 0x3cc <init_timer_isr>

	/* Initialize Touch sensors */
	touch_init();
    11e2:	a1 d9       	rcall	.-3262   	; 0x526 <touch_init>

	i2c_init();                             // initialize I2C library
    11e4:	42 d7       	rcall	.+3716   	; 0x206a <__data_load_end+0x25e>
    11e6:	8f ef       	ldi	r24, 0xFF	; 255
    11e8:	96 e7       	ldi	r25, 0x76	; 118
    11ea:	a1 e0       	ldi	r26, 0x01	; 1
    11ec:	81 50       	subi	r24, 0x01	; 1
    11ee:	90 40       	sbci	r25, 0x00	; 0
    11f0:	a0 40       	sbci	r26, 0x00	; 0
    11f2:	e1 f7       	brne	.-8      	; 0x11ec <main+0xe>
    11f4:	00 c0       	rjmp	.+0      	; 0x11f6 <main+0x18>
    11f6:	00 00       	nop
	_delay_ms(60);           // delay
		
	pca9685_init2(PCA9685);
    11f8:	8a ea       	ldi	r24, 0xAA	; 170
    11fa:	90 e0       	ldi	r25, 0x00	; 0
    11fc:	95 d7       	rcall	.+3882   	; 0x2128 <__data_load_end+0x31c>
    11fe:	8f ef       	ldi	r24, 0xFF	; 255
    1200:	96 e7       	ldi	r25, 0x76	; 118
    1202:	a1 e0       	ldi	r26, 0x01	; 1
    1204:	81 50       	subi	r24, 0x01	; 1
    1206:	90 40       	sbci	r25, 0x00	; 0
    1208:	a0 40       	sbci	r26, 0x00	; 0
    120a:	e1 f7       	brne	.-8      	; 0x1204 <main+0x26>
    120c:	00 c0       	rjmp	.+0      	; 0x120e <main+0x30>
    120e:	00 00       	nop
	_delay_ms(60);           // delay

	pca9685_brightness(PCA9685,50,15);
    1210:	82 e3       	ldi	r24, 0x32	; 50
    1212:	90 e0       	ldi	r25, 0x00	; 0
    1214:	6f e0       	ldi	r22, 0x0F	; 15
    1216:	70 e0       	ldi	r23, 0x00	; 0
    1218:	3e d8       	rcall	.-3972   	; 0x296 <pca9685_brightness.constprop.1>

	__enable_interrupt();  // Enable interrupts for QMatrix (Per AVR1203)
    121a:	78 94       	sei
Output  :   n/a
Notes   :
============================================================================*/
int main( void )
{
	char modeStatus = 2; // Startup Mode
    121c:	12 e0       	ldi	r17, 0x02	; 2
    121e:	8f ef       	ldi	r24, 0xFF	; 255
    1220:	91 ee       	ldi	r25, 0xE1	; 225
    1222:	a4 e0       	ldi	r26, 0x04	; 4
    1224:	81 50       	subi	r24, 0x01	; 1
    1226:	90 40       	sbci	r25, 0x00	; 0
    1228:	a0 40       	sbci	r26, 0x00	; 0
    122a:	e1 f7       	brne	.-8      	; 0x1224 <main+0x46>
    122c:	00 c0       	rjmp	.+0      	; 0x122e <main+0x50>
    122e:	00 00       	nop
    /* loop forever */
    for( ; ; )
    {
		
		_delay_ms(200); //let everything discharge?
		if (touch_measure() == 0x0001) // Check if we have a touch sensed
    1230:	98 d9       	rcall	.-3280   	; 0x562 <touch_measure>
    1232:	81 30       	cpi	r24, 0x01	; 1
    1234:	91 05       	cpc	r25, r1
    1236:	d9 f4       	brne	.+54     	; 0x126e <main+0x90>
		{
			pca9685_brightness(PCA9685,0,15);
    1238:	80 e0       	ldi	r24, 0x00	; 0
    123a:	90 e0       	ldi	r25, 0x00	; 0
    123c:	6f e0       	ldi	r22, 0x0F	; 15
    123e:	70 e0       	ldi	r23, 0x00	; 0
    1240:	2a d8       	rcall	.-4012   	; 0x296 <pca9685_brightness.constprop.1>
    1242:	8f ef       	ldi	r24, 0xFF	; 255
    1244:	91 ee       	ldi	r25, 0xE1	; 225
    1246:	a4 e0       	ldi	r26, 0x04	; 4
    1248:	81 50       	subi	r24, 0x01	; 1
    124a:	90 40       	sbci	r25, 0x00	; 0
    124c:	a0 40       	sbci	r26, 0x00	; 0
    124e:	e1 f7       	brne	.-8      	; 0x1248 <main+0x6a>
    1250:	00 c0       	rjmp	.+0      	; 0x1252 <main+0x74>
    1252:	00 00       	nop
			_delay_ms(200);
			pca9685_brightness(PCA9685,50,15);
    1254:	82 e3       	ldi	r24, 0x32	; 50
    1256:	90 e0       	ldi	r25, 0x00	; 0
    1258:	6f e0       	ldi	r22, 0x0F	; 15
    125a:	70 e0       	ldi	r23, 0x00	; 0
    125c:	1c d8       	rcall	.-4040   	; 0x296 <pca9685_brightness.constprop.1>
    125e:	8f ef       	ldi	r24, 0xFF	; 255
    1260:	91 ee       	ldi	r25, 0xE1	; 225
    1262:	a4 e0       	ldi	r26, 0x04	; 4
    1264:	81 50       	subi	r24, 0x01	; 1
    1266:	90 40       	sbci	r25, 0x00	; 0
    1268:	a0 40       	sbci	r26, 0x00	; 0
    126a:	e1 f7       	brne	.-8      	; 0x1264 <main+0x86>
    126c:	07 c4       	rjmp	.+2062   	; 0x1a7c <main+0x89e>
	
	
	// Check the current status of modeStatus (the mode button)
	// set port pin PORTA7 as input and leave the others pins
	// in their original state (inputs or outputs, it doesn't matter)
	DDRA &= ~(1 << PA7);
    126e:	d7 98       	cbi	0x1a, 7	; 26
	
	if (PINA & (1<<PA7))
    1270:	cf 99       	sbic	0x19, 7	; 25
    1272:	08 c0       	rjmp	.+16     	; 0x1284 <main+0xa6>
    1274:	16 30       	cpi	r17, 0x06	; 6
    1276:	08 f0       	brcs	.+2      	; 0x127a <main+0x9c>
    1278:	b6 c1       	rjmp	.+876    	; 0x15e6 <main+0x408>
    127a:	e1 2f       	mov	r30, r17
    127c:	f0 e0       	ldi	r31, 0x00	; 0
    127e:	e2 52       	subi	r30, 0x22	; 34
    1280:	ff 4f       	sbci	r31, 0xFF	; 255
    1282:	10 81       	ld	r17, Z
	
	
	
	// check what the current mode is, and modify the animation based on that
	
	if (modeStatus == 0) // 
    1284:	11 23       	and	r17, r17
    1286:	09 f0       	breq	.+2      	; 0x128a <main+0xac>
    1288:	ef c0       	rjmp	.+478    	; 0x1468 <main+0x28a>
	{
		
		for(int i = 3; i <= 5; i++)
		{
			pca9685_brightness(PCA9685,1,i);
    128a:	81 e0       	ldi	r24, 0x01	; 1
    128c:	90 e0       	ldi	r25, 0x00	; 0
    128e:	63 e0       	ldi	r22, 0x03	; 3
    1290:	70 e0       	ldi	r23, 0x00	; 0
    1292:	01 d8       	rcall	.-4094   	; 0x296 <pca9685_brightness.constprop.1>
    1294:	81 e0       	ldi	r24, 0x01	; 1
    1296:	90 e0       	ldi	r25, 0x00	; 0
    1298:	64 e0       	ldi	r22, 0x04	; 4
    129a:	70 e0       	ldi	r23, 0x00	; 0
    129c:	fc d7       	rcall	.+4088   	; 0x2296 <__data_load_end+0x48a>
    129e:	81 e0       	ldi	r24, 0x01	; 1
    12a0:	90 e0       	ldi	r25, 0x00	; 0
    12a2:	65 e0       	ldi	r22, 0x05	; 5
    12a4:	70 e0       	ldi	r23, 0x00	; 0
    12a6:	f7 d7       	rcall	.+4078   	; 0x2296 <__data_load_end+0x48a>
    12a8:	8f ef       	ldi	r24, 0xFF	; 255
    12aa:	90 e7       	ldi	r25, 0x70	; 112
    12ac:	a2 e0       	ldi	r26, 0x02	; 2
    12ae:	81 50       	subi	r24, 0x01	; 1
    12b0:	90 40       	sbci	r25, 0x00	; 0
    12b2:	a0 40       	sbci	r26, 0x00	; 0
    12b4:	e1 f7       	brne	.-8      	; 0x12ae <main+0xd0>
    12b6:	00 c0       	rjmp	.+0      	; 0x12b8 <main+0xda>
    12b8:	00 00       	nop
		
		_delay_ms(100);
		
		for(int i = 0; i <= 2; i++)
		{
			pca9685_brightness(PCA9685,1,i);
    12ba:	81 e0       	ldi	r24, 0x01	; 1
    12bc:	90 e0       	ldi	r25, 0x00	; 0
    12be:	60 e0       	ldi	r22, 0x00	; 0
    12c0:	70 e0       	ldi	r23, 0x00	; 0
    12c2:	e9 d7       	rcall	.+4050   	; 0x2296 <__data_load_end+0x48a>
    12c4:	81 e0       	ldi	r24, 0x01	; 1
    12c6:	90 e0       	ldi	r25, 0x00	; 0
    12c8:	61 e0       	ldi	r22, 0x01	; 1
    12ca:	70 e0       	ldi	r23, 0x00	; 0
    12cc:	e4 d7       	rcall	.+4040   	; 0x2296 <__data_load_end+0x48a>
    12ce:	81 e0       	ldi	r24, 0x01	; 1
    12d0:	90 e0       	ldi	r25, 0x00	; 0
    12d2:	62 e0       	ldi	r22, 0x02	; 2
    12d4:	70 e0       	ldi	r23, 0x00	; 0
    12d6:	df d7       	rcall	.+4030   	; 0x2296 <__data_load_end+0x48a>
    12d8:	8f ef       	ldi	r24, 0xFF	; 255
    12da:	90 e7       	ldi	r25, 0x70	; 112
    12dc:	a2 e0       	ldi	r26, 0x02	; 2
    12de:	81 50       	subi	r24, 0x01	; 1
    12e0:	90 40       	sbci	r25, 0x00	; 0
    12e2:	a0 40       	sbci	r26, 0x00	; 0
    12e4:	e1 f7       	brne	.-8      	; 0x12de <main+0x100>
    12e6:	00 c0       	rjmp	.+0      	; 0x12e8 <main+0x10a>
    12e8:	00 00       	nop
		
		_delay_ms(100);
		
		for(int i = 6; i <= 8; i++)
		{
			pca9685_brightness(PCA9685,1,i);
    12ea:	81 e0       	ldi	r24, 0x01	; 1
    12ec:	90 e0       	ldi	r25, 0x00	; 0
    12ee:	66 e0       	ldi	r22, 0x06	; 6
    12f0:	70 e0       	ldi	r23, 0x00	; 0
    12f2:	d1 d7       	rcall	.+4002   	; 0x2296 <__data_load_end+0x48a>
    12f4:	81 e0       	ldi	r24, 0x01	; 1
    12f6:	90 e0       	ldi	r25, 0x00	; 0
    12f8:	67 e0       	ldi	r22, 0x07	; 7
    12fa:	70 e0       	ldi	r23, 0x00	; 0
    12fc:	cc d7       	rcall	.+3992   	; 0x2296 <__data_load_end+0x48a>
    12fe:	81 e0       	ldi	r24, 0x01	; 1
    1300:	90 e0       	ldi	r25, 0x00	; 0
    1302:	68 e0       	ldi	r22, 0x08	; 8
    1304:	70 e0       	ldi	r23, 0x00	; 0
    1306:	c7 d7       	rcall	.+3982   	; 0x2296 <__data_load_end+0x48a>
    1308:	8f ef       	ldi	r24, 0xFF	; 255
    130a:	90 e7       	ldi	r25, 0x70	; 112
    130c:	a2 e0       	ldi	r26, 0x02	; 2
    130e:	81 50       	subi	r24, 0x01	; 1
    1310:	90 40       	sbci	r25, 0x00	; 0
    1312:	a0 40       	sbci	r26, 0x00	; 0
    1314:	e1 f7       	brne	.-8      	; 0x130e <main+0x130>
    1316:	00 c0       	rjmp	.+0      	; 0x1318 <main+0x13a>
    1318:	00 00       	nop
		
		_delay_ms(100);

		for(int i = 9; i <= 11; i++)
		{
			pca9685_brightness(PCA9685,1,i);
    131a:	81 e0       	ldi	r24, 0x01	; 1
    131c:	90 e0       	ldi	r25, 0x00	; 0
    131e:	69 e0       	ldi	r22, 0x09	; 9
    1320:	70 e0       	ldi	r23, 0x00	; 0
    1322:	b9 d7       	rcall	.+3954   	; 0x2296 <__data_load_end+0x48a>
    1324:	81 e0       	ldi	r24, 0x01	; 1
    1326:	90 e0       	ldi	r25, 0x00	; 0
    1328:	6a e0       	ldi	r22, 0x0A	; 10
    132a:	70 e0       	ldi	r23, 0x00	; 0
    132c:	b4 d7       	rcall	.+3944   	; 0x2296 <__data_load_end+0x48a>
    132e:	81 e0       	ldi	r24, 0x01	; 1
    1330:	90 e0       	ldi	r25, 0x00	; 0
    1332:	6b e0       	ldi	r22, 0x0B	; 11
    1334:	70 e0       	ldi	r23, 0x00	; 0
    1336:	af d7       	rcall	.+3934   	; 0x2296 <__data_load_end+0x48a>
    1338:	8f ef       	ldi	r24, 0xFF	; 255
    133a:	90 e7       	ldi	r25, 0x70	; 112
    133c:	a2 e0       	ldi	r26, 0x02	; 2
    133e:	81 50       	subi	r24, 0x01	; 1
    1340:	90 40       	sbci	r25, 0x00	; 0
    1342:	a0 40       	sbci	r26, 0x00	; 0
    1344:	e1 f7       	brne	.-8      	; 0x133e <main+0x160>
    1346:	00 c0       	rjmp	.+0      	; 0x1348 <main+0x16a>
    1348:	00 00       	nop
		_delay_ms(100);


		for(int i = 12; i <= 14; i++)
		{
			pca9685_brightness(PCA9685,1,i);
    134a:	81 e0       	ldi	r24, 0x01	; 1
    134c:	90 e0       	ldi	r25, 0x00	; 0
    134e:	6c e0       	ldi	r22, 0x0C	; 12
    1350:	70 e0       	ldi	r23, 0x00	; 0
    1352:	a1 d7       	rcall	.+3906   	; 0x2296 <__data_load_end+0x48a>
    1354:	81 e0       	ldi	r24, 0x01	; 1
    1356:	90 e0       	ldi	r25, 0x00	; 0
    1358:	6d e0       	ldi	r22, 0x0D	; 13
    135a:	70 e0       	ldi	r23, 0x00	; 0
    135c:	9c d7       	rcall	.+3896   	; 0x2296 <__data_load_end+0x48a>
    135e:	81 e0       	ldi	r24, 0x01	; 1
    1360:	90 e0       	ldi	r25, 0x00	; 0
    1362:	6e e0       	ldi	r22, 0x0E	; 14
    1364:	70 e0       	ldi	r23, 0x00	; 0
    1366:	97 d7       	rcall	.+3886   	; 0x2296 <__data_load_end+0x48a>
    1368:	8f ef       	ldi	r24, 0xFF	; 255
    136a:	90 e7       	ldi	r25, 0x70	; 112
    136c:	a2 e0       	ldi	r26, 0x02	; 2
    136e:	81 50       	subi	r24, 0x01	; 1
    1370:	90 40       	sbci	r25, 0x00	; 0
    1372:	a0 40       	sbci	r26, 0x00	; 0
    1374:	e1 f7       	brne	.-8      	; 0x136e <main+0x190>
    1376:	00 c0       	rjmp	.+0      	; 0x1378 <main+0x19a>
    1378:	00 00       	nop
		
		///////////////////////////////
		
		for(int i = 3; i <= 5; i++)
		{
			pca9685_brightness(PCA9685,25,i);
    137a:	89 e1       	ldi	r24, 0x19	; 25
    137c:	90 e0       	ldi	r25, 0x00	; 0
    137e:	63 e0       	ldi	r22, 0x03	; 3
    1380:	70 e0       	ldi	r23, 0x00	; 0
    1382:	89 d7       	rcall	.+3858   	; 0x2296 <__data_load_end+0x48a>
    1384:	89 e1       	ldi	r24, 0x19	; 25
    1386:	90 e0       	ldi	r25, 0x00	; 0
    1388:	64 e0       	ldi	r22, 0x04	; 4
    138a:	70 e0       	ldi	r23, 0x00	; 0
    138c:	84 d7       	rcall	.+3848   	; 0x2296 <__data_load_end+0x48a>
    138e:	89 e1       	ldi	r24, 0x19	; 25
    1390:	90 e0       	ldi	r25, 0x00	; 0
    1392:	65 e0       	ldi	r22, 0x05	; 5
    1394:	70 e0       	ldi	r23, 0x00	; 0
    1396:	7f d7       	rcall	.+3838   	; 0x2296 <__data_load_end+0x48a>
    1398:	8f ef       	ldi	r24, 0xFF	; 255
    139a:	90 e7       	ldi	r25, 0x70	; 112
    139c:	a2 e0       	ldi	r26, 0x02	; 2
    139e:	81 50       	subi	r24, 0x01	; 1
    13a0:	90 40       	sbci	r25, 0x00	; 0
    13a2:	a0 40       	sbci	r26, 0x00	; 0
    13a4:	e1 f7       	brne	.-8      	; 0x139e <main+0x1c0>
    13a6:	00 c0       	rjmp	.+0      	; 0x13a8 <main+0x1ca>
    13a8:	00 00       	nop
		
		_delay_ms(100);
		
		for(int i = 0; i <= 2; i++)
		{
			pca9685_brightness(PCA9685,25,i);
    13aa:	89 e1       	ldi	r24, 0x19	; 25
    13ac:	90 e0       	ldi	r25, 0x00	; 0
    13ae:	60 e0       	ldi	r22, 0x00	; 0
    13b0:	70 e0       	ldi	r23, 0x00	; 0
    13b2:	71 d7       	rcall	.+3810   	; 0x2296 <__data_load_end+0x48a>
    13b4:	89 e1       	ldi	r24, 0x19	; 25
    13b6:	90 e0       	ldi	r25, 0x00	; 0
    13b8:	61 e0       	ldi	r22, 0x01	; 1
    13ba:	70 e0       	ldi	r23, 0x00	; 0
    13bc:	6c d7       	rcall	.+3800   	; 0x2296 <__data_load_end+0x48a>
    13be:	89 e1       	ldi	r24, 0x19	; 25
    13c0:	90 e0       	ldi	r25, 0x00	; 0
    13c2:	62 e0       	ldi	r22, 0x02	; 2
    13c4:	70 e0       	ldi	r23, 0x00	; 0
    13c6:	67 d7       	rcall	.+3790   	; 0x2296 <__data_load_end+0x48a>
    13c8:	8f ef       	ldi	r24, 0xFF	; 255
    13ca:	90 e7       	ldi	r25, 0x70	; 112
    13cc:	a2 e0       	ldi	r26, 0x02	; 2
    13ce:	81 50       	subi	r24, 0x01	; 1
    13d0:	90 40       	sbci	r25, 0x00	; 0
    13d2:	a0 40       	sbci	r26, 0x00	; 0
    13d4:	e1 f7       	brne	.-8      	; 0x13ce <main+0x1f0>
    13d6:	00 c0       	rjmp	.+0      	; 0x13d8 <main+0x1fa>
    13d8:	00 00       	nop
		
		_delay_ms(100);
		
		for(int i = 6; i <= 8; i++)
		{
			pca9685_brightness(PCA9685,25,i);
    13da:	89 e1       	ldi	r24, 0x19	; 25
    13dc:	90 e0       	ldi	r25, 0x00	; 0
    13de:	66 e0       	ldi	r22, 0x06	; 6
    13e0:	70 e0       	ldi	r23, 0x00	; 0
    13e2:	59 d7       	rcall	.+3762   	; 0x2296 <__data_load_end+0x48a>
    13e4:	89 e1       	ldi	r24, 0x19	; 25
    13e6:	90 e0       	ldi	r25, 0x00	; 0
    13e8:	67 e0       	ldi	r22, 0x07	; 7
    13ea:	70 e0       	ldi	r23, 0x00	; 0
    13ec:	54 d7       	rcall	.+3752   	; 0x2296 <__data_load_end+0x48a>
    13ee:	89 e1       	ldi	r24, 0x19	; 25
    13f0:	90 e0       	ldi	r25, 0x00	; 0
    13f2:	68 e0       	ldi	r22, 0x08	; 8
    13f4:	70 e0       	ldi	r23, 0x00	; 0
    13f6:	4f d7       	rcall	.+3742   	; 0x2296 <__data_load_end+0x48a>
    13f8:	8f ef       	ldi	r24, 0xFF	; 255
    13fa:	90 e7       	ldi	r25, 0x70	; 112
    13fc:	a2 e0       	ldi	r26, 0x02	; 2
    13fe:	81 50       	subi	r24, 0x01	; 1
    1400:	90 40       	sbci	r25, 0x00	; 0
    1402:	a0 40       	sbci	r26, 0x00	; 0
    1404:	e1 f7       	brne	.-8      	; 0x13fe <main+0x220>
    1406:	00 c0       	rjmp	.+0      	; 0x1408 <main+0x22a>
    1408:	00 00       	nop
		
		_delay_ms(100);

		for(int i = 9; i <= 11; i++)
		{
			pca9685_brightness(PCA9685,25,i);
    140a:	89 e1       	ldi	r24, 0x19	; 25
    140c:	90 e0       	ldi	r25, 0x00	; 0
    140e:	69 e0       	ldi	r22, 0x09	; 9
    1410:	70 e0       	ldi	r23, 0x00	; 0
    1412:	41 d7       	rcall	.+3714   	; 0x2296 <__data_load_end+0x48a>
    1414:	89 e1       	ldi	r24, 0x19	; 25
    1416:	90 e0       	ldi	r25, 0x00	; 0
    1418:	6a e0       	ldi	r22, 0x0A	; 10
    141a:	70 e0       	ldi	r23, 0x00	; 0
    141c:	3c d7       	rcall	.+3704   	; 0x2296 <__data_load_end+0x48a>
    141e:	89 e1       	ldi	r24, 0x19	; 25
    1420:	90 e0       	ldi	r25, 0x00	; 0
    1422:	6b e0       	ldi	r22, 0x0B	; 11
    1424:	70 e0       	ldi	r23, 0x00	; 0
    1426:	37 d7       	rcall	.+3694   	; 0x2296 <__data_load_end+0x48a>
    1428:	8f ef       	ldi	r24, 0xFF	; 255
    142a:	90 e7       	ldi	r25, 0x70	; 112
    142c:	a2 e0       	ldi	r26, 0x02	; 2
    142e:	81 50       	subi	r24, 0x01	; 1
    1430:	90 40       	sbci	r25, 0x00	; 0
    1432:	a0 40       	sbci	r26, 0x00	; 0
    1434:	e1 f7       	brne	.-8      	; 0x142e <main+0x250>
    1436:	00 c0       	rjmp	.+0      	; 0x1438 <main+0x25a>
    1438:	00 00       	nop
		
		_delay_ms(100);

		for(int i = 12; i <= 14; i++)
		{
			pca9685_brightness(PCA9685,25,i);
    143a:	89 e1       	ldi	r24, 0x19	; 25
    143c:	90 e0       	ldi	r25, 0x00	; 0
    143e:	6c e0       	ldi	r22, 0x0C	; 12
    1440:	70 e0       	ldi	r23, 0x00	; 0
    1442:	29 d7       	rcall	.+3666   	; 0x2296 <__data_load_end+0x48a>
    1444:	89 e1       	ldi	r24, 0x19	; 25
    1446:	90 e0       	ldi	r25, 0x00	; 0
    1448:	6d e0       	ldi	r22, 0x0D	; 13
    144a:	70 e0       	ldi	r23, 0x00	; 0
    144c:	24 d7       	rcall	.+3656   	; 0x2296 <__data_load_end+0x48a>
    144e:	89 e1       	ldi	r24, 0x19	; 25
    1450:	90 e0       	ldi	r25, 0x00	; 0
    1452:	6e e0       	ldi	r22, 0x0E	; 14
    1454:	70 e0       	ldi	r23, 0x00	; 0
    1456:	1f d7       	rcall	.+3646   	; 0x2296 <__data_load_end+0x48a>
    1458:	8f ef       	ldi	r24, 0xFF	; 255
    145a:	90 e7       	ldi	r25, 0x70	; 112
    145c:	a2 e0       	ldi	r26, 0x02	; 2
    145e:	81 50       	subi	r24, 0x01	; 1
    1460:	90 40       	sbci	r25, 0x00	; 0
    1462:	a0 40       	sbci	r26, 0x00	; 0
    1464:	e1 f7       	brne	.-8      	; 0x145e <main+0x280>
    1466:	0a c3       	rjmp	.+1556   	; 0x1a7c <main+0x89e>
		
	}
	
	
	
	else if(modeStatus == 1)
    1468:	11 30       	cpi	r17, 0x01	; 1
    146a:	09 f0       	breq	.+2      	; 0x146e <main+0x290>
    146c:	b9 c0       	rjmp	.+370    	; 0x15e0 <main+0x402>
    146e:	c0 e0       	ldi	r28, 0x00	; 0
    1470:	d0 e0       	ldi	r29, 0x00	; 0
	{
		
		// Blink Red
		for(int i = 0; i <= LEDCOUNT - 1; i = i+3)
		{
			pca9685_brightness(PCA9685,20,i);
    1472:	84 e1       	ldi	r24, 0x14	; 20
    1474:	90 e0       	ldi	r25, 0x00	; 0
    1476:	be 01       	movw	r22, r28
    1478:	0e d7       	rcall	.+3612   	; 0x2296 <__data_load_end+0x48a>
Purpose :   main code entry point
Input   :   n/a
Output  :   n/a
Notes   :
============================================================================*/
int main( void )
    147a:	be 01       	movw	r22, r28
    147c:	6f 5f       	subi	r22, 0xFF	; 255
    147e:	7f 4f       	sbci	r23, 0xFF	; 255
		
		// Blink Red
		for(int i = 0; i <= LEDCOUNT - 1; i = i+3)
		{
			pca9685_brightness(PCA9685,20,i);
			pca9685_brightness(PCA9685,0,i+1);
    1480:	80 e0       	ldi	r24, 0x00	; 0
    1482:	90 e0       	ldi	r25, 0x00	; 0
    1484:	08 d7       	rcall	.+3600   	; 0x2296 <__data_load_end+0x48a>
Purpose :   main code entry point
Input   :   n/a
Output  :   n/a
Notes   :
============================================================================*/
int main( void )
    1486:	be 01       	movw	r22, r28
    1488:	6e 5f       	subi	r22, 0xFE	; 254
    148a:	7f 4f       	sbci	r23, 0xFF	; 255
		// Blink Red
		for(int i = 0; i <= LEDCOUNT - 1; i = i+3)
		{
			pca9685_brightness(PCA9685,20,i);
			pca9685_brightness(PCA9685,0,i+1);
			pca9685_brightness(PCA9685,0,i+2);
    148c:	80 e0       	ldi	r24, 0x00	; 0
    148e:	90 e0       	ldi	r25, 0x00	; 0
    1490:	02 d7       	rcall	.+3588   	; 0x2296 <__data_load_end+0x48a>
	
	else if(modeStatus == 1)
	{
		
		// Blink Red
		for(int i = 0; i <= LEDCOUNT - 1; i = i+3)
    1492:	23 96       	adiw	r28, 0x03	; 3
    1494:	cf 30       	cpi	r28, 0x0F	; 15
    1496:	d1 05       	cpc	r29, r1
    1498:	61 f7       	brne	.-40     	; 0x1472 <main+0x294>
    149a:	8f e7       	ldi	r24, 0x7F	; 127
    149c:	9a e1       	ldi	r25, 0x1A	; 26
    149e:	a6 e0       	ldi	r26, 0x06	; 6
    14a0:	81 50       	subi	r24, 0x01	; 1
    14a2:	90 40       	sbci	r25, 0x00	; 0
    14a4:	a0 40       	sbci	r26, 0x00	; 0
    14a6:	e1 f7       	brne	.-8      	; 0x14a0 <main+0x2c2>
    14a8:	00 c0       	rjmp	.+0      	; 0x14aa <main+0x2cc>
    14aa:	00 00       	nop
			pca9685_brightness(PCA9685,0,i+2);
		}
		
		_delay_ms(250);
		
		for(int i = 0; i <= LEDCOUNT - 1; i = i+3)
    14ac:	c0 e0       	ldi	r28, 0x00	; 0
    14ae:	d0 e0       	ldi	r29, 0x00	; 0
		{
			pca9685_brightness(PCA9685,0,i);
    14b0:	80 e0       	ldi	r24, 0x00	; 0
    14b2:	90 e0       	ldi	r25, 0x00	; 0
    14b4:	be 01       	movw	r22, r28
    14b6:	ef d6       	rcall	.+3550   	; 0x2296 <__data_load_end+0x48a>
Purpose :   main code entry point
Input   :   n/a
Output  :   n/a
Notes   :
============================================================================*/
int main( void )
    14b8:	be 01       	movw	r22, r28
    14ba:	6f 5f       	subi	r22, 0xFF	; 255
    14bc:	7f 4f       	sbci	r23, 0xFF	; 255
		_delay_ms(250);
		
		for(int i = 0; i <= LEDCOUNT - 1; i = i+3)
		{
			pca9685_brightness(PCA9685,0,i);
			pca9685_brightness(PCA9685,0,i+1);
    14be:	80 e0       	ldi	r24, 0x00	; 0
    14c0:	90 e0       	ldi	r25, 0x00	; 0
    14c2:	e9 d6       	rcall	.+3538   	; 0x2296 <__data_load_end+0x48a>
Purpose :   main code entry point
Input   :   n/a
Output  :   n/a
Notes   :
============================================================================*/
int main( void )
    14c4:	be 01       	movw	r22, r28
    14c6:	6e 5f       	subi	r22, 0xFE	; 254
    14c8:	7f 4f       	sbci	r23, 0xFF	; 255
		
		for(int i = 0; i <= LEDCOUNT - 1; i = i+3)
		{
			pca9685_brightness(PCA9685,0,i);
			pca9685_brightness(PCA9685,0,i+1);
			pca9685_brightness(PCA9685,0,i+2);
    14ca:	80 e0       	ldi	r24, 0x00	; 0
    14cc:	90 e0       	ldi	r25, 0x00	; 0
    14ce:	e3 d6       	rcall	.+3526   	; 0x2296 <__data_load_end+0x48a>
			pca9685_brightness(PCA9685,0,i+2);
		}
		
		_delay_ms(250);
		
		for(int i = 0; i <= LEDCOUNT - 1; i = i+3)
    14d0:	23 96       	adiw	r28, 0x03	; 3
    14d2:	cf 30       	cpi	r28, 0x0F	; 15
    14d4:	d1 05       	cpc	r29, r1
    14d6:	61 f7       	brne	.-40     	; 0x14b0 <main+0x2d2>
    14d8:	8f e7       	ldi	r24, 0x7F	; 127
    14da:	9a e1       	ldi	r25, 0x1A	; 26
    14dc:	a6 e0       	ldi	r26, 0x06	; 6
    14de:	81 50       	subi	r24, 0x01	; 1
    14e0:	90 40       	sbci	r25, 0x00	; 0
    14e2:	a0 40       	sbci	r26, 0x00	; 0
    14e4:	e1 f7       	brne	.-8      	; 0x14de <main+0x300>
    14e6:	00 c0       	rjmp	.+0      	; 0x14e8 <main+0x30a>
    14e8:	00 00       	nop
		}
		
		_delay_ms(250);
		
		// Blink Blue
		for(int i = 0; i <= LEDCOUNT - 1; i = i+3)
    14ea:	c0 e0       	ldi	r28, 0x00	; 0
    14ec:	d0 e0       	ldi	r29, 0x00	; 0
		{
			pca9685_brightness(PCA9685,0,i);
    14ee:	80 e0       	ldi	r24, 0x00	; 0
    14f0:	90 e0       	ldi	r25, 0x00	; 0
    14f2:	be 01       	movw	r22, r28
    14f4:	d0 d6       	rcall	.+3488   	; 0x2296 <__data_load_end+0x48a>
Purpose :   main code entry point
Input   :   n/a
Output  :   n/a
Notes   :
============================================================================*/
int main( void )
    14f6:	be 01       	movw	r22, r28
    14f8:	6f 5f       	subi	r22, 0xFF	; 255
    14fa:	7f 4f       	sbci	r23, 0xFF	; 255
		
		// Blink Blue
		for(int i = 0; i <= LEDCOUNT - 1; i = i+3)
		{
			pca9685_brightness(PCA9685,0,i);
			pca9685_brightness(PCA9685,20,i+1);
    14fc:	84 e1       	ldi	r24, 0x14	; 20
    14fe:	90 e0       	ldi	r25, 0x00	; 0
    1500:	ca d6       	rcall	.+3476   	; 0x2296 <__data_load_end+0x48a>
Purpose :   main code entry point
Input   :   n/a
Output  :   n/a
Notes   :
============================================================================*/
int main( void )
    1502:	be 01       	movw	r22, r28
    1504:	6e 5f       	subi	r22, 0xFE	; 254
    1506:	7f 4f       	sbci	r23, 0xFF	; 255
		// Blink Blue
		for(int i = 0; i <= LEDCOUNT - 1; i = i+3)
		{
			pca9685_brightness(PCA9685,0,i);
			pca9685_brightness(PCA9685,20,i+1);
			pca9685_brightness(PCA9685,0,i+2);
    1508:	80 e0       	ldi	r24, 0x00	; 0
    150a:	90 e0       	ldi	r25, 0x00	; 0
    150c:	c4 d6       	rcall	.+3464   	; 0x2296 <__data_load_end+0x48a>
		}
		
		_delay_ms(250);
		
		// Blink Blue
		for(int i = 0; i <= LEDCOUNT - 1; i = i+3)
    150e:	23 96       	adiw	r28, 0x03	; 3
    1510:	cf 30       	cpi	r28, 0x0F	; 15
    1512:	d1 05       	cpc	r29, r1
    1514:	61 f7       	brne	.-40     	; 0x14ee <main+0x310>
    1516:	8f e7       	ldi	r24, 0x7F	; 127
    1518:	9a e1       	ldi	r25, 0x1A	; 26
    151a:	a6 e0       	ldi	r26, 0x06	; 6
    151c:	81 50       	subi	r24, 0x01	; 1
    151e:	90 40       	sbci	r25, 0x00	; 0
    1520:	a0 40       	sbci	r26, 0x00	; 0
    1522:	e1 f7       	brne	.-8      	; 0x151c <main+0x33e>
    1524:	00 c0       	rjmp	.+0      	; 0x1526 <main+0x348>
    1526:	00 00       	nop
		}
		
		_delay_ms(250);


		for(int i = 0; i <= LEDCOUNT - 1; i = i+3)
    1528:	c0 e0       	ldi	r28, 0x00	; 0
    152a:	d0 e0       	ldi	r29, 0x00	; 0
		{
			pca9685_brightness(PCA9685,0,i);
    152c:	80 e0       	ldi	r24, 0x00	; 0
    152e:	90 e0       	ldi	r25, 0x00	; 0
    1530:	be 01       	movw	r22, r28
    1532:	b1 d6       	rcall	.+3426   	; 0x2296 <__data_load_end+0x48a>
Purpose :   main code entry point
Input   :   n/a
Output  :   n/a
Notes   :
============================================================================*/
int main( void )
    1534:	be 01       	movw	r22, r28
    1536:	6f 5f       	subi	r22, 0xFF	; 255
    1538:	7f 4f       	sbci	r23, 0xFF	; 255


		for(int i = 0; i <= LEDCOUNT - 1; i = i+3)
		{
			pca9685_brightness(PCA9685,0,i);
			pca9685_brightness(PCA9685,0,i+1);
    153a:	80 e0       	ldi	r24, 0x00	; 0
    153c:	90 e0       	ldi	r25, 0x00	; 0
    153e:	ab d6       	rcall	.+3414   	; 0x2296 <__data_load_end+0x48a>
Purpose :   main code entry point
Input   :   n/a
Output  :   n/a
Notes   :
============================================================================*/
int main( void )
    1540:	be 01       	movw	r22, r28
    1542:	6e 5f       	subi	r22, 0xFE	; 254
    1544:	7f 4f       	sbci	r23, 0xFF	; 255

		for(int i = 0; i <= LEDCOUNT - 1; i = i+3)
		{
			pca9685_brightness(PCA9685,0,i);
			pca9685_brightness(PCA9685,0,i+1);
			pca9685_brightness(PCA9685,0,i+2);
    1546:	80 e0       	ldi	r24, 0x00	; 0
    1548:	90 e0       	ldi	r25, 0x00	; 0
    154a:	a5 d6       	rcall	.+3402   	; 0x2296 <__data_load_end+0x48a>
		}
		
		_delay_ms(250);


		for(int i = 0; i <= LEDCOUNT - 1; i = i+3)
    154c:	23 96       	adiw	r28, 0x03	; 3
    154e:	cf 30       	cpi	r28, 0x0F	; 15
    1550:	d1 05       	cpc	r29, r1
    1552:	61 f7       	brne	.-40     	; 0x152c <main+0x34e>
    1554:	8f e7       	ldi	r24, 0x7F	; 127
    1556:	9a e1       	ldi	r25, 0x1A	; 26
    1558:	a6 e0       	ldi	r26, 0x06	; 6
    155a:	81 50       	subi	r24, 0x01	; 1
    155c:	90 40       	sbci	r25, 0x00	; 0
    155e:	a0 40       	sbci	r26, 0x00	; 0
    1560:	e1 f7       	brne	.-8      	; 0x155a <main+0x37c>
    1562:	00 c0       	rjmp	.+0      	; 0x1564 <main+0x386>
    1564:	00 00       	nop
		}
		
		_delay_ms(250);

		// Blink Green
		for(int i = 0; i <= LEDCOUNT - 1; i = i+3)
    1566:	c0 e0       	ldi	r28, 0x00	; 0
    1568:	d0 e0       	ldi	r29, 0x00	; 0
		{
			pca9685_brightness(PCA9685,0,i);
    156a:	80 e0       	ldi	r24, 0x00	; 0
    156c:	90 e0       	ldi	r25, 0x00	; 0
    156e:	be 01       	movw	r22, r28
    1570:	92 d6       	rcall	.+3364   	; 0x2296 <__data_load_end+0x48a>
Purpose :   main code entry point
Input   :   n/a
Output  :   n/a
Notes   :
============================================================================*/
int main( void )
    1572:	be 01       	movw	r22, r28
    1574:	6f 5f       	subi	r22, 0xFF	; 255
    1576:	7f 4f       	sbci	r23, 0xFF	; 255

		// Blink Green
		for(int i = 0; i <= LEDCOUNT - 1; i = i+3)
		{
			pca9685_brightness(PCA9685,0,i);
			pca9685_brightness(PCA9685,0,i+1);
    1578:	80 e0       	ldi	r24, 0x00	; 0
    157a:	90 e0       	ldi	r25, 0x00	; 0
    157c:	8c d6       	rcall	.+3352   	; 0x2296 <__data_load_end+0x48a>
Purpose :   main code entry point
Input   :   n/a
Output  :   n/a
Notes   :
============================================================================*/
int main( void )
    157e:	be 01       	movw	r22, r28
    1580:	6e 5f       	subi	r22, 0xFE	; 254
    1582:	7f 4f       	sbci	r23, 0xFF	; 255
		// Blink Green
		for(int i = 0; i <= LEDCOUNT - 1; i = i+3)
		{
			pca9685_brightness(PCA9685,0,i);
			pca9685_brightness(PCA9685,0,i+1);
			pca9685_brightness(PCA9685,20,i+2);
    1584:	84 e1       	ldi	r24, 0x14	; 20
    1586:	90 e0       	ldi	r25, 0x00	; 0
    1588:	86 d6       	rcall	.+3340   	; 0x2296 <__data_load_end+0x48a>
		}
		
		_delay_ms(250);

		// Blink Green
		for(int i = 0; i <= LEDCOUNT - 1; i = i+3)
    158a:	23 96       	adiw	r28, 0x03	; 3
    158c:	cf 30       	cpi	r28, 0x0F	; 15
    158e:	d1 05       	cpc	r29, r1
    1590:	61 f7       	brne	.-40     	; 0x156a <main+0x38c>
    1592:	8f e7       	ldi	r24, 0x7F	; 127
    1594:	9a e1       	ldi	r25, 0x1A	; 26
    1596:	a6 e0       	ldi	r26, 0x06	; 6
    1598:	81 50       	subi	r24, 0x01	; 1
    159a:	90 40       	sbci	r25, 0x00	; 0
    159c:	a0 40       	sbci	r26, 0x00	; 0
    159e:	e1 f7       	brne	.-8      	; 0x1598 <main+0x3ba>
    15a0:	00 c0       	rjmp	.+0      	; 0x15a2 <main+0x3c4>
    15a2:	00 00       	nop
		}
		
		_delay_ms(250);


		for(int i = 0; i <= LEDCOUNT - 1; i = i+3)
    15a4:	c0 e0       	ldi	r28, 0x00	; 0
    15a6:	d0 e0       	ldi	r29, 0x00	; 0
		{
			pca9685_brightness(PCA9685,0,i);
    15a8:	80 e0       	ldi	r24, 0x00	; 0
    15aa:	90 e0       	ldi	r25, 0x00	; 0
    15ac:	be 01       	movw	r22, r28
    15ae:	73 d6       	rcall	.+3302   	; 0x2296 <__data_load_end+0x48a>
Purpose :   main code entry point
Input   :   n/a
Output  :   n/a
Notes   :
============================================================================*/
int main( void )
    15b0:	be 01       	movw	r22, r28
    15b2:	6f 5f       	subi	r22, 0xFF	; 255
    15b4:	7f 4f       	sbci	r23, 0xFF	; 255


		for(int i = 0; i <= LEDCOUNT - 1; i = i+3)
		{
			pca9685_brightness(PCA9685,0,i);
			pca9685_brightness(PCA9685,0,i+1);
    15b6:	80 e0       	ldi	r24, 0x00	; 0
    15b8:	90 e0       	ldi	r25, 0x00	; 0
    15ba:	6d d6       	rcall	.+3290   	; 0x2296 <__data_load_end+0x48a>
Purpose :   main code entry point
Input   :   n/a
Output  :   n/a
Notes   :
============================================================================*/
int main( void )
    15bc:	be 01       	movw	r22, r28
    15be:	6e 5f       	subi	r22, 0xFE	; 254
    15c0:	7f 4f       	sbci	r23, 0xFF	; 255

		for(int i = 0; i <= LEDCOUNT - 1; i = i+3)
		{
			pca9685_brightness(PCA9685,0,i);
			pca9685_brightness(PCA9685,0,i+1);
			pca9685_brightness(PCA9685,0,i+2);
    15c2:	80 e0       	ldi	r24, 0x00	; 0
    15c4:	90 e0       	ldi	r25, 0x00	; 0
    15c6:	67 d6       	rcall	.+3278   	; 0x2296 <__data_load_end+0x48a>
		}
		
		_delay_ms(250);


		for(int i = 0; i <= LEDCOUNT - 1; i = i+3)
    15c8:	23 96       	adiw	r28, 0x03	; 3
    15ca:	cf 30       	cpi	r28, 0x0F	; 15
    15cc:	d1 05       	cpc	r29, r1
    15ce:	61 f7       	brne	.-40     	; 0x15a8 <main+0x3ca>
    15d0:	8f e7       	ldi	r24, 0x7F	; 127
    15d2:	9a e1       	ldi	r25, 0x1A	; 26
    15d4:	a6 e0       	ldi	r26, 0x06	; 6
    15d6:	81 50       	subi	r24, 0x01	; 1
    15d8:	90 40       	sbci	r25, 0x00	; 0
    15da:	a0 40       	sbci	r26, 0x00	; 0
    15dc:	e1 f7       	brne	.-8      	; 0x15d6 <main+0x3f8>
    15de:	4e c2       	rjmp	.+1180   	; 0x1a7c <main+0x89e>
		
		
		
		
	}
	else if(modeStatus == 2)
    15e0:	12 30       	cpi	r17, 0x02	; 2
    15e2:	09 f0       	breq	.+2      	; 0x15e6 <main+0x408>
    15e4:	8b c1       	rjmp	.+790    	; 0x18fc <main+0x71e>
	// Check the current status of modeStatus (the mode button)
	// set port pin PORTA7 as input and leave the others pins
	// in their original state (inputs or outputs, it doesn't matter)
	DDRA &= ~(1 << PA7);
	
	if (PINA & (1<<PA7))
    15e6:	c1 e0       	ldi	r28, 0x01	; 1
    15e8:	d0 e0       	ldi	r29, 0x00	; 0
	{
		
		// Turn off all LEDs before sequencing
		for(int i = 1; i <= LEDCOUNT - 1; i++)
		{
			pca9685_brightness(PCA9685,0,i);
    15ea:	80 e0       	ldi	r24, 0x00	; 0
    15ec:	90 e0       	ldi	r25, 0x00	; 0
    15ee:	be 01       	movw	r22, r28
    15f0:	52 d6       	rcall	.+3236   	; 0x2296 <__data_load_end+0x48a>
	}
	else if(modeStatus == 2)
	{
		
		// Turn off all LEDs before sequencing
		for(int i = 1; i <= LEDCOUNT - 1; i++)
    15f2:	21 96       	adiw	r28, 0x01	; 1
    15f4:	cf 30       	cpi	r28, 0x0F	; 15
    15f6:	d1 05       	cpc	r29, r1
    15f8:	c1 f7       	brne	.-16     	; 0x15ea <main+0x40c>
		{
			pca9685_brightness(PCA9685,0,i);
		}
		
		//Sequence through turning one LED chip on, then off, and proceeding
		pca9685_brightness(PCA9685,1,3);
    15fa:	81 e0       	ldi	r24, 0x01	; 1
    15fc:	90 e0       	ldi	r25, 0x00	; 0
    15fe:	63 e0       	ldi	r22, 0x03	; 3
    1600:	70 e0       	ldi	r23, 0x00	; 0
    1602:	49 d6       	rcall	.+3218   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,1,4);
    1604:	81 e0       	ldi	r24, 0x01	; 1
    1606:	90 e0       	ldi	r25, 0x00	; 0
    1608:	64 e0       	ldi	r22, 0x04	; 4
    160a:	70 e0       	ldi	r23, 0x00	; 0
    160c:	44 d6       	rcall	.+3208   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,1,5);
    160e:	81 e0       	ldi	r24, 0x01	; 1
    1610:	90 e0       	ldi	r25, 0x00	; 0
    1612:	65 e0       	ldi	r22, 0x05	; 5
    1614:	70 e0       	ldi	r23, 0x00	; 0
    1616:	3f d6       	rcall	.+3198   	; 0x2296 <__data_load_end+0x48a>
    1618:	8f ef       	ldi	r24, 0xFF	; 255
    161a:	91 ee       	ldi	r25, 0xE1	; 225
    161c:	a4 e0       	ldi	r26, 0x04	; 4
    161e:	81 50       	subi	r24, 0x01	; 1
    1620:	90 40       	sbci	r25, 0x00	; 0
    1622:	a0 40       	sbci	r26, 0x00	; 0
    1624:	e1 f7       	brne	.-8      	; 0x161e <main+0x440>
    1626:	00 c0       	rjmp	.+0      	; 0x1628 <main+0x44a>
    1628:	00 00       	nop
		_delay_ms(200);
		pca9685_brightness(PCA9685,0,3);
    162a:	80 e0       	ldi	r24, 0x00	; 0
    162c:	90 e0       	ldi	r25, 0x00	; 0
    162e:	63 e0       	ldi	r22, 0x03	; 3
    1630:	70 e0       	ldi	r23, 0x00	; 0
    1632:	31 d6       	rcall	.+3170   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,0,4);
    1634:	80 e0       	ldi	r24, 0x00	; 0
    1636:	90 e0       	ldi	r25, 0x00	; 0
    1638:	64 e0       	ldi	r22, 0x04	; 4
    163a:	70 e0       	ldi	r23, 0x00	; 0
    163c:	2c d6       	rcall	.+3160   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,0,5);
    163e:	80 e0       	ldi	r24, 0x00	; 0
    1640:	90 e0       	ldi	r25, 0x00	; 0
    1642:	65 e0       	ldi	r22, 0x05	; 5
    1644:	70 e0       	ldi	r23, 0x00	; 0
    1646:	27 d6       	rcall	.+3150   	; 0x2296 <__data_load_end+0x48a>
    1648:	8f ef       	ldi	r24, 0xFF	; 255
    164a:	91 ee       	ldi	r25, 0xE1	; 225
    164c:	a4 e0       	ldi	r26, 0x04	; 4
    164e:	81 50       	subi	r24, 0x01	; 1
    1650:	90 40       	sbci	r25, 0x00	; 0
    1652:	a0 40       	sbci	r26, 0x00	; 0
    1654:	e1 f7       	brne	.-8      	; 0x164e <main+0x470>
    1656:	00 c0       	rjmp	.+0      	; 0x1658 <main+0x47a>
    1658:	00 00       	nop
		_delay_ms(200);
		
		pca9685_brightness(PCA9685,1,0);
    165a:	81 e0       	ldi	r24, 0x01	; 1
    165c:	90 e0       	ldi	r25, 0x00	; 0
    165e:	60 e0       	ldi	r22, 0x00	; 0
    1660:	70 e0       	ldi	r23, 0x00	; 0
    1662:	19 d6       	rcall	.+3122   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,1,1);
    1664:	81 e0       	ldi	r24, 0x01	; 1
    1666:	90 e0       	ldi	r25, 0x00	; 0
    1668:	61 e0       	ldi	r22, 0x01	; 1
    166a:	70 e0       	ldi	r23, 0x00	; 0
    166c:	14 d6       	rcall	.+3112   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,1,2);
    166e:	81 e0       	ldi	r24, 0x01	; 1
    1670:	90 e0       	ldi	r25, 0x00	; 0
    1672:	62 e0       	ldi	r22, 0x02	; 2
    1674:	70 e0       	ldi	r23, 0x00	; 0
    1676:	0f d6       	rcall	.+3102   	; 0x2296 <__data_load_end+0x48a>
    1678:	8f ef       	ldi	r24, 0xFF	; 255
    167a:	90 e7       	ldi	r25, 0x70	; 112
    167c:	a2 e0       	ldi	r26, 0x02	; 2
    167e:	81 50       	subi	r24, 0x01	; 1
    1680:	90 40       	sbci	r25, 0x00	; 0
    1682:	a0 40       	sbci	r26, 0x00	; 0
    1684:	e1 f7       	brne	.-8      	; 0x167e <main+0x4a0>
    1686:	00 c0       	rjmp	.+0      	; 0x1688 <main+0x4aa>
    1688:	00 00       	nop
		_delay_ms(100);
		pca9685_brightness(PCA9685,0,0);
    168a:	80 e0       	ldi	r24, 0x00	; 0
    168c:	90 e0       	ldi	r25, 0x00	; 0
    168e:	60 e0       	ldi	r22, 0x00	; 0
    1690:	70 e0       	ldi	r23, 0x00	; 0
    1692:	01 d6       	rcall	.+3074   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,0,1);
    1694:	80 e0       	ldi	r24, 0x00	; 0
    1696:	90 e0       	ldi	r25, 0x00	; 0
    1698:	61 e0       	ldi	r22, 0x01	; 1
    169a:	70 e0       	ldi	r23, 0x00	; 0
    169c:	fc d5       	rcall	.+3064   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,0,2);
    169e:	80 e0       	ldi	r24, 0x00	; 0
    16a0:	90 e0       	ldi	r25, 0x00	; 0
    16a2:	62 e0       	ldi	r22, 0x02	; 2
    16a4:	70 e0       	ldi	r23, 0x00	; 0
    16a6:	f7 d5       	rcall	.+3054   	; 0x2296 <__data_load_end+0x48a>
    16a8:	8f ef       	ldi	r24, 0xFF	; 255
    16aa:	92 e5       	ldi	r25, 0x52	; 82
    16ac:	a7 e0       	ldi	r26, 0x07	; 7
    16ae:	81 50       	subi	r24, 0x01	; 1
    16b0:	90 40       	sbci	r25, 0x00	; 0
    16b2:	a0 40       	sbci	r26, 0x00	; 0
    16b4:	e1 f7       	brne	.-8      	; 0x16ae <main+0x4d0>
    16b6:	00 c0       	rjmp	.+0      	; 0x16b8 <main+0x4da>
    16b8:	00 00       	nop
		_delay_ms(300);

		pca9685_brightness(PCA9685,1,6);
    16ba:	81 e0       	ldi	r24, 0x01	; 1
    16bc:	90 e0       	ldi	r25, 0x00	; 0
    16be:	66 e0       	ldi	r22, 0x06	; 6
    16c0:	70 e0       	ldi	r23, 0x00	; 0
    16c2:	e9 d5       	rcall	.+3026   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,1,7);
    16c4:	81 e0       	ldi	r24, 0x01	; 1
    16c6:	90 e0       	ldi	r25, 0x00	; 0
    16c8:	67 e0       	ldi	r22, 0x07	; 7
    16ca:	70 e0       	ldi	r23, 0x00	; 0
    16cc:	e4 d5       	rcall	.+3016   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,1,8);
    16ce:	81 e0       	ldi	r24, 0x01	; 1
    16d0:	90 e0       	ldi	r25, 0x00	; 0
    16d2:	68 e0       	ldi	r22, 0x08	; 8
    16d4:	70 e0       	ldi	r23, 0x00	; 0
    16d6:	df d5       	rcall	.+3006   	; 0x2296 <__data_load_end+0x48a>
    16d8:	8f ef       	ldi	r24, 0xFF	; 255
    16da:	90 e7       	ldi	r25, 0x70	; 112
    16dc:	a2 e0       	ldi	r26, 0x02	; 2
    16de:	81 50       	subi	r24, 0x01	; 1
    16e0:	90 40       	sbci	r25, 0x00	; 0
    16e2:	a0 40       	sbci	r26, 0x00	; 0
    16e4:	e1 f7       	brne	.-8      	; 0x16de <main+0x500>
    16e6:	00 c0       	rjmp	.+0      	; 0x16e8 <main+0x50a>
    16e8:	00 00       	nop
		_delay_ms(100);
		pca9685_brightness(PCA9685,0,6);
    16ea:	80 e0       	ldi	r24, 0x00	; 0
    16ec:	90 e0       	ldi	r25, 0x00	; 0
    16ee:	66 e0       	ldi	r22, 0x06	; 6
    16f0:	70 e0       	ldi	r23, 0x00	; 0
    16f2:	d1 d5       	rcall	.+2978   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,0,7);
    16f4:	80 e0       	ldi	r24, 0x00	; 0
    16f6:	90 e0       	ldi	r25, 0x00	; 0
    16f8:	67 e0       	ldi	r22, 0x07	; 7
    16fa:	70 e0       	ldi	r23, 0x00	; 0
    16fc:	cc d5       	rcall	.+2968   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,0,8);
    16fe:	80 e0       	ldi	r24, 0x00	; 0
    1700:	90 e0       	ldi	r25, 0x00	; 0
    1702:	68 e0       	ldi	r22, 0x08	; 8
    1704:	70 e0       	ldi	r23, 0x00	; 0
    1706:	c7 d5       	rcall	.+2958   	; 0x2296 <__data_load_end+0x48a>
    1708:	8f ef       	ldi	r24, 0xFF	; 255
    170a:	92 e5       	ldi	r25, 0x52	; 82
    170c:	a7 e0       	ldi	r26, 0x07	; 7
    170e:	81 50       	subi	r24, 0x01	; 1
    1710:	90 40       	sbci	r25, 0x00	; 0
    1712:	a0 40       	sbci	r26, 0x00	; 0
    1714:	e1 f7       	brne	.-8      	; 0x170e <main+0x530>
    1716:	00 c0       	rjmp	.+0      	; 0x1718 <main+0x53a>
    1718:	00 00       	nop
		_delay_ms(300);

		pca9685_brightness(PCA9685,1,9);
    171a:	81 e0       	ldi	r24, 0x01	; 1
    171c:	90 e0       	ldi	r25, 0x00	; 0
    171e:	69 e0       	ldi	r22, 0x09	; 9
    1720:	70 e0       	ldi	r23, 0x00	; 0
    1722:	b9 d5       	rcall	.+2930   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,1,10);
    1724:	81 e0       	ldi	r24, 0x01	; 1
    1726:	90 e0       	ldi	r25, 0x00	; 0
    1728:	6a e0       	ldi	r22, 0x0A	; 10
    172a:	70 e0       	ldi	r23, 0x00	; 0
    172c:	b4 d5       	rcall	.+2920   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,1,11);
    172e:	81 e0       	ldi	r24, 0x01	; 1
    1730:	90 e0       	ldi	r25, 0x00	; 0
    1732:	6b e0       	ldi	r22, 0x0B	; 11
    1734:	70 e0       	ldi	r23, 0x00	; 0
    1736:	af d5       	rcall	.+2910   	; 0x2296 <__data_load_end+0x48a>
    1738:	8f ef       	ldi	r24, 0xFF	; 255
    173a:	90 e7       	ldi	r25, 0x70	; 112
    173c:	a2 e0       	ldi	r26, 0x02	; 2
    173e:	81 50       	subi	r24, 0x01	; 1
    1740:	90 40       	sbci	r25, 0x00	; 0
    1742:	a0 40       	sbci	r26, 0x00	; 0
    1744:	e1 f7       	brne	.-8      	; 0x173e <main+0x560>
    1746:	00 c0       	rjmp	.+0      	; 0x1748 <main+0x56a>
    1748:	00 00       	nop
		_delay_ms(100);
		pca9685_brightness(PCA9685,0,9);
    174a:	80 e0       	ldi	r24, 0x00	; 0
    174c:	90 e0       	ldi	r25, 0x00	; 0
    174e:	69 e0       	ldi	r22, 0x09	; 9
    1750:	70 e0       	ldi	r23, 0x00	; 0
    1752:	a1 d5       	rcall	.+2882   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,0,10);
    1754:	80 e0       	ldi	r24, 0x00	; 0
    1756:	90 e0       	ldi	r25, 0x00	; 0
    1758:	6a e0       	ldi	r22, 0x0A	; 10
    175a:	70 e0       	ldi	r23, 0x00	; 0
    175c:	9c d5       	rcall	.+2872   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,0,11);
    175e:	80 e0       	ldi	r24, 0x00	; 0
    1760:	90 e0       	ldi	r25, 0x00	; 0
    1762:	6b e0       	ldi	r22, 0x0B	; 11
    1764:	70 e0       	ldi	r23, 0x00	; 0
    1766:	97 d5       	rcall	.+2862   	; 0x2296 <__data_load_end+0x48a>
    1768:	8f ef       	ldi	r24, 0xFF	; 255
    176a:	92 e5       	ldi	r25, 0x52	; 82
    176c:	a7 e0       	ldi	r26, 0x07	; 7
    176e:	81 50       	subi	r24, 0x01	; 1
    1770:	90 40       	sbci	r25, 0x00	; 0
    1772:	a0 40       	sbci	r26, 0x00	; 0
    1774:	e1 f7       	brne	.-8      	; 0x176e <main+0x590>
    1776:	00 c0       	rjmp	.+0      	; 0x1778 <main+0x59a>
    1778:	00 00       	nop
		_delay_ms(300);


		pca9685_brightness(PCA9685,1,12);
    177a:	81 e0       	ldi	r24, 0x01	; 1
    177c:	90 e0       	ldi	r25, 0x00	; 0
    177e:	6c e0       	ldi	r22, 0x0C	; 12
    1780:	70 e0       	ldi	r23, 0x00	; 0
    1782:	89 d5       	rcall	.+2834   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,1,13);
    1784:	81 e0       	ldi	r24, 0x01	; 1
    1786:	90 e0       	ldi	r25, 0x00	; 0
    1788:	6d e0       	ldi	r22, 0x0D	; 13
    178a:	70 e0       	ldi	r23, 0x00	; 0
    178c:	84 d5       	rcall	.+2824   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,1,14);
    178e:	81 e0       	ldi	r24, 0x01	; 1
    1790:	90 e0       	ldi	r25, 0x00	; 0
    1792:	6e e0       	ldi	r22, 0x0E	; 14
    1794:	70 e0       	ldi	r23, 0x00	; 0
    1796:	7f d5       	rcall	.+2814   	; 0x2296 <__data_load_end+0x48a>
    1798:	8f ef       	ldi	r24, 0xFF	; 255
    179a:	91 ee       	ldi	r25, 0xE1	; 225
    179c:	a4 e0       	ldi	r26, 0x04	; 4
    179e:	81 50       	subi	r24, 0x01	; 1
    17a0:	90 40       	sbci	r25, 0x00	; 0
    17a2:	a0 40       	sbci	r26, 0x00	; 0
    17a4:	e1 f7       	brne	.-8      	; 0x179e <main+0x5c0>
    17a6:	00 c0       	rjmp	.+0      	; 0x17a8 <main+0x5ca>
    17a8:	00 00       	nop
		_delay_ms(200);
		pca9685_brightness(PCA9685,0,12);
    17aa:	80 e0       	ldi	r24, 0x00	; 0
    17ac:	90 e0       	ldi	r25, 0x00	; 0
    17ae:	6c e0       	ldi	r22, 0x0C	; 12
    17b0:	70 e0       	ldi	r23, 0x00	; 0
    17b2:	71 d5       	rcall	.+2786   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,0,13);
    17b4:	80 e0       	ldi	r24, 0x00	; 0
    17b6:	90 e0       	ldi	r25, 0x00	; 0
    17b8:	6d e0       	ldi	r22, 0x0D	; 13
    17ba:	70 e0       	ldi	r23, 0x00	; 0
    17bc:	6c d5       	rcall	.+2776   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,0,14);
    17be:	80 e0       	ldi	r24, 0x00	; 0
    17c0:	90 e0       	ldi	r25, 0x00	; 0
    17c2:	6e e0       	ldi	r22, 0x0E	; 14
    17c4:	70 e0       	ldi	r23, 0x00	; 0
    17c6:	67 d5       	rcall	.+2766   	; 0x2296 <__data_load_end+0x48a>
    17c8:	8f ef       	ldi	r24, 0xFF	; 255
    17ca:	91 ee       	ldi	r25, 0xE1	; 225
    17cc:	a4 e0       	ldi	r26, 0x04	; 4
    17ce:	81 50       	subi	r24, 0x01	; 1
    17d0:	90 40       	sbci	r25, 0x00	; 0
    17d2:	a0 40       	sbci	r26, 0x00	; 0
    17d4:	e1 f7       	brne	.-8      	; 0x17ce <main+0x5f0>
    17d6:	00 c0       	rjmp	.+0      	; 0x17d8 <main+0x5fa>
    17d8:	00 00       	nop
		_delay_ms(200);
		
		
		pca9685_brightness(PCA9685,1,9);
    17da:	81 e0       	ldi	r24, 0x01	; 1
    17dc:	90 e0       	ldi	r25, 0x00	; 0
    17de:	69 e0       	ldi	r22, 0x09	; 9
    17e0:	70 e0       	ldi	r23, 0x00	; 0
    17e2:	59 d5       	rcall	.+2738   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,1,10);
    17e4:	81 e0       	ldi	r24, 0x01	; 1
    17e6:	90 e0       	ldi	r25, 0x00	; 0
    17e8:	6a e0       	ldi	r22, 0x0A	; 10
    17ea:	70 e0       	ldi	r23, 0x00	; 0
    17ec:	54 d5       	rcall	.+2728   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,1,11);
    17ee:	81 e0       	ldi	r24, 0x01	; 1
    17f0:	90 e0       	ldi	r25, 0x00	; 0
    17f2:	6b e0       	ldi	r22, 0x0B	; 11
    17f4:	70 e0       	ldi	r23, 0x00	; 0
    17f6:	4f d5       	rcall	.+2718   	; 0x2296 <__data_load_end+0x48a>
    17f8:	8f ef       	ldi	r24, 0xFF	; 255
    17fa:	90 e7       	ldi	r25, 0x70	; 112
    17fc:	a2 e0       	ldi	r26, 0x02	; 2
    17fe:	81 50       	subi	r24, 0x01	; 1
    1800:	90 40       	sbci	r25, 0x00	; 0
    1802:	a0 40       	sbci	r26, 0x00	; 0
    1804:	e1 f7       	brne	.-8      	; 0x17fe <main+0x620>
    1806:	00 c0       	rjmp	.+0      	; 0x1808 <main+0x62a>
    1808:	00 00       	nop
		_delay_ms(100);
		pca9685_brightness(PCA9685,0,9);
    180a:	80 e0       	ldi	r24, 0x00	; 0
    180c:	90 e0       	ldi	r25, 0x00	; 0
    180e:	69 e0       	ldi	r22, 0x09	; 9
    1810:	70 e0       	ldi	r23, 0x00	; 0
    1812:	41 d5       	rcall	.+2690   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,0,10);
    1814:	80 e0       	ldi	r24, 0x00	; 0
    1816:	90 e0       	ldi	r25, 0x00	; 0
    1818:	6a e0       	ldi	r22, 0x0A	; 10
    181a:	70 e0       	ldi	r23, 0x00	; 0
    181c:	3c d5       	rcall	.+2680   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,0,11);
    181e:	80 e0       	ldi	r24, 0x00	; 0
    1820:	90 e0       	ldi	r25, 0x00	; 0
    1822:	6b e0       	ldi	r22, 0x0B	; 11
    1824:	70 e0       	ldi	r23, 0x00	; 0
    1826:	37 d5       	rcall	.+2670   	; 0x2296 <__data_load_end+0x48a>
    1828:	8f ef       	ldi	r24, 0xFF	; 255
    182a:	92 e5       	ldi	r25, 0x52	; 82
    182c:	a7 e0       	ldi	r26, 0x07	; 7
    182e:	81 50       	subi	r24, 0x01	; 1
    1830:	90 40       	sbci	r25, 0x00	; 0
    1832:	a0 40       	sbci	r26, 0x00	; 0
    1834:	e1 f7       	brne	.-8      	; 0x182e <main+0x650>
    1836:	00 c0       	rjmp	.+0      	; 0x1838 <main+0x65a>
    1838:	00 00       	nop
		_delay_ms(300);
		
		
		pca9685_brightness(PCA9685,1,6);
    183a:	81 e0       	ldi	r24, 0x01	; 1
    183c:	90 e0       	ldi	r25, 0x00	; 0
    183e:	66 e0       	ldi	r22, 0x06	; 6
    1840:	70 e0       	ldi	r23, 0x00	; 0
    1842:	29 d5       	rcall	.+2642   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,1,7);
    1844:	81 e0       	ldi	r24, 0x01	; 1
    1846:	90 e0       	ldi	r25, 0x00	; 0
    1848:	67 e0       	ldi	r22, 0x07	; 7
    184a:	70 e0       	ldi	r23, 0x00	; 0
    184c:	24 d5       	rcall	.+2632   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,1,8);
    184e:	81 e0       	ldi	r24, 0x01	; 1
    1850:	90 e0       	ldi	r25, 0x00	; 0
    1852:	68 e0       	ldi	r22, 0x08	; 8
    1854:	70 e0       	ldi	r23, 0x00	; 0
    1856:	1f d5       	rcall	.+2622   	; 0x2296 <__data_load_end+0x48a>
    1858:	8f ef       	ldi	r24, 0xFF	; 255
    185a:	90 e7       	ldi	r25, 0x70	; 112
    185c:	a2 e0       	ldi	r26, 0x02	; 2
    185e:	81 50       	subi	r24, 0x01	; 1
    1860:	90 40       	sbci	r25, 0x00	; 0
    1862:	a0 40       	sbci	r26, 0x00	; 0
    1864:	e1 f7       	brne	.-8      	; 0x185e <main+0x680>
    1866:	00 c0       	rjmp	.+0      	; 0x1868 <main+0x68a>
    1868:	00 00       	nop
		_delay_ms(100);
		pca9685_brightness(PCA9685,0,6);
    186a:	80 e0       	ldi	r24, 0x00	; 0
    186c:	90 e0       	ldi	r25, 0x00	; 0
    186e:	66 e0       	ldi	r22, 0x06	; 6
    1870:	70 e0       	ldi	r23, 0x00	; 0
    1872:	11 d5       	rcall	.+2594   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,0,7);
    1874:	80 e0       	ldi	r24, 0x00	; 0
    1876:	90 e0       	ldi	r25, 0x00	; 0
    1878:	67 e0       	ldi	r22, 0x07	; 7
    187a:	70 e0       	ldi	r23, 0x00	; 0
    187c:	0c d5       	rcall	.+2584   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,0,8);
    187e:	80 e0       	ldi	r24, 0x00	; 0
    1880:	90 e0       	ldi	r25, 0x00	; 0
    1882:	68 e0       	ldi	r22, 0x08	; 8
    1884:	70 e0       	ldi	r23, 0x00	; 0
    1886:	07 d5       	rcall	.+2574   	; 0x2296 <__data_load_end+0x48a>
    1888:	8f ef       	ldi	r24, 0xFF	; 255
    188a:	92 e5       	ldi	r25, 0x52	; 82
    188c:	a7 e0       	ldi	r26, 0x07	; 7
    188e:	81 50       	subi	r24, 0x01	; 1
    1890:	90 40       	sbci	r25, 0x00	; 0
    1892:	a0 40       	sbci	r26, 0x00	; 0
    1894:	e1 f7       	brne	.-8      	; 0x188e <main+0x6b0>
    1896:	00 c0       	rjmp	.+0      	; 0x1898 <main+0x6ba>
    1898:	00 00       	nop
		_delay_ms(300);			
				
		pca9685_brightness(PCA9685,1,0);
    189a:	81 e0       	ldi	r24, 0x01	; 1
    189c:	90 e0       	ldi	r25, 0x00	; 0
    189e:	60 e0       	ldi	r22, 0x00	; 0
    18a0:	70 e0       	ldi	r23, 0x00	; 0
    18a2:	f9 d4       	rcall	.+2546   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,1,1);
    18a4:	81 e0       	ldi	r24, 0x01	; 1
    18a6:	90 e0       	ldi	r25, 0x00	; 0
    18a8:	61 e0       	ldi	r22, 0x01	; 1
    18aa:	70 e0       	ldi	r23, 0x00	; 0
    18ac:	f4 d4       	rcall	.+2536   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,1,2);
    18ae:	81 e0       	ldi	r24, 0x01	; 1
    18b0:	90 e0       	ldi	r25, 0x00	; 0
    18b2:	62 e0       	ldi	r22, 0x02	; 2
    18b4:	70 e0       	ldi	r23, 0x00	; 0
    18b6:	ef d4       	rcall	.+2526   	; 0x2296 <__data_load_end+0x48a>
    18b8:	8f ef       	ldi	r24, 0xFF	; 255
    18ba:	90 e7       	ldi	r25, 0x70	; 112
    18bc:	a2 e0       	ldi	r26, 0x02	; 2
    18be:	81 50       	subi	r24, 0x01	; 1
    18c0:	90 40       	sbci	r25, 0x00	; 0
    18c2:	a0 40       	sbci	r26, 0x00	; 0
    18c4:	e1 f7       	brne	.-8      	; 0x18be <main+0x6e0>
    18c6:	00 c0       	rjmp	.+0      	; 0x18c8 <main+0x6ea>
    18c8:	00 00       	nop
		_delay_ms(100);
		pca9685_brightness(PCA9685,0,0);
    18ca:	80 e0       	ldi	r24, 0x00	; 0
    18cc:	90 e0       	ldi	r25, 0x00	; 0
    18ce:	60 e0       	ldi	r22, 0x00	; 0
    18d0:	70 e0       	ldi	r23, 0x00	; 0
    18d2:	e1 d4       	rcall	.+2498   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,0,1);
    18d4:	80 e0       	ldi	r24, 0x00	; 0
    18d6:	90 e0       	ldi	r25, 0x00	; 0
    18d8:	61 e0       	ldi	r22, 0x01	; 1
    18da:	70 e0       	ldi	r23, 0x00	; 0
    18dc:	dc d4       	rcall	.+2488   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,0,2);
    18de:	80 e0       	ldi	r24, 0x00	; 0
    18e0:	90 e0       	ldi	r25, 0x00	; 0
    18e2:	62 e0       	ldi	r22, 0x02	; 2
    18e4:	70 e0       	ldi	r23, 0x00	; 0
    18e6:	d7 d4       	rcall	.+2478   	; 0x2296 <__data_load_end+0x48a>
    18e8:	8f ef       	ldi	r24, 0xFF	; 255
    18ea:	92 e5       	ldi	r25, 0x52	; 82
    18ec:	a7 e0       	ldi	r26, 0x07	; 7
    18ee:	81 50       	subi	r24, 0x01	; 1
    18f0:	90 40       	sbci	r25, 0x00	; 0
    18f2:	a0 40       	sbci	r26, 0x00	; 0
    18f4:	e1 f7       	brne	.-8      	; 0x18ee <main+0x710>
    18f6:	00 c0       	rjmp	.+0      	; 0x18f8 <main+0x71a>
    18f8:	00 00       	nop
    18fa:	90 cc       	rjmp	.-1760   	; 0x121c <main+0x3e>
		_delay_ms(300);
		
		
		
	}
	else if(modeStatus == 3)
    18fc:	13 30       	cpi	r17, 0x03	; 3
    18fe:	59 f4       	brne	.+22     	; 0x1916 <main+0x738>
    1900:	c1 e0       	ldi	r28, 0x01	; 1
    1902:	d0 e0       	ldi	r29, 0x00	; 0
		
		
		// Turn off all LEDs
		for(int i = 1; i <= LEDCOUNT - 1; i++)
		{
			pca9685_brightness(PCA9685,0,i);
    1904:	80 e0       	ldi	r24, 0x00	; 0
    1906:	90 e0       	ldi	r25, 0x00	; 0
    1908:	be 01       	movw	r22, r28
    190a:	c5 d4       	rcall	.+2442   	; 0x2296 <__data_load_end+0x48a>
		
		// All LEDs off
		
		
		// Turn off all LEDs
		for(int i = 1; i <= LEDCOUNT - 1; i++)
    190c:	21 96       	adiw	r28, 0x01	; 1
    190e:	cf 30       	cpi	r28, 0x0F	; 15
    1910:	d1 05       	cpc	r29, r1
    1912:	c1 f7       	brne	.-16     	; 0x1904 <main+0x726>
    1914:	37 c0       	rjmp	.+110    	; 0x1984 <main+0x7a6>
		_delay_ms(500);
	}
	
	
	
	else if(modeStatus == 4)
    1916:	14 30       	cpi	r17, 0x04	; 4
    1918:	e9 f5       	brne	.+122    	; 0x1994 <main+0x7b6>
    191a:	c0 e0       	ldi	r28, 0x00	; 0
    191c:	d0 e0       	ldi	r29, 0x00	; 0
	{
		
		// Blink all FULL POWER
		for(int i = 0; i <= LEDCOUNT - 1; i = i+3)
		{
			pca9685_brightness(PCA9685,100,i);
    191e:	84 e6       	ldi	r24, 0x64	; 100
    1920:	90 e0       	ldi	r25, 0x00	; 0
    1922:	be 01       	movw	r22, r28
    1924:	b8 d4       	rcall	.+2416   	; 0x2296 <__data_load_end+0x48a>
Purpose :   main code entry point
Input   :   n/a
Output  :   n/a
Notes   :
============================================================================*/
int main( void )
    1926:	be 01       	movw	r22, r28
    1928:	6f 5f       	subi	r22, 0xFF	; 255
    192a:	7f 4f       	sbci	r23, 0xFF	; 255
		
		// Blink all FULL POWER
		for(int i = 0; i <= LEDCOUNT - 1; i = i+3)
		{
			pca9685_brightness(PCA9685,100,i);
			pca9685_brightness(PCA9685,100,i+1);
    192c:	84 e6       	ldi	r24, 0x64	; 100
    192e:	90 e0       	ldi	r25, 0x00	; 0
    1930:	b2 d4       	rcall	.+2404   	; 0x2296 <__data_load_end+0x48a>
Purpose :   main code entry point
Input   :   n/a
Output  :   n/a
Notes   :
============================================================================*/
int main( void )
    1932:	be 01       	movw	r22, r28
    1934:	6e 5f       	subi	r22, 0xFE	; 254
    1936:	7f 4f       	sbci	r23, 0xFF	; 255
		// Blink all FULL POWER
		for(int i = 0; i <= LEDCOUNT - 1; i = i+3)
		{
			pca9685_brightness(PCA9685,100,i);
			pca9685_brightness(PCA9685,100,i+1);
			pca9685_brightness(PCA9685,100,i+2);
    1938:	84 e6       	ldi	r24, 0x64	; 100
    193a:	90 e0       	ldi	r25, 0x00	; 0
    193c:	ac d4       	rcall	.+2392   	; 0x2296 <__data_load_end+0x48a>
	
	else if(modeStatus == 4)
	{
		
		// Blink all FULL POWER
		for(int i = 0; i <= LEDCOUNT - 1; i = i+3)
    193e:	23 96       	adiw	r28, 0x03	; 3
    1940:	cf 30       	cpi	r28, 0x0F	; 15
    1942:	d1 05       	cpc	r29, r1
    1944:	61 f7       	brne	.-40     	; 0x191e <main+0x740>
    1946:	8f ef       	ldi	r24, 0xFF	; 255
    1948:	92 e5       	ldi	r25, 0x52	; 82
    194a:	a7 e0       	ldi	r26, 0x07	; 7
    194c:	81 50       	subi	r24, 0x01	; 1
    194e:	90 40       	sbci	r25, 0x00	; 0
    1950:	a0 40       	sbci	r26, 0x00	; 0
    1952:	e1 f7       	brne	.-8      	; 0x194c <main+0x76e>
    1954:	00 c0       	rjmp	.+0      	; 0x1956 <main+0x778>
    1956:	00 00       	nop
			pca9685_brightness(PCA9685,100,i+2);
		}
		
		_delay_ms(300);
				
		for(int i = 0; i <= LEDCOUNT - 1; i = i+3)
    1958:	c0 e0       	ldi	r28, 0x00	; 0
    195a:	d0 e0       	ldi	r29, 0x00	; 0
		{
			pca9685_brightness(PCA9685,0,i);
    195c:	80 e0       	ldi	r24, 0x00	; 0
    195e:	90 e0       	ldi	r25, 0x00	; 0
    1960:	be 01       	movw	r22, r28
    1962:	99 d4       	rcall	.+2354   	; 0x2296 <__data_load_end+0x48a>
Purpose :   main code entry point
Input   :   n/a
Output  :   n/a
Notes   :
============================================================================*/
int main( void )
    1964:	be 01       	movw	r22, r28
    1966:	6f 5f       	subi	r22, 0xFF	; 255
    1968:	7f 4f       	sbci	r23, 0xFF	; 255
		_delay_ms(300);
				
		for(int i = 0; i <= LEDCOUNT - 1; i = i+3)
		{
			pca9685_brightness(PCA9685,0,i);
			pca9685_brightness(PCA9685,0,i+1);
    196a:	80 e0       	ldi	r24, 0x00	; 0
    196c:	90 e0       	ldi	r25, 0x00	; 0
    196e:	93 d4       	rcall	.+2342   	; 0x2296 <__data_load_end+0x48a>
Purpose :   main code entry point
Input   :   n/a
Output  :   n/a
Notes   :
============================================================================*/
int main( void )
    1970:	be 01       	movw	r22, r28
    1972:	6e 5f       	subi	r22, 0xFE	; 254
    1974:	7f 4f       	sbci	r23, 0xFF	; 255
				
		for(int i = 0; i <= LEDCOUNT - 1; i = i+3)
		{
			pca9685_brightness(PCA9685,0,i);
			pca9685_brightness(PCA9685,0,i+1);
			pca9685_brightness(PCA9685,0,i+2);
    1976:	80 e0       	ldi	r24, 0x00	; 0
    1978:	90 e0       	ldi	r25, 0x00	; 0
    197a:	8d d4       	rcall	.+2330   	; 0x2296 <__data_load_end+0x48a>
			pca9685_brightness(PCA9685,100,i+2);
		}
		
		_delay_ms(300);
				
		for(int i = 0; i <= LEDCOUNT - 1; i = i+3)
    197c:	23 96       	adiw	r28, 0x03	; 3
    197e:	cf 30       	cpi	r28, 0x0F	; 15
    1980:	d1 05       	cpc	r29, r1
    1982:	61 f7       	brne	.-40     	; 0x195c <main+0x77e>
    1984:	8f ef       	ldi	r24, 0xFF	; 255
    1986:	94 e3       	ldi	r25, 0x34	; 52
    1988:	ac e0       	ldi	r26, 0x0C	; 12
    198a:	81 50       	subi	r24, 0x01	; 1
    198c:	90 40       	sbci	r25, 0x00	; 0
    198e:	a0 40       	sbci	r26, 0x00	; 0
    1990:	e1 f7       	brne	.-8      	; 0x198a <main+0x7ac>
    1992:	74 c0       	rjmp	.+232    	; 0x1a7c <main+0x89e>
	
	
	
	
	
	else if(modeStatus == 5)
    1994:	15 30       	cpi	r17, 0x05	; 5
    1996:	09 f0       	breq	.+2      	; 0x199a <main+0x7bc>
    1998:	42 cc       	rjmp	.-1916   	; 0x121e <main+0x40>
	{
		
		// Randomish colors
		
		pca9685_brightness(PCA9685,2,0); // 1
    199a:	82 e0       	ldi	r24, 0x02	; 2
    199c:	90 e0       	ldi	r25, 0x00	; 0
    199e:	60 e0       	ldi	r22, 0x00	; 0
    19a0:	70 e0       	ldi	r23, 0x00	; 0
    19a2:	79 d4       	rcall	.+2290   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,5,1); // 2
    19a4:	85 e0       	ldi	r24, 0x05	; 5
    19a6:	90 e0       	ldi	r25, 0x00	; 0
    19a8:	61 e0       	ldi	r22, 0x01	; 1
    19aa:	70 e0       	ldi	r23, 0x00	; 0
    19ac:	74 d4       	rcall	.+2280   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,0,2); // 3
    19ae:	80 e0       	ldi	r24, 0x00	; 0
    19b0:	90 e0       	ldi	r25, 0x00	; 0
    19b2:	62 e0       	ldi	r22, 0x02	; 2
    19b4:	70 e0       	ldi	r23, 0x00	; 0
    19b6:	6f d4       	rcall	.+2270   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,5,3); // 4
    19b8:	85 e0       	ldi	r24, 0x05	; 5
    19ba:	90 e0       	ldi	r25, 0x00	; 0
    19bc:	63 e0       	ldi	r22, 0x03	; 3
    19be:	70 e0       	ldi	r23, 0x00	; 0
    19c0:	6a d4       	rcall	.+2260   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,0,4); // 5
    19c2:	80 e0       	ldi	r24, 0x00	; 0
    19c4:	90 e0       	ldi	r25, 0x00	; 0
    19c6:	64 e0       	ldi	r22, 0x04	; 4
    19c8:	70 e0       	ldi	r23, 0x00	; 0
    19ca:	65 d4       	rcall	.+2250   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,5,5); // 1
    19cc:	85 e0       	ldi	r24, 0x05	; 5
    19ce:	90 e0       	ldi	r25, 0x00	; 0
    19d0:	65 e0       	ldi	r22, 0x05	; 5
    19d2:	70 e0       	ldi	r23, 0x00	; 0
    19d4:	60 d4       	rcall	.+2240   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,0,6); // 2
    19d6:	80 e0       	ldi	r24, 0x00	; 0
    19d8:	90 e0       	ldi	r25, 0x00	; 0
    19da:	66 e0       	ldi	r22, 0x06	; 6
    19dc:	70 e0       	ldi	r23, 0x00	; 0
    19de:	5b d4       	rcall	.+2230   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,5,7); // 3
    19e0:	85 e0       	ldi	r24, 0x05	; 5
    19e2:	90 e0       	ldi	r25, 0x00	; 0
    19e4:	67 e0       	ldi	r22, 0x07	; 7
    19e6:	70 e0       	ldi	r23, 0x00	; 0
    19e8:	56 d4       	rcall	.+2220   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,0,8); // 4
    19ea:	80 e0       	ldi	r24, 0x00	; 0
    19ec:	90 e0       	ldi	r25, 0x00	; 0
    19ee:	68 e0       	ldi	r22, 0x08	; 8
    19f0:	70 e0       	ldi	r23, 0x00	; 0
    19f2:	51 d4       	rcall	.+2210   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,5,9); // 5
    19f4:	85 e0       	ldi	r24, 0x05	; 5
    19f6:	90 e0       	ldi	r25, 0x00	; 0
    19f8:	69 e0       	ldi	r22, 0x09	; 9
    19fa:	70 e0       	ldi	r23, 0x00	; 0
    19fc:	4c d4       	rcall	.+2200   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,0,10); // 1
    19fe:	80 e0       	ldi	r24, 0x00	; 0
    1a00:	90 e0       	ldi	r25, 0x00	; 0
    1a02:	6a e0       	ldi	r22, 0x0A	; 10
    1a04:	70 e0       	ldi	r23, 0x00	; 0
    1a06:	47 d4       	rcall	.+2190   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,5,11); // 2
    1a08:	85 e0       	ldi	r24, 0x05	; 5
    1a0a:	90 e0       	ldi	r25, 0x00	; 0
    1a0c:	6b e0       	ldi	r22, 0x0B	; 11
    1a0e:	70 e0       	ldi	r23, 0x00	; 0
    1a10:	42 d4       	rcall	.+2180   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,2,12); // 3
    1a12:	82 e0       	ldi	r24, 0x02	; 2
    1a14:	90 e0       	ldi	r25, 0x00	; 0
    1a16:	6c e0       	ldi	r22, 0x0C	; 12
    1a18:	70 e0       	ldi	r23, 0x00	; 0
    1a1a:	3d d4       	rcall	.+2170   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,0,13); // 4
    1a1c:	80 e0       	ldi	r24, 0x00	; 0
    1a1e:	90 e0       	ldi	r25, 0x00	; 0
    1a20:	6d e0       	ldi	r22, 0x0D	; 13
    1a22:	70 e0       	ldi	r23, 0x00	; 0
    1a24:	38 d4       	rcall	.+2160   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,0,14); // 5
    1a26:	80 e0       	ldi	r24, 0x00	; 0
    1a28:	90 e0       	ldi	r25, 0x00	; 0
    1a2a:	6e e0       	ldi	r22, 0x0E	; 14
    1a2c:	70 e0       	ldi	r23, 0x00	; 0
    1a2e:	33 d4       	rcall	.+2150   	; 0x2296 <__data_load_end+0x48a>
    1a30:	8f ef       	ldi	r24, 0xFF	; 255
    1a32:	91 ee       	ldi	r25, 0xE1	; 225
    1a34:	a4 e0       	ldi	r26, 0x04	; 4
    1a36:	81 50       	subi	r24, 0x01	; 1
    1a38:	90 40       	sbci	r25, 0x00	; 0
    1a3a:	a0 40       	sbci	r26, 0x00	; 0
    1a3c:	e1 f7       	brne	.-8      	; 0x1a36 <main+0x858>
    1a3e:	00 c0       	rjmp	.+0      	; 0x1a40 <main+0x862>
    1a40:	00 00       	nop
		
		_delay_ms(200);
		
		
		for(int i = 0; i <= LEDCOUNT - 1; i = i+3)
    1a42:	c0 e0       	ldi	r28, 0x00	; 0
    1a44:	d0 e0       	ldi	r29, 0x00	; 0
		{
			pca9685_brightness(PCA9685,0,i);
    1a46:	80 e0       	ldi	r24, 0x00	; 0
    1a48:	90 e0       	ldi	r25, 0x00	; 0
    1a4a:	be 01       	movw	r22, r28
    1a4c:	24 d4       	rcall	.+2120   	; 0x2296 <__data_load_end+0x48a>
Purpose :   main code entry point
Input   :   n/a
Output  :   n/a
Notes   :
============================================================================*/
int main( void )
    1a4e:	be 01       	movw	r22, r28
    1a50:	6f 5f       	subi	r22, 0xFF	; 255
    1a52:	7f 4f       	sbci	r23, 0xFF	; 255
		
		
		for(int i = 0; i <= LEDCOUNT - 1; i = i+3)
		{
			pca9685_brightness(PCA9685,0,i);
			pca9685_brightness(PCA9685,0,i+1);
    1a54:	80 e0       	ldi	r24, 0x00	; 0
    1a56:	90 e0       	ldi	r25, 0x00	; 0
    1a58:	1e d4       	rcall	.+2108   	; 0x2296 <__data_load_end+0x48a>
Purpose :   main code entry point
Input   :   n/a
Output  :   n/a
Notes   :
============================================================================*/
int main( void )
    1a5a:	be 01       	movw	r22, r28
    1a5c:	6e 5f       	subi	r22, 0xFE	; 254
    1a5e:	7f 4f       	sbci	r23, 0xFF	; 255
		
		for(int i = 0; i <= LEDCOUNT - 1; i = i+3)
		{
			pca9685_brightness(PCA9685,0,i);
			pca9685_brightness(PCA9685,0,i+1);
			pca9685_brightness(PCA9685,0,i+2);
    1a60:	80 e0       	ldi	r24, 0x00	; 0
    1a62:	90 e0       	ldi	r25, 0x00	; 0
    1a64:	18 d4       	rcall	.+2096   	; 0x2296 <__data_load_end+0x48a>
		pca9685_brightness(PCA9685,0,14); // 5
		
		_delay_ms(200);
		
		
		for(int i = 0; i <= LEDCOUNT - 1; i = i+3)
    1a66:	23 96       	adiw	r28, 0x03	; 3
    1a68:	cf 30       	cpi	r28, 0x0F	; 15
    1a6a:	d1 05       	cpc	r29, r1
    1a6c:	61 f7       	brne	.-40     	; 0x1a46 <main+0x868>
    1a6e:	8f ef       	ldi	r24, 0xFF	; 255
    1a70:	93 ec       	ldi	r25, 0xC3	; 195
    1a72:	a9 e0       	ldi	r26, 0x09	; 9
    1a74:	81 50       	subi	r24, 0x01	; 1
    1a76:	90 40       	sbci	r25, 0x00	; 0
    1a78:	a0 40       	sbci	r26, 0x00	; 0
    1a7a:	e1 f7       	brne	.-8      	; 0x1a74 <main+0x896>
    1a7c:	00 c0       	rjmp	.+0      	; 0x1a7e <main+0x8a0>
    1a7e:	00 00       	nop
    1a80:	ce cb       	rjmp	.-2148   	; 0x121e <main+0x40>

00001a82 <__fixsfsi>:
    1a82:	04 d0       	rcall	.+8      	; 0x1a8c <__fixunssfsi>
    1a84:	68 94       	set
    1a86:	b1 11       	cpse	r27, r1
    1a88:	8d c0       	rjmp	.+282    	; 0x1ba4 <__fp_szero>
    1a8a:	08 95       	ret

00001a8c <__fixunssfsi>:
    1a8c:	70 d0       	rcall	.+224    	; 0x1b6e <__fp_splitA>
    1a8e:	88 f0       	brcs	.+34     	; 0x1ab2 <__fixunssfsi+0x26>
    1a90:	9f 57       	subi	r25, 0x7F	; 127
    1a92:	90 f0       	brcs	.+36     	; 0x1ab8 <__fixunssfsi+0x2c>
    1a94:	b9 2f       	mov	r27, r25
    1a96:	99 27       	eor	r25, r25
    1a98:	b7 51       	subi	r27, 0x17	; 23
    1a9a:	a0 f0       	brcs	.+40     	; 0x1ac4 <__fixunssfsi+0x38>
    1a9c:	d1 f0       	breq	.+52     	; 0x1ad2 <__fixunssfsi+0x46>
    1a9e:	66 0f       	add	r22, r22
    1aa0:	77 1f       	adc	r23, r23
    1aa2:	88 1f       	adc	r24, r24
    1aa4:	99 1f       	adc	r25, r25
    1aa6:	1a f0       	brmi	.+6      	; 0x1aae <__fixunssfsi+0x22>
    1aa8:	ba 95       	dec	r27
    1aaa:	c9 f7       	brne	.-14     	; 0x1a9e <__fixunssfsi+0x12>
    1aac:	12 c0       	rjmp	.+36     	; 0x1ad2 <__fixunssfsi+0x46>
    1aae:	b1 30       	cpi	r27, 0x01	; 1
    1ab0:	81 f0       	breq	.+32     	; 0x1ad2 <__fixunssfsi+0x46>
    1ab2:	77 d0       	rcall	.+238    	; 0x1ba2 <__fp_zero>
    1ab4:	b1 e0       	ldi	r27, 0x01	; 1
    1ab6:	08 95       	ret
    1ab8:	74 c0       	rjmp	.+232    	; 0x1ba2 <__fp_zero>
    1aba:	67 2f       	mov	r22, r23
    1abc:	78 2f       	mov	r23, r24
    1abe:	88 27       	eor	r24, r24
    1ac0:	b8 5f       	subi	r27, 0xF8	; 248
    1ac2:	39 f0       	breq	.+14     	; 0x1ad2 <__fixunssfsi+0x46>
    1ac4:	b9 3f       	cpi	r27, 0xF9	; 249
    1ac6:	cc f3       	brlt	.-14     	; 0x1aba <__fixunssfsi+0x2e>
    1ac8:	86 95       	lsr	r24
    1aca:	77 95       	ror	r23
    1acc:	67 95       	ror	r22
    1ace:	b3 95       	inc	r27
    1ad0:	d9 f7       	brne	.-10     	; 0x1ac8 <__fixunssfsi+0x3c>
    1ad2:	3e f4       	brtc	.+14     	; 0x1ae2 <__fixunssfsi+0x56>
    1ad4:	90 95       	com	r25
    1ad6:	80 95       	com	r24
    1ad8:	70 95       	com	r23
    1ada:	61 95       	neg	r22
    1adc:	7f 4f       	sbci	r23, 0xFF	; 255
    1ade:	8f 4f       	sbci	r24, 0xFF	; 255
    1ae0:	9f 4f       	sbci	r25, 0xFF	; 255
    1ae2:	08 95       	ret

00001ae4 <__floatunsisf>:
    1ae4:	e8 94       	clt
    1ae6:	09 c0       	rjmp	.+18     	; 0x1afa <__floatsisf+0x12>

00001ae8 <__floatsisf>:
    1ae8:	97 fb       	bst	r25, 7
    1aea:	3e f4       	brtc	.+14     	; 0x1afa <__floatsisf+0x12>
    1aec:	90 95       	com	r25
    1aee:	80 95       	com	r24
    1af0:	70 95       	com	r23
    1af2:	61 95       	neg	r22
    1af4:	7f 4f       	sbci	r23, 0xFF	; 255
    1af6:	8f 4f       	sbci	r24, 0xFF	; 255
    1af8:	9f 4f       	sbci	r25, 0xFF	; 255
    1afa:	99 23       	and	r25, r25
    1afc:	a9 f0       	breq	.+42     	; 0x1b28 <__floatsisf+0x40>
    1afe:	f9 2f       	mov	r31, r25
    1b00:	96 e9       	ldi	r25, 0x96	; 150
    1b02:	bb 27       	eor	r27, r27
    1b04:	93 95       	inc	r25
    1b06:	f6 95       	lsr	r31
    1b08:	87 95       	ror	r24
    1b0a:	77 95       	ror	r23
    1b0c:	67 95       	ror	r22
    1b0e:	b7 95       	ror	r27
    1b10:	f1 11       	cpse	r31, r1
    1b12:	f8 cf       	rjmp	.-16     	; 0x1b04 <__floatsisf+0x1c>
    1b14:	fa f4       	brpl	.+62     	; 0x1b54 <__floatsisf+0x6c>
    1b16:	bb 0f       	add	r27, r27
    1b18:	11 f4       	brne	.+4      	; 0x1b1e <__floatsisf+0x36>
    1b1a:	60 ff       	sbrs	r22, 0
    1b1c:	1b c0       	rjmp	.+54     	; 0x1b54 <__floatsisf+0x6c>
    1b1e:	6f 5f       	subi	r22, 0xFF	; 255
    1b20:	7f 4f       	sbci	r23, 0xFF	; 255
    1b22:	8f 4f       	sbci	r24, 0xFF	; 255
    1b24:	9f 4f       	sbci	r25, 0xFF	; 255
    1b26:	16 c0       	rjmp	.+44     	; 0x1b54 <__floatsisf+0x6c>
    1b28:	88 23       	and	r24, r24
    1b2a:	11 f0       	breq	.+4      	; 0x1b30 <__floatsisf+0x48>
    1b2c:	96 e9       	ldi	r25, 0x96	; 150
    1b2e:	11 c0       	rjmp	.+34     	; 0x1b52 <__floatsisf+0x6a>
    1b30:	77 23       	and	r23, r23
    1b32:	21 f0       	breq	.+8      	; 0x1b3c <__floatsisf+0x54>
    1b34:	9e e8       	ldi	r25, 0x8E	; 142
    1b36:	87 2f       	mov	r24, r23
    1b38:	76 2f       	mov	r23, r22
    1b3a:	05 c0       	rjmp	.+10     	; 0x1b46 <__floatsisf+0x5e>
    1b3c:	66 23       	and	r22, r22
    1b3e:	71 f0       	breq	.+28     	; 0x1b5c <__floatsisf+0x74>
    1b40:	96 e8       	ldi	r25, 0x86	; 134
    1b42:	86 2f       	mov	r24, r22
    1b44:	70 e0       	ldi	r23, 0x00	; 0
    1b46:	60 e0       	ldi	r22, 0x00	; 0
    1b48:	2a f0       	brmi	.+10     	; 0x1b54 <__floatsisf+0x6c>
    1b4a:	9a 95       	dec	r25
    1b4c:	66 0f       	add	r22, r22
    1b4e:	77 1f       	adc	r23, r23
    1b50:	88 1f       	adc	r24, r24
    1b52:	da f7       	brpl	.-10     	; 0x1b4a <__floatsisf+0x62>
    1b54:	88 0f       	add	r24, r24
    1b56:	96 95       	lsr	r25
    1b58:	87 95       	ror	r24
    1b5a:	97 f9       	bld	r25, 7
    1b5c:	08 95       	ret

00001b5e <__fp_split3>:
    1b5e:	57 fd       	sbrc	r21, 7
    1b60:	90 58       	subi	r25, 0x80	; 128
    1b62:	44 0f       	add	r20, r20
    1b64:	55 1f       	adc	r21, r21
    1b66:	59 f0       	breq	.+22     	; 0x1b7e <__fp_splitA+0x10>
    1b68:	5f 3f       	cpi	r21, 0xFF	; 255
    1b6a:	71 f0       	breq	.+28     	; 0x1b88 <__fp_splitA+0x1a>
    1b6c:	47 95       	ror	r20

00001b6e <__fp_splitA>:
    1b6e:	88 0f       	add	r24, r24
    1b70:	97 fb       	bst	r25, 7
    1b72:	99 1f       	adc	r25, r25
    1b74:	61 f0       	breq	.+24     	; 0x1b8e <__fp_splitA+0x20>
    1b76:	9f 3f       	cpi	r25, 0xFF	; 255
    1b78:	79 f0       	breq	.+30     	; 0x1b98 <__fp_splitA+0x2a>
    1b7a:	87 95       	ror	r24
    1b7c:	08 95       	ret
    1b7e:	12 16       	cp	r1, r18
    1b80:	13 06       	cpc	r1, r19
    1b82:	14 06       	cpc	r1, r20
    1b84:	55 1f       	adc	r21, r21
    1b86:	f2 cf       	rjmp	.-28     	; 0x1b6c <__fp_split3+0xe>
    1b88:	46 95       	lsr	r20
    1b8a:	f1 df       	rcall	.-30     	; 0x1b6e <__fp_splitA>
    1b8c:	08 c0       	rjmp	.+16     	; 0x1b9e <__fp_splitA+0x30>
    1b8e:	16 16       	cp	r1, r22
    1b90:	17 06       	cpc	r1, r23
    1b92:	18 06       	cpc	r1, r24
    1b94:	99 1f       	adc	r25, r25
    1b96:	f1 cf       	rjmp	.-30     	; 0x1b7a <__fp_splitA+0xc>
    1b98:	86 95       	lsr	r24
    1b9a:	71 05       	cpc	r23, r1
    1b9c:	61 05       	cpc	r22, r1
    1b9e:	08 94       	sec
    1ba0:	08 95       	ret

00001ba2 <__fp_zero>:
    1ba2:	e8 94       	clt

00001ba4 <__fp_szero>:
    1ba4:	bb 27       	eor	r27, r27
    1ba6:	66 27       	eor	r22, r22
    1ba8:	77 27       	eor	r23, r23
    1baa:	cb 01       	movw	r24, r22
    1bac:	97 f9       	bld	r25, 7
    1bae:	08 95       	ret

00001bb0 <__mulsf3>:
    1bb0:	0a d0       	rcall	.+20     	; 0x1bc6 <__mulsf3x>
    1bb2:	80 c0       	rjmp	.+256    	; 0x1cb4 <__fp_round>
    1bb4:	71 d0       	rcall	.+226    	; 0x1c98 <__fp_pscA>
    1bb6:	28 f0       	brcs	.+10     	; 0x1bc2 <__mulsf3+0x12>
    1bb8:	76 d0       	rcall	.+236    	; 0x1ca6 <__fp_pscB>
    1bba:	18 f0       	brcs	.+6      	; 0x1bc2 <__mulsf3+0x12>
    1bbc:	95 23       	and	r25, r21
    1bbe:	09 f0       	breq	.+2      	; 0x1bc2 <__mulsf3+0x12>
    1bc0:	62 c0       	rjmp	.+196    	; 0x1c86 <__fp_inf>
    1bc2:	67 c0       	rjmp	.+206    	; 0x1c92 <__fp_nan>
    1bc4:	ef cf       	rjmp	.-34     	; 0x1ba4 <__fp_szero>

00001bc6 <__mulsf3x>:
    1bc6:	cb df       	rcall	.-106    	; 0x1b5e <__fp_split3>
    1bc8:	a8 f3       	brcs	.-22     	; 0x1bb4 <__mulsf3+0x4>

00001bca <__mulsf3_pse>:
    1bca:	99 23       	and	r25, r25
    1bcc:	d9 f3       	breq	.-10     	; 0x1bc4 <__mulsf3+0x14>
    1bce:	55 23       	and	r21, r21
    1bd0:	c9 f3       	breq	.-14     	; 0x1bc4 <__mulsf3+0x14>
    1bd2:	95 0f       	add	r25, r21
    1bd4:	50 e0       	ldi	r21, 0x00	; 0
    1bd6:	55 1f       	adc	r21, r21
    1bd8:	aa 27       	eor	r26, r26
    1bda:	ee 27       	eor	r30, r30
    1bdc:	ff 27       	eor	r31, r31
    1bde:	bb 27       	eor	r27, r27
    1be0:	00 24       	eor	r0, r0
    1be2:	08 94       	sec
    1be4:	67 95       	ror	r22
    1be6:	20 f4       	brcc	.+8      	; 0x1bf0 <__mulsf3_pse+0x26>
    1be8:	e2 0f       	add	r30, r18
    1bea:	f3 1f       	adc	r31, r19
    1bec:	b4 1f       	adc	r27, r20
    1bee:	0a 1e       	adc	r0, r26
    1bf0:	22 0f       	add	r18, r18
    1bf2:	33 1f       	adc	r19, r19
    1bf4:	44 1f       	adc	r20, r20
    1bf6:	aa 1f       	adc	r26, r26
    1bf8:	66 95       	lsr	r22
    1bfa:	a9 f7       	brne	.-22     	; 0x1be6 <__mulsf3_pse+0x1c>
    1bfc:	77 95       	ror	r23
    1bfe:	30 f4       	brcc	.+12     	; 0x1c0c <__mulsf3_pse+0x42>
    1c00:	f3 0f       	add	r31, r19
    1c02:	b4 1f       	adc	r27, r20
    1c04:	0a 1e       	adc	r0, r26
    1c06:	12 1e       	adc	r1, r18
    1c08:	08 f4       	brcc	.+2      	; 0x1c0c <__mulsf3_pse+0x42>
    1c0a:	63 95       	inc	r22
    1c0c:	33 0f       	add	r19, r19
    1c0e:	44 1f       	adc	r20, r20
    1c10:	aa 1f       	adc	r26, r26
    1c12:	22 1f       	adc	r18, r18
    1c14:	76 95       	lsr	r23
    1c16:	99 f7       	brne	.-26     	; 0x1bfe <__mulsf3_pse+0x34>
    1c18:	87 95       	ror	r24
    1c1a:	20 f4       	brcc	.+8      	; 0x1c24 <__mulsf3_pse+0x5a>
    1c1c:	b4 0f       	add	r27, r20
    1c1e:	0a 1e       	adc	r0, r26
    1c20:	12 1e       	adc	r1, r18
    1c22:	63 1f       	adc	r22, r19
    1c24:	44 0f       	add	r20, r20
    1c26:	aa 1f       	adc	r26, r26
    1c28:	22 1f       	adc	r18, r18
    1c2a:	33 1f       	adc	r19, r19
    1c2c:	86 95       	lsr	r24
    1c2e:	a9 f7       	brne	.-22     	; 0x1c1a <__mulsf3_pse+0x50>
    1c30:	86 2f       	mov	r24, r22
    1c32:	71 2d       	mov	r23, r1
    1c34:	60 2d       	mov	r22, r0
    1c36:	11 24       	eor	r1, r1
    1c38:	9f 57       	subi	r25, 0x7F	; 127
    1c3a:	50 40       	sbci	r21, 0x00	; 0
    1c3c:	8a f0       	brmi	.+34     	; 0x1c60 <__mulsf3_pse+0x96>
    1c3e:	e1 f0       	breq	.+56     	; 0x1c78 <__mulsf3_pse+0xae>
    1c40:	88 23       	and	r24, r24
    1c42:	4a f0       	brmi	.+18     	; 0x1c56 <__mulsf3_pse+0x8c>
    1c44:	ee 0f       	add	r30, r30
    1c46:	ff 1f       	adc	r31, r31
    1c48:	bb 1f       	adc	r27, r27
    1c4a:	66 1f       	adc	r22, r22
    1c4c:	77 1f       	adc	r23, r23
    1c4e:	88 1f       	adc	r24, r24
    1c50:	91 50       	subi	r25, 0x01	; 1
    1c52:	50 40       	sbci	r21, 0x00	; 0
    1c54:	a9 f7       	brne	.-22     	; 0x1c40 <__mulsf3_pse+0x76>
    1c56:	9e 3f       	cpi	r25, 0xFE	; 254
    1c58:	51 05       	cpc	r21, r1
    1c5a:	70 f0       	brcs	.+28     	; 0x1c78 <__mulsf3_pse+0xae>
    1c5c:	14 c0       	rjmp	.+40     	; 0x1c86 <__fp_inf>
    1c5e:	a2 cf       	rjmp	.-188    	; 0x1ba4 <__fp_szero>
    1c60:	5f 3f       	cpi	r21, 0xFF	; 255
    1c62:	ec f3       	brlt	.-6      	; 0x1c5e <__mulsf3_pse+0x94>
    1c64:	98 3e       	cpi	r25, 0xE8	; 232
    1c66:	dc f3       	brlt	.-10     	; 0x1c5e <__mulsf3_pse+0x94>
    1c68:	86 95       	lsr	r24
    1c6a:	77 95       	ror	r23
    1c6c:	67 95       	ror	r22
    1c6e:	b7 95       	ror	r27
    1c70:	f7 95       	ror	r31
    1c72:	e7 95       	ror	r30
    1c74:	9f 5f       	subi	r25, 0xFF	; 255
    1c76:	c1 f7       	brne	.-16     	; 0x1c68 <__mulsf3_pse+0x9e>
    1c78:	fe 2b       	or	r31, r30
    1c7a:	88 0f       	add	r24, r24
    1c7c:	91 1d       	adc	r25, r1
    1c7e:	96 95       	lsr	r25
    1c80:	87 95       	ror	r24
    1c82:	97 f9       	bld	r25, 7
    1c84:	08 95       	ret

00001c86 <__fp_inf>:
    1c86:	97 f9       	bld	r25, 7
    1c88:	9f 67       	ori	r25, 0x7F	; 127
    1c8a:	80 e8       	ldi	r24, 0x80	; 128
    1c8c:	70 e0       	ldi	r23, 0x00	; 0
    1c8e:	60 e0       	ldi	r22, 0x00	; 0
    1c90:	08 95       	ret

00001c92 <__fp_nan>:
    1c92:	9f ef       	ldi	r25, 0xFF	; 255
    1c94:	80 ec       	ldi	r24, 0xC0	; 192
    1c96:	08 95       	ret

00001c98 <__fp_pscA>:
    1c98:	00 24       	eor	r0, r0
    1c9a:	0a 94       	dec	r0
    1c9c:	16 16       	cp	r1, r22
    1c9e:	17 06       	cpc	r1, r23
    1ca0:	18 06       	cpc	r1, r24
    1ca2:	09 06       	cpc	r0, r25
    1ca4:	08 95       	ret

00001ca6 <__fp_pscB>:
    1ca6:	00 24       	eor	r0, r0
    1ca8:	0a 94       	dec	r0
    1caa:	12 16       	cp	r1, r18
    1cac:	13 06       	cpc	r1, r19
    1cae:	14 06       	cpc	r1, r20
    1cb0:	05 06       	cpc	r0, r21
    1cb2:	08 95       	ret

00001cb4 <__fp_round>:
    1cb4:	09 2e       	mov	r0, r25
    1cb6:	03 94       	inc	r0
    1cb8:	00 0c       	add	r0, r0
    1cba:	11 f4       	brne	.+4      	; 0x1cc0 <__fp_round+0xc>
    1cbc:	88 23       	and	r24, r24
    1cbe:	52 f0       	brmi	.+20     	; 0x1cd4 <__fp_round+0x20>
    1cc0:	bb 0f       	add	r27, r27
    1cc2:	40 f4       	brcc	.+16     	; 0x1cd4 <__fp_round+0x20>
    1cc4:	bf 2b       	or	r27, r31
    1cc6:	11 f4       	brne	.+4      	; 0x1ccc <__fp_round+0x18>
    1cc8:	60 ff       	sbrs	r22, 0
    1cca:	04 c0       	rjmp	.+8      	; 0x1cd4 <__fp_round+0x20>
    1ccc:	6f 5f       	subi	r22, 0xFF	; 255
    1cce:	7f 4f       	sbci	r23, 0xFF	; 255
    1cd0:	8f 4f       	sbci	r24, 0xFF	; 255
    1cd2:	9f 4f       	sbci	r25, 0xFF	; 255
    1cd4:	08 95       	ret

00001cd6 <__mulhi3>:
    1cd6:	55 27       	eor	r21, r21
    1cd8:	00 24       	eor	r0, r0

00001cda <__mulhi3_loop>:
    1cda:	80 ff       	sbrs	r24, 0
    1cdc:	02 c0       	rjmp	.+4      	; 0x1ce2 <__mulhi3_skip1>
    1cde:	06 0e       	add	r0, r22
    1ce0:	57 1f       	adc	r21, r23

00001ce2 <__mulhi3_skip1>:
    1ce2:	66 0f       	add	r22, r22
    1ce4:	77 1f       	adc	r23, r23
    1ce6:	61 15       	cp	r22, r1
    1ce8:	71 05       	cpc	r23, r1
    1cea:	21 f0       	breq	.+8      	; 0x1cf4 <__mulhi3_exit>
    1cec:	96 95       	lsr	r25
    1cee:	87 95       	ror	r24
    1cf0:	00 97       	sbiw	r24, 0x00	; 0
    1cf2:	99 f7       	brne	.-26     	; 0x1cda <__mulhi3_loop>

00001cf4 <__mulhi3_exit>:
    1cf4:	95 2f       	mov	r25, r21
    1cf6:	80 2d       	mov	r24, r0
    1cf8:	08 95       	ret

00001cfa <__prologue_saves__>:
    1cfa:	2f 92       	push	r2
    1cfc:	3f 92       	push	r3
    1cfe:	4f 92       	push	r4
    1d00:	5f 92       	push	r5
    1d02:	6f 92       	push	r6
    1d04:	7f 92       	push	r7
    1d06:	8f 92       	push	r8
    1d08:	9f 92       	push	r9
    1d0a:	af 92       	push	r10
    1d0c:	bf 92       	push	r11
    1d0e:	cf 92       	push	r12
    1d10:	df 92       	push	r13
    1d12:	ef 92       	push	r14
    1d14:	ff 92       	push	r15
    1d16:	0f 93       	push	r16
    1d18:	1f 93       	push	r17
    1d1a:	cf 93       	push	r28
    1d1c:	df 93       	push	r29
    1d1e:	cd b7       	in	r28, 0x3d	; 61
    1d20:	de b7       	in	r29, 0x3e	; 62
    1d22:	ca 1b       	sub	r28, r26
    1d24:	db 0b       	sbc	r29, r27
    1d26:	0f b6       	in	r0, 0x3f	; 63
    1d28:	f8 94       	cli
    1d2a:	de bf       	out	0x3e, r29	; 62
    1d2c:	0f be       	out	0x3f, r0	; 63
    1d2e:	cd bf       	out	0x3d, r28	; 61
    1d30:	09 94       	ijmp

00001d32 <__epilogue_restores__>:
    1d32:	2a 88       	ldd	r2, Y+18	; 0x12
    1d34:	39 88       	ldd	r3, Y+17	; 0x11
    1d36:	48 88       	ldd	r4, Y+16	; 0x10
    1d38:	5f 84       	ldd	r5, Y+15	; 0x0f
    1d3a:	6e 84       	ldd	r6, Y+14	; 0x0e
    1d3c:	7d 84       	ldd	r7, Y+13	; 0x0d
    1d3e:	8c 84       	ldd	r8, Y+12	; 0x0c
    1d40:	9b 84       	ldd	r9, Y+11	; 0x0b
    1d42:	aa 84       	ldd	r10, Y+10	; 0x0a
    1d44:	b9 84       	ldd	r11, Y+9	; 0x09
    1d46:	c8 84       	ldd	r12, Y+8	; 0x08
    1d48:	df 80       	ldd	r13, Y+7	; 0x07
    1d4a:	ee 80       	ldd	r14, Y+6	; 0x06
    1d4c:	fd 80       	ldd	r15, Y+5	; 0x05
    1d4e:	0c 81       	ldd	r16, Y+4	; 0x04
    1d50:	1b 81       	ldd	r17, Y+3	; 0x03
    1d52:	aa 81       	ldd	r26, Y+2	; 0x02
    1d54:	b9 81       	ldd	r27, Y+1	; 0x01
    1d56:	ce 0f       	add	r28, r30
    1d58:	d1 1d       	adc	r29, r1
    1d5a:	0f b6       	in	r0, 0x3f	; 63
    1d5c:	f8 94       	cli
    1d5e:	de bf       	out	0x3e, r29	; 62
    1d60:	0f be       	out	0x3f, r0	; 63
    1d62:	cd bf       	out	0x3d, r28	; 61
    1d64:	ed 01       	movw	r28, r26
    1d66:	08 95       	ret

00001d68 <_exit>:
    1d68:	f8 94       	cli

00001d6a <__stop_program>:
    1d6a:	ff cf       	rjmp	.-2      	; 0x1d6a <__stop_program>
