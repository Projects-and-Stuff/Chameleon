
Chameleon.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000f04  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001e  00800060  00000f04  00000f98  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000054  0080007e  0080007e  00000fb6  2**0
                  ALLOC
  3 .stab         000006cc  00000000  00000000  00000fb8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000085  00000000  00000000  00001684  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000140  00000000  00000000  00001710  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000cbe  00000000  00000000  00001850  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000002f2  00000000  00000000  0000250e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000072d  00000000  00000000  00002800  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000cc  00000000  00000000  00002f30  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000526  00000000  00000000  00002ffc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000007b  00000000  00000000  00003522  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000010  00000000  00000000  0000359d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	10 c0       	rjmp	.+32     	; 0x22 <__ctors_end>
   2:	2a c0       	rjmp	.+84     	; 0x58 <__bad_interrupt>
   4:	29 c0       	rjmp	.+82     	; 0x58 <__bad_interrupt>
   6:	28 c0       	rjmp	.+80     	; 0x58 <__bad_interrupt>
   8:	27 c0       	rjmp	.+78     	; 0x58 <__bad_interrupt>
   a:	26 c0       	rjmp	.+76     	; 0x58 <__bad_interrupt>
   c:	25 c0       	rjmp	.+74     	; 0x58 <__bad_interrupt>
   e:	24 c0       	rjmp	.+72     	; 0x58 <__bad_interrupt>
  10:	23 c0       	rjmp	.+70     	; 0x58 <__bad_interrupt>
  12:	2f c0       	rjmp	.+94     	; 0x72 <__vector_9>
  14:	21 c0       	rjmp	.+66     	; 0x58 <__bad_interrupt>
  16:	20 c0       	rjmp	.+64     	; 0x58 <__bad_interrupt>
  18:	1f c0       	rjmp	.+62     	; 0x58 <__bad_interrupt>
  1a:	1e c0       	rjmp	.+60     	; 0x58 <__bad_interrupt>
  1c:	1d c0       	rjmp	.+58     	; 0x58 <__bad_interrupt>
  1e:	1c c0       	rjmp	.+56     	; 0x58 <__bad_interrupt>
  20:	1b c0       	rjmp	.+54     	; 0x58 <__bad_interrupt>

00000022 <__ctors_end>:
  22:	11 24       	eor	r1, r1
  24:	1f be       	out	0x3f, r1	; 63
  26:	cf e5       	ldi	r28, 0x5F	; 95
  28:	d1 e0       	ldi	r29, 0x01	; 1
  2a:	de bf       	out	0x3e, r29	; 62
  2c:	cd bf       	out	0x3d, r28	; 61

0000002e <__do_copy_data>:
  2e:	10 e0       	ldi	r17, 0x00	; 0
  30:	a0 e6       	ldi	r26, 0x60	; 96
  32:	b0 e0       	ldi	r27, 0x00	; 0
  34:	e4 e0       	ldi	r30, 0x04	; 4
  36:	ff e0       	ldi	r31, 0x0F	; 15
  38:	02 c0       	rjmp	.+4      	; 0x3e <__SP_H__>
  3a:	05 90       	lpm	r0, Z+
  3c:	0d 92       	st	X+, r0
  3e:	ae 37       	cpi	r26, 0x7E	; 126
  40:	b1 07       	cpc	r27, r17
  42:	d9 f7       	brne	.-10     	; 0x3a <__CCP__+0x6>

00000044 <__do_clear_bss>:
  44:	10 e0       	ldi	r17, 0x00	; 0
  46:	ae e7       	ldi	r26, 0x7E	; 126
  48:	b0 e0       	ldi	r27, 0x00	; 0
  4a:	01 c0       	rjmp	.+2      	; 0x4e <.do_clear_bss_start>

0000004c <.do_clear_bss_loop>:
  4c:	1d 92       	st	X+, r1

0000004e <.do_clear_bss_start>:
  4e:	a2 3d       	cpi	r26, 0xD2	; 210
  50:	b1 07       	cpc	r27, r17
  52:	e1 f7       	brne	.-8      	; 0x4c <.do_clear_bss_loop>
  54:	07 d7       	rcall	.+3598   	; 0xe64 <main>
  56:	54 c7       	rjmp	.+3752   	; 0xf00 <_exit>

00000058 <__bad_interrupt>:
  58:	d3 cf       	rjmp	.-90     	; 0x0 <__vectors>

0000005a <init_timer_isr>:
============================================================================*/
void init_timer_isr( void )
{
   /*  set timer compare value (how often timer ISR will fire set to 1 ms timer interrupt) */

   OCR0A = ( TICKS_PER_MS * 1);
  5a:	84 e0       	ldi	r24, 0x04	; 4
  5c:	86 bf       	out	0x36, r24	; 54

   /*  enable timer ISR on compare A */
   TIMSK0 |= 0x02u; // Caution
  5e:	89 b7       	in	r24, 0x39	; 57
  60:	82 60       	ori	r24, 0x02	; 2
  62:	89 bf       	out	0x39, r24	; 57
   /*  timer prescaler = system clock / 1024  */
   TCCR0B |= 0x05u; // Caution
  64:	83 b7       	in	r24, 0x33	; 51
  66:	85 60       	ori	r24, 0x05	; 5
  68:	83 bf       	out	0x33, r24	; 51
   /*  timer mode = CTC (count up to compare value, then reset)    */
   TCCR0A |= 0x02u; // Caution
  6a:	80 b7       	in	r24, 0x30	; 48
  6c:	82 60       	ori	r24, 0x02	; 2
  6e:	80 bf       	out	0x30, r24	; 48
}
  70:	08 95       	ret

00000072 <__vector_9>:

ISR(TIM0_COMPA_vect)
{
  72:	1f 92       	push	r1
  74:	0f 92       	push	r0
  76:	0f b6       	in	r0, 0x3f	; 63
  78:	0f 92       	push	r0
  7a:	11 24       	eor	r1, r1
  7c:	2f 93       	push	r18
  7e:	3f 93       	push	r19
  80:	8f 93       	push	r24
  82:	9f 93       	push	r25
  time_ms_inc++;
  84:	80 91 81 00 	lds	r24, 0x0081
  88:	90 91 82 00 	lds	r25, 0x0082
  8c:	01 96       	adiw	r24, 0x01	; 1
  8e:	90 93 82 00 	sts	0x0082, r25
  92:	80 93 81 00 	sts	0x0081, r24

  if(time_ms_inc >= qt_measurement_period_msec)
  96:	20 91 60 00 	lds	r18, 0x0060
  9a:	30 91 61 00 	lds	r19, 0x0061
  9e:	82 17       	cp	r24, r18
  a0:	93 07       	cpc	r25, r19
  a2:	38 f0       	brcs	.+14     	; 0xb2 <__vector_9+0x40>
  {
    time_ms_inc =0;
  a4:	10 92 82 00 	sts	0x0082, r1
  a8:	10 92 81 00 	sts	0x0081, r1
   /*  set flag: it's time to measure touch    */
   time_to_measure_touch = 1u;
  ac:	81 e0       	ldi	r24, 0x01	; 1
  ae:	80 93 80 00 	sts	0x0080, r24
  else
  {

  }
  /*  update the current time */
   current_time_ms_touch++;;
  b2:	80 91 7e 00 	lds	r24, 0x007E
  b6:	90 91 7f 00 	lds	r25, 0x007F
  ba:	01 96       	adiw	r24, 0x01	; 1
  bc:	90 93 7f 00 	sts	0x007F, r25
  c0:	80 93 7e 00 	sts	0x007E, r24
}
  c4:	9f 91       	pop	r25
  c6:	8f 91       	pop	r24
  c8:	3f 91       	pop	r19
  ca:	2f 91       	pop	r18
  cc:	0f 90       	pop	r0
  ce:	0f be       	out	0x3f, r0	; 63
  d0:	0f 90       	pop	r0
  d2:	1f 90       	pop	r1
  d4:	18 95       	reti

000000d6 <set_timer_period>:
------------------------------------------------------------------------------
Purpose :   set the timer period
============================================================================*/
void set_timer_period(uint16_t qt_measurement_period_msec)
{
	OCR0A = ( TICKS_PER_MS * 1);
  d6:	84 e0       	ldi	r24, 0x04	; 4
  d8:	86 bf       	out	0x36, r24	; 54
}
  da:	08 95       	ret

000000dc <init_system>:
Purpose :   initialise host app, pins, watchdog, etc
============================================================================*/
void init_system( void )
{
    /*  run at 4MHz (assuming internal clock is set to 8MHz)*/
    CLKPR = 0x80u;
  dc:	80 e8       	ldi	r24, 0x80	; 128
  de:	86 bd       	out	0x26, r24	; 38
    CLKPR = 0x01u;
  e0:	81 e0       	ldi	r24, 0x01	; 1
  e2:	86 bd       	out	0x26, r24	; 38

    /*  disable pull-ups    */
    MCUCR |= (1u << PUD);
  e4:	85 b7       	in	r24, 0x35	; 53
  e6:	80 64       	ori	r24, 0x40	; 64
  e8:	85 bf       	out	0x35, r24	; 53

}
  ea:	08 95       	ret

000000ec <_00110000001_>:
EXTERN reg_clyb;
EXTERN reg_flyab;
#endif
GLOBAL_FUNCTION _00110000001_
_00110000001_:
    push usr_1
  ec:	7f 93       	push	r23
    push usr_2
  ee:	9f 93       	push	r25
    in   usr_1,REG(PORT,PORT_YB)
  f0:	7b b3       	in	r23, 0x1b	; 27
    mov  usr_2,p_1
  f2:	98 2f       	mov	r25, r24
    com  usr_2
  f4:	90 95       	com	r25
    and  usr_1,usr_2
  f6:	79 23       	and	r23, r25
    out  REG(PORT,PORT_YB),usr_1
  f8:	7b bb       	out	0x1b, r23	; 27
    in   usr_1,REG(PORT,PORT_YA)
  fa:	7b b3       	in	r23, 0x1b	; 27
    mov  usr_2,p_2
  fc:	96 2f       	mov	r25, r22
    com  usr_2
  fe:	90 95       	com	r25
    and  usr_1,usr_2
 100:	79 23       	and	r23, r25
    out  REG(PORT,PORT_YA),usr_1
 102:	7b bb       	out	0x1b, r23	; 27
    mov  usr_2,p_1
 104:	98 2f       	mov	r25, r24
    in   usr_1,REG(DDR,PORT_YB)
 106:	7a b3       	in	r23, 0x1a	; 26
    or   usr_1,usr_2
 108:	79 2b       	or	r23, r25
    out  REG(DDR,PORT_YB),usr_1
 10a:	7a bb       	out	0x1a, r23	; 26
    in   usr_1,REG(DDR,PORT_YA)
 10c:	7a b3       	in	r23, 0x1a	; 26
    mov  usr_2,p_2
 10e:	96 2f       	mov	r25, r22
    or   usr_1,usr_2
 110:	79 2b       	or	r23, r25
    out  REG(DDR,PORT_YA),usr_1
 112:	7a bb       	out	0x1a, r23	; 26
#if (NUM_X_PORTS>=1)
    mov  usr_2,p_3
 114:	94 2f       	mov	r25, r20
    com  usr_2
 116:	90 95       	com	r25
    in   usr_1,REG(PORT,PORT_X_1)
 118:	78 b3       	in	r23, 0x18	; 24
    and  usr_1,usr_2
 11a:	79 23       	and	r23, r25
    out  REG(PORT,PORT_X_1),usr_1
 11c:	78 bb       	out	0x18, r23	; 24
    in   usr_1, REG(DDR,PORT_X_1)
 11e:	77 b3       	in	r23, 0x17	; 23
    mov  usr_2,p_3
 120:	94 2f       	mov	r25, r20
    or   usr_1, usr_2
 122:	79 2b       	or	r23, r25
    out  REG(DDR,PORT_X_1), usr_1    
 124:	77 bb       	out	0x17, r23	; 23
    in   usr_1, REG(DDR,PORT_X_3)
    mov  usr_2,p_5
    or   usr_1, usr_2
    out  REG(DDR,PORT_X_3), usr_1    
#endif
    cbi  REG( PORT, PORT_SMP ),SMP_BIT 
 126:	db 98       	cbi	0x1b, 3	; 27
    sbi  REG( DDR, PORT_SMP ),SMP_BIT
 128:	d3 9a       	sbi	0x1a, 3	; 26
    pop  usr_2
 12a:	9f 91       	pop	r25
    pop  usr_1
 12c:	7f 91       	pop	r23
    ret
 12e:	08 95       	ret

00000130 <_00110000100_>:

GLOBAL_FUNCTION _00110000100_
_00110000100_:
    push usr_1
 130:	7f 93       	push	r23
    push usr_2
 132:	9f 93       	push	r25
    in   usr_1, REG( DDR, PORT_YA ) 
 134:	7a b3       	in	r23, 0x1a	; 26
    sts  reg_clya, usr_1
 136:	70 93 c7 00 	sts	0x00C7, r23
    sts  reg_flya, usr_1
 13a:	70 93 d1 00 	sts	0x00D1, r23
    in   usr_1, REG( DDR, PORT_YB )
 13e:	7a b3       	in	r23, 0x1a	; 26
    sts  reg_clyb, usr_1
 140:	70 93 ca 00 	sts	0x00CA, r23
    sts  reg_flyb, usr_1    
 144:	70 93 cb 00 	sts	0x00CB, r23

	mov  usr_1, p_1
 148:	78 2f       	mov	r23, r24
    com  usr_1
 14a:	70 95       	com	r23
  	lds  usr_2, reg_flya
 14c:	90 91 d1 00 	lds	r25, 0x00D1
    and  usr_2,usr_1
 150:	97 23       	and	r25, r23
    sts  reg_flya, usr_2
 152:	90 93 d1 00 	sts	0x00D1, r25
  	mov  usr_1, p_2
 156:	76 2f       	mov	r23, r22
    com  usr_1
 158:	70 95       	com	r23
  	lds  usr_2, reg_flyb
 15a:	90 91 cb 00 	lds	r25, 0x00CB
	and  usr_2,usr_1
 15e:	97 23       	and	r25, r23
    sts  reg_flyb, usr_2
 160:	90 93 cb 00 	sts	0x00CB, r25
#if (SHARED_YAYB == 1) 
#elif (SHARED_YAYB == 0)
  clr  r_v
#endif  	
#if (SHARED_YAYB == 1)    
    push usr_3
 164:	5f 93       	push	r21
    mov  usr_1, p_1
 166:	78 2f       	mov	r23, r24
    mov  usr_2, p_2
 168:	96 2f       	mov	r25, r22
    or   usr_2, usr_1
 16a:	97 2b       	or	r25, r23
    com  usr_2
 16c:	90 95       	com	r25
    in   usr_1, REG( DDR, PORT_YA ) 
 16e:	7a b3       	in	r23, 0x1a	; 26
    and  usr_2, usr_1
 170:	97 23       	and	r25, r23
    sts  reg_flyab, usr_2
 172:	90 93 c9 00 	sts	0x00C9, r25
    mov  usr_3,usr_2
 176:	59 2f       	mov	r21, r25
    or   usr_2, p_2
 178:	96 2b       	or	r25, r22
    sts  reg_clyb, usr_2
 17a:	90 93 ca 00 	sts	0x00CA, r25
    mov  usr_2, usr_3
 17e:	95 2f       	mov	r25, r21
    or   usr_2, p_1
 180:	98 2b       	or	r25, r24
    sts  reg_clya, usr_2
 182:	90 93 c7 00 	sts	0x00C7, r25
    lds  r_v, reg_flyab
 186:	80 91 c9 00 	lds	r24, 0x00C9
    pop  usr_3
 18a:	5f 91       	pop	r21
	_10100001_
	_01101001_
	_00011001_
	_00011001_
#endif
    lds  usr_1, reg_flyb 
 18c:	70 91 cb 00 	lds	r23, 0x00CB
    out  REG( DDR, PORT_YB ), usr_1
 190:	7a bb       	out	0x1a, r23	; 26
    pop  usr_2
 192:	9f 91       	pop	r25
    pop  usr_1
 194:	7f 91       	pop	r23
    ret
 196:	08 95       	ret

00000198 <_00110000010_>:

#if (NUM_X_PORTS>=1)
GLOBAL_FUNCTION _00110000010_
_00110000010_:
#if (SHARED_YAYB == 1)
    out  REG( DDR, PORT_YA ), p_2
 198:	6a bb       	out	0x1a, r22	; 26
#elif (SHARED_YAYB == 0)
    out  REG( DDR, PORT_YA ), p_3
#endif
    out  REG( PIN, PORT_X_1 ), p_1  
 19a:	86 bb       	out	0x16, r24	; 22
	_10100010_
	_01101010_
	_00011001_
	_00011001_
#endif
    out  REG( DDR, PORT_YB ), p_6
 19c:	ea ba       	out	0x1a, r14	; 26
	_01101011_
	_00011001_
	_00011001_
#endif
#if (SHARED_YAYB == 1)
    out  REG( DDR, PORT_YB ), p_2
 19e:	6a bb       	out	0x1a, r22	; 26
#elif (SHARED_YAYB == 0)
    out  REG( DDR, PORT_YB ), p_4
#endif    
    out  REG( DDR, PORT_YA ), p_5
 1a0:	0a bb       	out	0x1a, r16	; 26
    out  REG( PIN, PORT_X_1 ), p_1      
 1a2:	86 bb       	out	0x16, r24	; 22
	_10100100_
	_01101100_
	_00011001_
	_00011001_
#endif
    ret
 1a4:	08 95       	ret

000001a6 <_00110000011_>:
/*//////////////////////////////////////////////////////////////////////////////////    */


GLOBAL_FUNCTION _00110000011_
_00110000011_:
    sbi  REG( PORT, PORT_SMP ),SMP_BIT  
 1a6:	db 9a       	sbi	0x1b, 3	; 27
    ret
 1a8:	08 95       	ret

000001aa <_00110000110_>:
   
GLOBAL_FUNCTION _00110000110_
_00110000110_:
    cbi  REG( PORT, PORT_SMP ),SMP_BIT  
 1aa:	db 98       	cbi	0x1b, 3	; 27
    lds  usr_1,reg_clyb 
 1ac:	70 91 ca 00 	lds	r23, 0x00CA
    out  REG( DDR, PORT_YB ), usr_1 
 1b0:	7a bb       	out	0x1a, r23	; 26
	_10100101_
	_01101101_
	_00011001_
	_00011001_
#endif
    ret
 1b2:	08 95       	ret

000001b4 <touch_init>:
Output  :   n/a
Notes   :   Generated code from QTouch Studio. Do not change
============================================================================*/
static void config_sensors(void)
{
	qt_enable_key( CHANNEL_0, NO_AKS_GROUP, 10u, HYST_6_25 );
 1b4:	80 e0       	ldi	r24, 0x00	; 0
 1b6:	60 e0       	ldi	r22, 0x00	; 0
 1b8:	4a e0       	ldi	r20, 0x0A	; 10
 1ba:	23 e0       	ldi	r18, 0x03	; 3
 1bc:	6b d1       	rcall	.+726    	; 0x494 <qt_enable_key>

    /* Configure the Sensors as keys or Keys With Rotor/Sliders in this function */
    config_sensors();

    /* initialise touch sensing */
    qt_init_sensing();
 1be:	ac d0       	rcall	.+344    	; 0x318 <qt_init_sensing_with_burst>

static void qt_set_parameters( void )
{

/*  This will be modified by the user to different values   */
qt_config_data.qt_di              = 2;
 1c0:	82 e0       	ldi	r24, 0x02	; 2
 1c2:	80 93 92 00 	sts	0x0092, r24
qt_config_data.qt_neg_drift_rate  = 20;
 1c6:	84 e1       	ldi	r24, 0x14	; 20
 1c8:	80 93 95 00 	sts	0x0095, r24
qt_config_data.qt_pos_drift_rate  = 5;
 1cc:	95 e0       	ldi	r25, 0x05	; 5
 1ce:	90 93 96 00 	sts	0x0096, r25
qt_config_data.qt_max_on_duration = 0;
 1d2:	10 92 94 00 	sts	0x0094, r1
qt_config_data.qt_drift_hold_time = 20;
 1d6:	80 93 93 00 	sts	0x0093, r24
qt_config_data.qt_recal_threshold = 1;
 1da:	e2 e9       	ldi	r30, 0x92	; 146
 1dc:	f0 e0       	ldi	r31, 0x00	; 0
 1de:	81 e0       	ldi	r24, 0x01	; 1
 1e0:	82 93       	st	-Z, r24
qt_config_data.qt_pos_recal_delay = 0;
 1e2:	16 82       	std	Z+6, r1	; 0x06
              qt_filter_callback = &set_timestamp1;
       #else
              qt_filter_callback = 0;
       #endif
       #else
              qt_filter_callback = 0;
 1e4:	10 92 99 00 	sts	0x0099, r1
 1e8:	10 92 98 00 	sts	0x0098, r1
    /* Initialize debug protocol */
    QDebug_Init();
#endif

    /* enable interrupts */
    __enable_interrupt();
 1ec:	78 94       	sei
#ifdef _DEBUG_INTERFACE_
    /* Process commands from PC */
    QDebug_ProcessCommands();
#endif

}
 1ee:	08 95       	ret

000001f0 <touch_measure>:
{
   /*status flags to indicate the re-burst for library*/
   static uint16_t status_flag = 0u;
   static uint16_t burst_flag = 0u;

	  if( time_to_measure_touch )
 1f0:	80 91 80 00 	lds	r24, 0x0080
 1f4:	88 23       	and	r24, r24
 1f6:	99 f0       	breq	.+38     	; 0x21e <touch_measure+0x2e>
        {

            /*  clear flag: it's time to measure touch  */
            time_to_measure_touch = 0u;
 1f8:	10 92 80 00 	sts	0x0080, r1
				#ifdef _QDEBUG_TIME_STAMPS_
						TIMESTAMP0;
				#endif
				#endif
                /*  one time measure touch sensors    */
                status_flag = qt_measure_sensors( current_time_ms_touch );
 1fc:	80 91 7e 00 	lds	r24, 0x007E
 200:	90 91 7f 00 	lds	r25, 0x007F
 204:	cf d0       	rcall	.+414    	; 0x3a4 <qt_measure_sensors>
 206:	90 93 84 00 	sts	0x0084, r25
 20a:	80 93 83 00 	sts	0x0083, r24
				#ifdef _DEBUG_INTERFACE_
				#ifdef _QDEBUG_TIME_STAMPS_
					  TIMESTAMP2;
				#endif
				#endif
                burst_flag = status_flag & QTLIB_BURST_AGAIN;
 20e:	80 70       	andi	r24, 0x00	; 0
 210:	91 70       	andi	r25, 0x01	; 1
 212:	90 93 86 00 	sts	0x0086, r25
 216:	80 93 85 00 	sts	0x0085, r24
				#endif
				#endif

                /* Time-critical host application code goes here */

            }while (burst_flag) ;
 21a:	00 97       	sbiw	r24, 0x00	; 0
 21c:	79 f7       	brne	.-34     	; 0x1fc <touch_measure+0xc>
 21e:	08 95       	ret

00000220 <burst_qm_1>:
 220:	a0 e0       	ldi	r26, 0x00	; 0
 222:	b0 e0       	ldi	r27, 0x00	; 0
 224:	e5 e1       	ldi	r30, 0x15	; 21
 226:	f1 e0       	ldi	r31, 0x01	; 1
 228:	3d c6       	rjmp	.+3194   	; 0xea4 <__prologue_saves__+0x12>
 22a:	c8 2f       	mov	r28, r24
 22c:	16 2f       	mov	r17, r22
 22e:	f8 94       	cli
 230:	00 98       	cbi	0x00, 0	; 0
 232:	e8 2f       	mov	r30, r24
 234:	e6 95       	lsr	r30
 236:	e6 95       	lsr	r30
 238:	f0 e0       	ldi	r31, 0x00	; 0
 23a:	ee 0f       	add	r30, r30
 23c:	ff 1f       	adc	r31, r31
 23e:	df 01       	movw	r26, r30
 240:	ae 59       	subi	r26, 0x9E	; 158
 242:	bf 4f       	sbci	r27, 0xFF	; 255
 244:	8c 91       	ld	r24, X
 246:	87 b9       	out	0x07, r24	; 7
 248:	00 9a       	sbi	0x00, 0	; 0
 24a:	df 01       	movw	r26, r30
 24c:	ab 59       	subi	r26, 0x9B	; 155
 24e:	bf 4f       	sbci	r27, 0xFF	; 255
 250:	ed 59       	subi	r30, 0x9D	; 157
 252:	ff 4f       	sbci	r31, 0xFF	; 255
 254:	8c 91       	ld	r24, X
 256:	60 81       	ld	r22, Z
 258:	6b df       	rcall	.-298    	; 0x130 <_00110000100_>
 25a:	f8 2e       	mov	r15, r24
 25c:	d0 e0       	ldi	r29, 0x00	; 0
 25e:	fe 01       	movw	r30, r28
 260:	e7 58       	subi	r30, 0x87	; 135
 262:	ff 4f       	sbci	r31, 0xFF	; 255
 264:	b0 80       	ld	r11, Z
 266:	dd 24       	eor	r13, r13
 268:	cc 24       	eor	r12, r12
 26a:	c3 94       	inc	r12
 26c:	1e c0       	rjmp	.+60     	; 0x2aa <burst_qm_1+0x8a>
 26e:	81 2f       	mov	r24, r17
 270:	6f 2d       	mov	r22, r15
 272:	40 91 d1 00 	lds	r20, 0x00D1
 276:	20 91 cb 00 	lds	r18, 0x00CB
 27a:	00 91 c7 00 	lds	r16, 0x00C7
 27e:	e0 90 ca 00 	lds	r14, 0x00CA
 282:	8a df       	rcall	.-236    	; 0x198 <_00110000010_>
 284:	8f b7       	in	r24, 0x3f	; 63
 286:	90 91 c8 00 	lds	r25, 0x00C8
 28a:	89 2b       	or	r24, r25
 28c:	8f bf       	out	0x3f, r24	; 63
 28e:	80 91 78 00 	lds	r24, 0x0078
 292:	8f 5f       	subi	r24, 0xFF	; 255
 294:	80 93 78 00 	sts	0x0078, r24
 298:	82 30       	cpi	r24, 0x02	; 2
 29a:	30 f0       	brcs	.+12     	; 0x2a8 <burst_qm_1+0x88>
 29c:	82 30       	cpi	r24, 0x02	; 2
 29e:	21 f0       	breq	.+8      	; 0x2a8 <burst_qm_1+0x88>
 2a0:	83 30       	cpi	r24, 0x03	; 3
 2a2:	11 f0       	breq	.+4      	; 0x2a8 <burst_qm_1+0x88>
 2a4:	c0 92 78 00 	sts	0x0078, r12
 2a8:	d3 94       	inc	r13
 2aa:	f8 94       	cli
 2ac:	db 14       	cp	r13, r11
 2ae:	f9 f6       	brne	.-66     	; 0x26e <burst_qm_1+0x4e>
 2b0:	7a df       	rcall	.-268    	; 0x1a6 <_00110000011_>
 2b2:	1d bc       	out	0x2d, r1	; 45
 2b4:	1c bc       	out	0x2c, r1	; 44
 2b6:	5d 9a       	sbi	0x0b, 5	; 11
 2b8:	45 9b       	sbis	0x08, 5	; 8
 2ba:	15 c0       	rjmp	.+42     	; 0x2e6 <burst_qm_1+0xc6>
 2bc:	8f b7       	in	r24, 0x3f	; 63
 2be:	90 91 c8 00 	lds	r25, 0x00C8
 2c2:	89 2b       	or	r24, r25
 2c4:	8f bf       	out	0x3f, r24	; 63
 2c6:	06 c0       	rjmp	.+12     	; 0x2d4 <burst_qm_1+0xb4>
 2c8:	8c b5       	in	r24, 0x2c	; 44
 2ca:	9d b5       	in	r25, 0x2d	; 45
 2cc:	20 e2       	ldi	r18, 0x20	; 32
 2ce:	80 30       	cpi	r24, 0x00	; 0
 2d0:	92 07       	cpc	r25, r18
 2d2:	80 f4       	brcc	.+32     	; 0x2f4 <burst_qm_1+0xd4>
 2d4:	5d 9b       	sbis	0x0b, 5	; 11
 2d6:	f8 cf       	rjmp	.-16     	; 0x2c8 <burst_qm_1+0xa8>
 2d8:	84 b5       	in	r24, 0x24	; 36
 2da:	95 b5       	in	r25, 0x25	; 37
 2dc:	cc 0f       	add	r28, r28
 2de:	dd 1f       	adc	r29, r29
 2e0:	c6 56       	subi	r28, 0x66	; 102
 2e2:	df 4f       	sbci	r29, 0xFF	; 255
 2e4:	0d c0       	rjmp	.+26     	; 0x300 <burst_qm_1+0xe0>
 2e6:	cc 0f       	add	r28, r28
 2e8:	dd 1f       	adc	r29, r29
 2ea:	c6 56       	subi	r28, 0x66	; 102
 2ec:	df 4f       	sbci	r29, 0xFF	; 255
 2ee:	81 e0       	ldi	r24, 0x01	; 1
 2f0:	90 e0       	ldi	r25, 0x00	; 0
 2f2:	06 c0       	rjmp	.+12     	; 0x300 <burst_qm_1+0xe0>
 2f4:	cc 0f       	add	r28, r28
 2f6:	dd 1f       	adc	r29, r29
 2f8:	c6 56       	subi	r28, 0x66	; 102
 2fa:	df 4f       	sbci	r29, 0xFF	; 255
 2fc:	80 e0       	ldi	r24, 0x00	; 0
 2fe:	90 e2       	ldi	r25, 0x20	; 32
 300:	99 83       	std	Y+1, r25	; 0x01
 302:	88 83       	st	Y, r24
 304:	52 df       	rcall	.-348    	; 0x1aa <_00110000110_>
 306:	8f b7       	in	r24, 0x3f	; 63
 308:	90 91 c8 00 	lds	r25, 0x00C8
 30c:	89 2b       	or	r24, r25
 30e:	8f bf       	out	0x3f, r24	; 63
 310:	cd b7       	in	r28, 0x3d	; 61
 312:	de b7       	in	r29, 0x3e	; 62
 314:	e9 e0       	ldi	r30, 0x09	; 9
 316:	e2 c5       	rjmp	.+3012   	; 0xedc <__epilogue_restores__+0x12>

00000318 <qt_init_sensing_with_burst>:
 318:	cf 93       	push	r28
 31a:	c0 e0       	ldi	r28, 0x00	; 0
 31c:	03 c0       	rjmp	.+6      	; 0x324 <qt_init_sensing_with_burst+0xc>
 31e:	8c 2f       	mov	r24, r28
 320:	9a d1       	rcall	.+820    	; 0x656 <start_cal_sensor>
 322:	cf 5f       	subi	r28, 0xFF	; 255
 324:	80 91 ae 00 	lds	r24, 0x00AE
 328:	c8 17       	cp	r28, r24
 32a:	c8 f3       	brcs	.-14     	; 0x31e <qt_init_sensing_with_burst+0x6>
 32c:	10 92 8a 00 	sts	0x008A, r1
 330:	10 92 89 00 	sts	0x0089, r1
 334:	da d4       	rcall	.+2484   	; 0xcea <burst_init>
 336:	cf 91       	pop	r28
 338:	08 95       	ret

0000033a <qt_get_library_sig>:
 33a:	fc 01       	movw	r30, r24
 33c:	81 e2       	ldi	r24, 0x21	; 33
 33e:	90 e0       	ldi	r25, 0x00	; 0
 340:	91 83       	std	Z+1, r25	; 0x01
 342:	80 83       	st	Z, r24
 344:	84 e2       	ldi	r24, 0x24	; 36
 346:	90 e0       	ldi	r25, 0x00	; 0
 348:	93 83       	std	Z+3, r25	; 0x03
 34a:	82 83       	std	Z+2, r24	; 0x02
 34c:	80 e0       	ldi	r24, 0x00	; 0
 34e:	95 e0       	ldi	r25, 0x05	; 5
 350:	95 83       	std	Z+5, r25	; 0x05
 352:	84 83       	std	Z+4, r24	; 0x04
 354:	08 95       	ret

00000356 <qt_calibrate_sensing>:
 356:	cf 93       	push	r28
 358:	c0 e0       	ldi	r28, 0x00	; 0
 35a:	03 c0       	rjmp	.+6      	; 0x362 <qt_calibrate_sensing+0xc>
 35c:	8c 2f       	mov	r24, r28
 35e:	7b d1       	rcall	.+758    	; 0x656 <start_cal_sensor>
 360:	cf 5f       	subi	r28, 0xFF	; 255
 362:	80 91 ae 00 	lds	r24, 0x00AE
 366:	c8 17       	cp	r28, r24
 368:	c8 f3       	brcs	.-14     	; 0x35c <qt_calibrate_sensing+0x6>
 36a:	cf 91       	pop	r28
 36c:	08 95       	ret

0000036e <qt_reset_sensing>:
 36e:	10 92 ae 00 	sts	0x00AE, r1
 372:	84 e0       	ldi	r24, 0x04	; 4
 374:	80 93 92 00 	sts	0x0092, r24
 378:	84 e1       	ldi	r24, 0x14	; 20
 37a:	80 93 95 00 	sts	0x0095, r24
 37e:	95 e0       	ldi	r25, 0x05	; 5
 380:	90 93 96 00 	sts	0x0096, r25
 384:	10 92 94 00 	sts	0x0094, r1
 388:	80 93 93 00 	sts	0x0093, r24
 38c:	e2 e9       	ldi	r30, 0x92	; 146
 38e:	f0 e0       	ldi	r31, 0x00	; 0
 390:	81 e0       	ldi	r24, 0x01	; 1
 392:	82 93       	st	-Z, r24
 394:	83 e0       	ldi	r24, 0x03	; 3
 396:	86 83       	std	Z+6, r24	; 0x06
 398:	09 d5       	rcall	.+2578   	; 0xdac <burst_reset>
 39a:	10 92 99 00 	sts	0x0099, r1
 39e:	10 92 98 00 	sts	0x0098, r1
 3a2:	08 95       	ret

000003a4 <qt_measure_sensors>:
 3a4:	1f 93       	push	r17
 3a6:	cf 93       	push	r28
 3a8:	df 93       	push	r29
 3aa:	10 92 ac 00 	sts	0x00AC, r1
 3ae:	10 92 ab 00 	sts	0x00AB, r1
 3b2:	40 91 89 00 	lds	r20, 0x0089
 3b6:	50 91 8a 00 	lds	r21, 0x008A
 3ba:	90 93 8a 00 	sts	0x008A, r25
 3be:	80 93 89 00 	sts	0x0089, r24
 3c2:	20 91 8b 00 	lds	r18, 0x008B
 3c6:	30 91 8c 00 	lds	r19, 0x008C
 3ca:	24 1b       	sub	r18, r20
 3cc:	35 0b       	sbc	r19, r21
 3ce:	28 0f       	add	r18, r24
 3d0:	39 1f       	adc	r19, r25
 3d2:	c0 e0       	ldi	r28, 0x00	; 0
 3d4:	03 c0       	rjmp	.+6      	; 0x3dc <qt_measure_sensors+0x38>
 3d6:	28 5c       	subi	r18, 0xC8	; 200
 3d8:	30 40       	sbci	r19, 0x00	; 0
 3da:	cf 5f       	subi	r28, 0xFF	; 255
 3dc:	28 3c       	cpi	r18, 0xC8	; 200
 3de:	31 05       	cpc	r19, r1
 3e0:	d0 f7       	brcc	.-12     	; 0x3d6 <qt_measure_sensors+0x32>
 3e2:	30 93 8c 00 	sts	0x008C, r19
 3e6:	20 93 8b 00 	sts	0x008B, r18
 3ea:	80 91 ad 00 	lds	r24, 0x00AD
 3ee:	88 23       	and	r24, r24
 3f0:	41 f0       	breq	.+16     	; 0x402 <qt_measure_sensors+0x5e>
 3f2:	8c 17       	cp	r24, r28
 3f4:	18 f4       	brcc	.+6      	; 0x3fc <qt_measure_sensors+0x58>
 3f6:	10 92 ad 00 	sts	0x00AD, r1
 3fa:	03 c0       	rjmp	.+6      	; 0x402 <qt_measure_sensors+0x5e>
 3fc:	8c 1b       	sub	r24, r28
 3fe:	80 93 ad 00 	sts	0x00AD, r24
 402:	de d4       	rcall	.+2492   	; 0xdc0 <burst>
 404:	e0 91 98 00 	lds	r30, 0x0098
 408:	f0 91 99 00 	lds	r31, 0x0099
 40c:	30 97       	sbiw	r30, 0x00	; 0
 40e:	09 f0       	breq	.+2      	; 0x412 <qt_measure_sensors+0x6e>
 410:	09 95       	icall
 412:	10 e0       	ldi	r17, 0x00	; 0
 414:	d0 e0       	ldi	r29, 0x00	; 0
 416:	05 c0       	rjmp	.+10     	; 0x422 <qt_measure_sensors+0x7e>
 418:	8d 2f       	mov	r24, r29
 41a:	6c 2f       	mov	r22, r28
 41c:	37 d1       	rcall	.+622    	; 0x68c <process_sensor>
 41e:	18 2b       	or	r17, r24
 420:	df 5f       	subi	r29, 0xFF	; 255
 422:	50 91 ae 00 	lds	r21, 0x00AE
 426:	d5 17       	cp	r29, r21
 428:	b8 f3       	brcs	.-18     	; 0x418 <qt_measure_sensors+0x74>
 42a:	11 23       	and	r17, r17
 42c:	49 f0       	breq	.+18     	; 0x440 <qt_measure_sensors+0x9c>
 42e:	80 91 ab 00 	lds	r24, 0x00AB
 432:	90 91 ac 00 	lds	r25, 0x00AC
 436:	91 60       	ori	r25, 0x01	; 1
 438:	90 93 ac 00 	sts	0x00AC, r25
 43c:	80 93 ab 00 	sts	0x00AB, r24
 440:	10 92 aa 00 	sts	0x00AA, r1
 444:	af ea       	ldi	r26, 0xAF	; 175
 446:	b0 e0       	ldi	r27, 0x00	; 0
 448:	40 e0       	ldi	r20, 0x00	; 0
 44a:	81 e0       	ldi	r24, 0x01	; 1
 44c:	90 e0       	ldi	r25, 0x00	; 0
 44e:	18 c0       	rjmp	.+48     	; 0x480 <qt_measure_sensors+0xdc>
 450:	2c 91       	ld	r18, X
 452:	28 71       	andi	r18, 0x18	; 24
 454:	99 f0       	breq	.+38     	; 0x47c <qt_measure_sensors+0xd8>
 456:	e4 2f       	mov	r30, r20
 458:	e6 95       	lsr	r30
 45a:	e6 95       	lsr	r30
 45c:	e6 95       	lsr	r30
 45e:	f0 e0       	ldi	r31, 0x00	; 0
 460:	e6 56       	subi	r30, 0x66	; 102
 462:	ff 4f       	sbci	r31, 0xFF	; 255
 464:	24 2f       	mov	r18, r20
 466:	27 70       	andi	r18, 0x07	; 7
 468:	bc 01       	movw	r22, r24
 46a:	02 c0       	rjmp	.+4      	; 0x470 <qt_measure_sensors+0xcc>
 46c:	66 0f       	add	r22, r22
 46e:	77 1f       	adc	r23, r23
 470:	2a 95       	dec	r18
 472:	e2 f7       	brpl	.-8      	; 0x46c <qt_measure_sensors+0xc8>
 474:	9b 01       	movw	r18, r22
 476:	30 89       	ldd	r19, Z+16	; 0x10
 478:	32 2b       	or	r19, r18
 47a:	30 8b       	std	Z+16, r19	; 0x10
 47c:	4f 5f       	subi	r20, 0xFF	; 255
 47e:	16 96       	adiw	r26, 0x06	; 6
 480:	45 17       	cp	r20, r21
 482:	31 f7       	brne	.-52     	; 0x450 <qt_measure_sensors+0xac>
 484:	80 91 ab 00 	lds	r24, 0x00AB
 488:	90 91 ac 00 	lds	r25, 0x00AC
 48c:	df 91       	pop	r29
 48e:	cf 91       	pop	r28
 490:	1f 91       	pop	r17
 492:	08 95       	ret

00000494 <qt_enable_key>:
 494:	cf 93       	push	r28
 496:	df 93       	push	r29
 498:	c8 2f       	mov	r28, r24
 49a:	d6 2f       	mov	r29, r22
 49c:	30 91 ae 00 	lds	r19, 0x00AE
 4a0:	ef ea       	ldi	r30, 0xAF	; 175
 4a2:	f0 e0       	ldi	r31, 0x00	; 0
 4a4:	83 2f       	mov	r24, r19
 4a6:	90 e0       	ldi	r25, 0x00	; 0
 4a8:	66 e0       	ldi	r22, 0x06	; 6
 4aa:	70 e0       	ldi	r23, 0x00	; 0
 4ac:	e0 d4       	rcall	.+2496   	; 0xe6e <__mulhi3>
 4ae:	df 01       	movw	r26, r30
 4b0:	a8 0f       	add	r26, r24
 4b2:	b9 1f       	adc	r27, r25
 4b4:	13 96       	adiw	r26, 0x03	; 3
 4b6:	4c 93       	st	X, r20
 4b8:	83 2f       	mov	r24, r19
 4ba:	90 e0       	ldi	r25, 0x00	; 0
 4bc:	66 e0       	ldi	r22, 0x06	; 6
 4be:	70 e0       	ldi	r23, 0x00	; 0
 4c0:	d6 d4       	rcall	.+2476   	; 0xe6e <__mulhi3>
 4c2:	df 01       	movw	r26, r30
 4c4:	a8 0f       	add	r26, r24
 4c6:	b9 1f       	adc	r27, r25
 4c8:	d7 70       	andi	r29, 0x07	; 7
 4ca:	dd 0f       	add	r29, r29
 4cc:	dd 0f       	add	r29, r29
 4ce:	dd 0f       	add	r29, r29
 4d0:	14 96       	adiw	r26, 0x04	; 4
 4d2:	dc 93       	st	X, r29
 4d4:	83 2f       	mov	r24, r19
 4d6:	90 e0       	ldi	r25, 0x00	; 0
 4d8:	66 e0       	ldi	r22, 0x06	; 6
 4da:	70 e0       	ldi	r23, 0x00	; 0
 4dc:	c8 d4       	rcall	.+2448   	; 0xe6e <__mulhi3>
 4de:	df 01       	movw	r26, r30
 4e0:	a8 0f       	add	r26, r24
 4e2:	b9 1f       	adc	r27, r25
 4e4:	15 96       	adiw	r26, 0x05	; 5
 4e6:	cc 93       	st	X, r28
 4e8:	83 2f       	mov	r24, r19
 4ea:	90 e0       	ldi	r25, 0x00	; 0
 4ec:	66 e0       	ldi	r22, 0x06	; 6
 4ee:	70 e0       	ldi	r23, 0x00	; 0
 4f0:	be d4       	rcall	.+2428   	; 0xe6e <__mulhi3>
 4f2:	df 01       	movw	r26, r30
 4f4:	a8 0f       	add	r26, r24
 4f6:	b9 1f       	adc	r27, r25
 4f8:	23 70       	andi	r18, 0x03	; 3
 4fa:	83 2f       	mov	r24, r19
 4fc:	90 e0       	ldi	r25, 0x00	; 0
 4fe:	66 e0       	ldi	r22, 0x06	; 6
 500:	70 e0       	ldi	r23, 0x00	; 0
 502:	b5 d4       	rcall	.+2410   	; 0xe6e <__mulhi3>
 504:	e8 0f       	add	r30, r24
 506:	f9 1f       	adc	r31, r25
 508:	84 81       	ldd	r24, Z+4	; 0x04
 50a:	8c 7f       	andi	r24, 0xFC	; 252
 50c:	28 2b       	or	r18, r24
 50e:	14 96       	adiw	r26, 0x04	; 4
 510:	2c 93       	st	X, r18
 512:	14 97       	sbiw	r26, 0x04	; 4
 514:	3f 5f       	subi	r19, 0xFF	; 255
 516:	30 93 ae 00 	sts	0x00AE, r19
 51a:	df 91       	pop	r29
 51c:	cf 91       	pop	r28
 51e:	08 95       	ret

00000520 <qt_get_sensor_delta>:
 520:	0f 93       	push	r16
 522:	1f 93       	push	r17
 524:	cf 93       	push	r28
 526:	c8 2f       	mov	r28, r24
 528:	90 e0       	ldi	r25, 0x00	; 0
 52a:	66 e0       	ldi	r22, 0x06	; 6
 52c:	70 e0       	ldi	r23, 0x00	; 0
 52e:	9f d4       	rcall	.+2366   	; 0xe6e <__mulhi3>
 530:	fc 01       	movw	r30, r24
 532:	e1 55       	subi	r30, 0x51	; 81
 534:	ff 4f       	sbci	r31, 0xFF	; 255
 536:	45 81       	ldd	r20, Z+5	; 0x05
 538:	8c 2f       	mov	r24, r28
 53a:	90 e0       	ldi	r25, 0x00	; 0
 53c:	66 e0       	ldi	r22, 0x06	; 6
 53e:	70 e0       	ldi	r23, 0x00	; 0
 540:	96 d4       	rcall	.+2348   	; 0xe6e <__mulhi3>
 542:	fc 01       	movw	r30, r24
 544:	e1 55       	subi	r30, 0x51	; 81
 546:	ff 4f       	sbci	r31, 0xFF	; 255
 548:	23 81       	ldd	r18, Z+3	; 0x03
 54a:	30 e0       	ldi	r19, 0x00	; 0
 54c:	00 90 91 00 	lds	r0, 0x0091
 550:	02 c0       	rjmp	.+4      	; 0x556 <qt_get_sensor_delta+0x36>
 552:	35 95       	asr	r19
 554:	27 95       	ror	r18
 556:	0a 94       	dec	r0
 558:	e2 f7       	brpl	.-8      	; 0x552 <qt_get_sensor_delta+0x32>
 55a:	02 2f       	mov	r16, r18
 55c:	24 30       	cpi	r18, 0x04	; 4
 55e:	08 f4       	brcc	.+2      	; 0x562 <qt_get_sensor_delta+0x42>
 560:	04 e0       	ldi	r16, 0x04	; 4
 562:	80 91 ae 00 	lds	r24, 0x00AE
 566:	c8 17       	cp	r28, r24
 568:	f0 f5       	brcc	.+124    	; 0x5e6 <qt_get_sensor_delta+0xc6>
 56a:	84 2f       	mov	r24, r20
 56c:	a8 d3       	rcall	.+1872   	; 0xcbe <get_channel_delta>
 56e:	9c 01       	movw	r18, r24
 570:	a0 2f       	mov	r26, r16
 572:	b0 e0       	ldi	r27, 0x00	; 0
 574:	06 95       	lsr	r16
 576:	06 95       	lsr	r16
 578:	80 2f       	mov	r24, r16
 57a:	90 e0       	ldi	r25, 0x00	; 0
 57c:	8a 1b       	sub	r24, r26
 57e:	9b 0b       	sbc	r25, r27
 580:	82 17       	cp	r24, r18
 582:	93 07       	cpc	r25, r19
 584:	a4 f4       	brge	.+40     	; 0x5ae <qt_get_sensor_delta+0x8e>
 586:	8c 2f       	mov	r24, r28
 588:	90 e0       	ldi	r25, 0x00	; 0
 58a:	66 e0       	ldi	r22, 0x06	; 6
 58c:	70 e0       	ldi	r23, 0x00	; 0
 58e:	6f d4       	rcall	.+2270   	; 0xe6e <__mulhi3>
 590:	8c 01       	movw	r16, r24
 592:	01 55       	subi	r16, 0x51	; 81
 594:	1f 4f       	sbci	r17, 0xFF	; 255
 596:	8c 2f       	mov	r24, r28
 598:	90 e0       	ldi	r25, 0x00	; 0
 59a:	66 e0       	ldi	r22, 0x06	; 6
 59c:	70 e0       	ldi	r23, 0x00	; 0
 59e:	67 d4       	rcall	.+2254   	; 0xe6e <__mulhi3>
 5a0:	fc 01       	movw	r30, r24
 5a2:	e1 55       	subi	r30, 0x51	; 81
 5a4:	ff 4f       	sbci	r31, 0xFF	; 255
 5a6:	84 81       	ldd	r24, Z+4	; 0x04
 5a8:	8b 7f       	andi	r24, 0xFB	; 251
 5aa:	f8 01       	movw	r30, r16
 5ac:	84 83       	std	Z+4, r24	; 0x04
 5ae:	b0 95       	com	r27
 5b0:	a1 95       	neg	r26
 5b2:	bf 4f       	sbci	r27, 0xFF	; 255
 5b4:	a2 17       	cp	r26, r18
 5b6:	b3 07       	cpc	r27, r19
 5b8:	c4 f0       	brlt	.+48     	; 0x5ea <qt_get_sensor_delta+0xca>
 5ba:	8c 2f       	mov	r24, r28
 5bc:	90 e0       	ldi	r25, 0x00	; 0
 5be:	66 e0       	ldi	r22, 0x06	; 6
 5c0:	70 e0       	ldi	r23, 0x00	; 0
 5c2:	55 d4       	rcall	.+2218   	; 0xe6e <__mulhi3>
 5c4:	fc 01       	movw	r30, r24
 5c6:	e1 55       	subi	r30, 0x51	; 81
 5c8:	ff 4f       	sbci	r31, 0xFF	; 255
 5ca:	8c 2f       	mov	r24, r28
 5cc:	90 e0       	ldi	r25, 0x00	; 0
 5ce:	66 e0       	ldi	r22, 0x06	; 6
 5d0:	70 e0       	ldi	r23, 0x00	; 0
 5d2:	4d d4       	rcall	.+2202   	; 0xe6e <__mulhi3>
 5d4:	dc 01       	movw	r26, r24
 5d6:	a1 55       	subi	r26, 0x51	; 81
 5d8:	bf 4f       	sbci	r27, 0xFF	; 255
 5da:	14 96       	adiw	r26, 0x04	; 4
 5dc:	8c 91       	ld	r24, X
 5de:	14 97       	sbiw	r26, 0x04	; 4
 5e0:	84 60       	ori	r24, 0x04	; 4
 5e2:	84 83       	std	Z+4, r24	; 0x04
 5e4:	02 c0       	rjmp	.+4      	; 0x5ea <qt_get_sensor_delta+0xca>
 5e6:	20 e0       	ldi	r18, 0x00	; 0
 5e8:	30 e0       	ldi	r19, 0x00	; 0
 5ea:	c9 01       	movw	r24, r18
 5ec:	cf 91       	pop	r28
 5ee:	1f 91       	pop	r17
 5f0:	0f 91       	pop	r16
 5f2:	08 95       	ret

000005f4 <goto_no_detect>:
 5f4:	cf 93       	push	r28
 5f6:	c8 2f       	mov	r28, r24
 5f8:	2f ea       	ldi	r18, 0xAF	; 175
 5fa:	30 e0       	ldi	r19, 0x00	; 0
 5fc:	90 e0       	ldi	r25, 0x00	; 0
 5fe:	66 e0       	ldi	r22, 0x06	; 6
 600:	70 e0       	ldi	r23, 0x00	; 0
 602:	35 d4       	rcall	.+2154   	; 0xe6e <__mulhi3>
 604:	f9 01       	movw	r30, r18
 606:	e8 0f       	add	r30, r24
 608:	f9 1f       	adc	r31, r25
 60a:	e5 81       	ldd	r30, Z+5	; 0x05
 60c:	8c 2f       	mov	r24, r28
 60e:	90 e0       	ldi	r25, 0x00	; 0
 610:	66 e0       	ldi	r22, 0x06	; 6
 612:	70 e0       	ldi	r23, 0x00	; 0
 614:	2c d4       	rcall	.+2136   	; 0xe6e <__mulhi3>
 616:	d9 01       	movw	r26, r18
 618:	a8 0f       	add	r26, r24
 61a:	b9 1f       	adc	r27, r25
 61c:	82 e0       	ldi	r24, 0x02	; 2
 61e:	8c 93       	st	X, r24
 620:	40 91 ab 00 	lds	r20, 0x00AB
 624:	50 91 ac 00 	lds	r21, 0x00AC
 628:	42 60       	ori	r20, 0x02	; 2
 62a:	50 93 ac 00 	sts	0x00AC, r21
 62e:	40 93 ab 00 	sts	0x00AB, r20
 632:	8c 2f       	mov	r24, r28
 634:	90 e0       	ldi	r25, 0x00	; 0
 636:	66 e0       	ldi	r22, 0x06	; 6
 638:	70 e0       	ldi	r23, 0x00	; 0
 63a:	19 d4       	rcall	.+2098   	; 0xe6e <__mulhi3>
 63c:	28 0f       	add	r18, r24
 63e:	39 1f       	adc	r19, r25
 640:	d9 01       	movw	r26, r18
 642:	12 96       	adiw	r26, 0x02	; 2
 644:	1c 92       	st	X, r1
 646:	12 97       	sbiw	r26, 0x02	; 2
 648:	f0 e0       	ldi	r31, 0x00	; 0
 64a:	e3 57       	subi	r30, 0x73	; 115
 64c:	ff 4f       	sbci	r31, 0xFF	; 255
 64e:	80 e8       	ldi	r24, 0x80	; 128
 650:	80 83       	st	Z, r24
 652:	cf 91       	pop	r28
 654:	08 95       	ret

00000656 <start_cal_sensor>:
 656:	cf 93       	push	r28
 658:	c8 2f       	mov	r28, r24
 65a:	cc df       	rcall	.-104    	; 0x5f4 <goto_no_detect>
 65c:	2f ea       	ldi	r18, 0xAF	; 175
 65e:	30 e0       	ldi	r19, 0x00	; 0
 660:	8c 2f       	mov	r24, r28
 662:	90 e0       	ldi	r25, 0x00	; 0
 664:	66 e0       	ldi	r22, 0x06	; 6
 666:	70 e0       	ldi	r23, 0x00	; 0
 668:	02 d4       	rcall	.+2052   	; 0xe6e <__mulhi3>
 66a:	f9 01       	movw	r30, r18
 66c:	e8 0f       	add	r30, r24
 66e:	f9 1f       	adc	r31, r25
 670:	81 e0       	ldi	r24, 0x01	; 1
 672:	80 83       	st	Z, r24
 674:	8c 2f       	mov	r24, r28
 676:	90 e0       	ldi	r25, 0x00	; 0
 678:	66 e0       	ldi	r22, 0x06	; 6
 67a:	70 e0       	ldi	r23, 0x00	; 0
 67c:	f8 d3       	rcall	.+2032   	; 0xe6e <__mulhi3>
 67e:	28 0f       	add	r18, r24
 680:	39 1f       	adc	r19, r25
 682:	8f e0       	ldi	r24, 0x0F	; 15
 684:	f9 01       	movw	r30, r18
 686:	81 83       	std	Z+1, r24	; 0x01
 688:	cf 91       	pop	r28
 68a:	08 95       	ret

0000068c <process_sensor>:
 68c:	ef 92       	push	r14
 68e:	ff 92       	push	r15
 690:	0f 93       	push	r16
 692:	1f 93       	push	r17
 694:	cf 93       	push	r28
 696:	df 93       	push	r29
 698:	c8 2f       	mov	r28, r24
 69a:	d6 2f       	mov	r29, r22
 69c:	41 df       	rcall	.-382    	; 0x520 <qt_get_sensor_delta>
 69e:	7c 01       	movw	r14, r24
 6a0:	8c 2f       	mov	r24, r28
 6a2:	90 e0       	ldi	r25, 0x00	; 0
 6a4:	66 e0       	ldi	r22, 0x06	; 6
 6a6:	70 e0       	ldi	r23, 0x00	; 0
 6a8:	e2 d3       	rcall	.+1988   	; 0xe6e <__mulhi3>
 6aa:	fc 01       	movw	r30, r24
 6ac:	e1 55       	subi	r30, 0x51	; 81
 6ae:	ff 4f       	sbci	r31, 0xFF	; 255
 6b0:	24 81       	ldd	r18, Z+4	; 0x04
 6b2:	8c 2f       	mov	r24, r28
 6b4:	90 e0       	ldi	r25, 0x00	; 0
 6b6:	66 e0       	ldi	r22, 0x06	; 6
 6b8:	70 e0       	ldi	r23, 0x00	; 0
 6ba:	d9 d3       	rcall	.+1970   	; 0xe6e <__mulhi3>
 6bc:	fc 01       	movw	r30, r24
 6be:	e1 55       	subi	r30, 0x51	; 81
 6c0:	ff 4f       	sbci	r31, 0xFF	; 255
 6c2:	a3 81       	ldd	r26, Z+3	; 0x03
 6c4:	b0 e0       	ldi	r27, 0x00	; 0
 6c6:	82 2f       	mov	r24, r18
 6c8:	83 70       	andi	r24, 0x03	; 3
 6ca:	90 e0       	ldi	r25, 0x00	; 0
 6cc:	01 96       	adiw	r24, 0x01	; 1
 6ce:	ad 01       	movw	r20, r26
 6d0:	02 c0       	rjmp	.+4      	; 0x6d6 <process_sensor+0x4a>
 6d2:	55 95       	asr	r21
 6d4:	47 95       	ror	r20
 6d6:	8a 95       	dec	r24
 6d8:	e2 f7       	brpl	.-8      	; 0x6d2 <process_sensor+0x46>
 6da:	ca 01       	movw	r24, r20
 6dc:	42 30       	cpi	r20, 0x02	; 2
 6de:	08 f4       	brcc	.+2      	; 0x6e2 <process_sensor+0x56>
 6e0:	82 e0       	ldi	r24, 0x02	; 2
 6e2:	8d 01       	movw	r16, r26
 6e4:	08 1b       	sub	r16, r24
 6e6:	11 09       	sbc	r17, r1
 6e8:	8c 2f       	mov	r24, r28
 6ea:	90 e0       	ldi	r25, 0x00	; 0
 6ec:	66 e0       	ldi	r22, 0x06	; 6
 6ee:	70 e0       	ldi	r23, 0x00	; 0
 6f0:	be d3       	rcall	.+1916   	; 0xe6e <__mulhi3>
 6f2:	fc 01       	movw	r30, r24
 6f4:	e1 55       	subi	r30, 0x51	; 81
 6f6:	ff 4f       	sbci	r31, 0xFF	; 255
 6f8:	80 81       	ld	r24, Z
 6fa:	84 30       	cpi	r24, 0x04	; 4
 6fc:	09 f4       	brne	.+2      	; 0x700 <process_sensor+0x74>
 6fe:	09 c1       	rjmp	.+530    	; 0x912 <process_sensor+0x286>
 700:	85 30       	cpi	r24, 0x05	; 5
 702:	30 f4       	brcc	.+12     	; 0x710 <process_sensor+0x84>
 704:	81 30       	cpi	r24, 0x01	; 1
 706:	71 f0       	breq	.+28     	; 0x724 <process_sensor+0x98>
 708:	82 30       	cpi	r24, 0x02	; 2
 70a:	09 f0       	breq	.+2      	; 0x70e <process_sensor+0x82>
 70c:	d2 c2       	rjmp	.+1444   	; 0xcb2 <process_sensor+0x626>
 70e:	70 c0       	rjmp	.+224    	; 0x7f0 <process_sensor+0x164>
 710:	80 31       	cpi	r24, 0x10	; 16
 712:	09 f4       	brne	.+2      	; 0x716 <process_sensor+0x8a>
 714:	c5 c1       	rjmp	.+906    	; 0xaa0 <process_sensor+0x414>
 716:	80 32       	cpi	r24, 0x20	; 32
 718:	09 f4       	brne	.+2      	; 0x71c <process_sensor+0x90>
 71a:	93 c2       	rjmp	.+1318   	; 0xc42 <process_sensor+0x5b6>
 71c:	88 30       	cpi	r24, 0x08	; 8
 71e:	09 f0       	breq	.+2      	; 0x722 <process_sensor+0x96>
 720:	c8 c2       	rjmp	.+1424   	; 0xcb2 <process_sensor+0x626>
 722:	42 c2       	rjmp	.+1156   	; 0xba8 <process_sensor+0x51c>
 724:	00 91 ab 00 	lds	r16, 0x00AB
 728:	10 91 ac 00 	lds	r17, 0x00AC
 72c:	c8 01       	movw	r24, r16
 72e:	92 60       	ori	r25, 0x02	; 2
 730:	90 93 ac 00 	sts	0x00AC, r25
 734:	80 93 ab 00 	sts	0x00AB, r24
 738:	8c 2f       	mov	r24, r28
 73a:	90 e0       	ldi	r25, 0x00	; 0
 73c:	66 e0       	ldi	r22, 0x06	; 6
 73e:	70 e0       	ldi	r23, 0x00	; 0
 740:	96 d3       	rcall	.+1836   	; 0xe6e <__mulhi3>
 742:	fc 01       	movw	r30, r24
 744:	e1 55       	subi	r30, 0x51	; 81
 746:	ff 4f       	sbci	r31, 0xFF	; 255
 748:	25 81       	ldd	r18, Z+5	; 0x05
 74a:	8c 2f       	mov	r24, r28
 74c:	90 e0       	ldi	r25, 0x00	; 0
 74e:	66 e0       	ldi	r22, 0x06	; 6
 750:	70 e0       	ldi	r23, 0x00	; 0
 752:	8d d3       	rcall	.+1818   	; 0xe6e <__mulhi3>
 754:	fc 01       	movw	r30, r24
 756:	e1 55       	subi	r30, 0x51	; 81
 758:	ff 4f       	sbci	r31, 0xFF	; 255
 75a:	41 81       	ldd	r20, Z+1	; 0x01
 75c:	82 2f       	mov	r24, r18
 75e:	90 e0       	ldi	r25, 0x00	; 0
 760:	4a 30       	cpi	r20, 0x0A	; 10
 762:	80 f0       	brcs	.+32     	; 0x784 <process_sensor+0xf8>
 764:	fc 01       	movw	r30, r24
 766:	ee 0f       	add	r30, r30
 768:	ff 1f       	adc	r31, r31
 76a:	ee 55       	subi	r30, 0x5E	; 94
 76c:	ff 4f       	sbci	r31, 0xFF	; 255
 76e:	dc 01       	movw	r26, r24
 770:	aa 0f       	add	r26, r26
 772:	bb 1f       	adc	r27, r27
 774:	a6 56       	subi	r26, 0x66	; 102
 776:	bf 4f       	sbci	r27, 0xFF	; 255
 778:	8d 91       	ld	r24, X+
 77a:	9c 91       	ld	r25, X
 77c:	11 97       	sbiw	r26, 0x01	; 1
 77e:	91 83       	std	Z+1, r25	; 0x01
 780:	80 83       	st	Z, r24
 782:	1d c0       	rjmp	.+58     	; 0x7be <process_sensor+0x132>
 784:	dc 01       	movw	r26, r24
 786:	aa 0f       	add	r26, r26
 788:	bb 1f       	adc	r27, r27
 78a:	ae 55       	subi	r26, 0x5E	; 94
 78c:	bf 4f       	sbci	r27, 0xFF	; 255
 78e:	2d 91       	ld	r18, X+
 790:	3c 91       	ld	r19, X
 792:	11 97       	sbiw	r26, 0x01	; 1
 794:	fc 01       	movw	r30, r24
 796:	ee 0f       	add	r30, r30
 798:	ff 1f       	adc	r31, r31
 79a:	e6 56       	subi	r30, 0x66	; 102
 79c:	ff 4f       	sbci	r31, 0xFF	; 255
 79e:	80 81       	ld	r24, Z
 7a0:	91 81       	ldd	r25, Z+1	; 0x01
 7a2:	82 17       	cp	r24, r18
 7a4:	93 07       	cpc	r25, r19
 7a6:	18 f4       	brcc	.+6      	; 0x7ae <process_sensor+0x122>
 7a8:	21 50       	subi	r18, 0x01	; 1
 7aa:	30 40       	sbci	r19, 0x00	; 0
 7ac:	05 c0       	rjmp	.+10     	; 0x7b8 <process_sensor+0x12c>
 7ae:	28 17       	cp	r18, r24
 7b0:	39 07       	cpc	r19, r25
 7b2:	58 f4       	brcc	.+22     	; 0x7ca <process_sensor+0x13e>
 7b4:	2f 5f       	subi	r18, 0xFF	; 255
 7b6:	3f 4f       	sbci	r19, 0xFF	; 255
 7b8:	11 96       	adiw	r26, 0x01	; 1
 7ba:	3c 93       	st	X, r19
 7bc:	2e 93       	st	-X, r18
 7be:	08 60       	ori	r16, 0x08	; 8
 7c0:	12 60       	ori	r17, 0x02	; 2
 7c2:	10 93 ac 00 	sts	0x00AC, r17
 7c6:	00 93 ab 00 	sts	0x00AB, r16
 7ca:	41 50       	subi	r20, 0x01	; 1
 7cc:	8c 2f       	mov	r24, r28
 7ce:	90 e0       	ldi	r25, 0x00	; 0
 7d0:	66 e0       	ldi	r22, 0x06	; 6
 7d2:	70 e0       	ldi	r23, 0x00	; 0
 7d4:	4c d3       	rcall	.+1688   	; 0xe6e <__mulhi3>
 7d6:	fc 01       	movw	r30, r24
 7d8:	e1 55       	subi	r30, 0x51	; 81
 7da:	ff 4f       	sbci	r31, 0xFF	; 255
 7dc:	41 83       	std	Z+1, r20	; 0x01
 7de:	44 23       	and	r20, r20
 7e0:	11 f4       	brne	.+4      	; 0x7e6 <process_sensor+0x15a>
 7e2:	8c 2f       	mov	r24, r28
 7e4:	07 df       	rcall	.-498    	; 0x5f4 <goto_no_detect>
 7e6:	80 91 93 00 	lds	r24, 0x0093
 7ea:	80 93 ad 00 	sts	0x00AD, r24
 7ee:	59 c2       	rjmp	.+1202   	; 0xca2 <process_sensor+0x616>
 7f0:	22 ff       	sbrs	r18, 2
 7f2:	18 c0       	rjmp	.+48     	; 0x824 <process_sensor+0x198>
 7f4:	8c 2f       	mov	r24, r28
 7f6:	90 e0       	ldi	r25, 0x00	; 0
 7f8:	66 e0       	ldi	r22, 0x06	; 6
 7fa:	70 e0       	ldi	r23, 0x00	; 0
 7fc:	38 d3       	rcall	.+1648   	; 0xe6e <__mulhi3>
 7fe:	fc 01       	movw	r30, r24
 800:	e1 55       	subi	r30, 0x51	; 81
 802:	ff 4f       	sbci	r31, 0xFF	; 255
 804:	e5 81       	ldd	r30, Z+5	; 0x05
 806:	f0 e0       	ldi	r31, 0x00	; 0
 808:	e3 57       	subi	r30, 0x73	; 115
 80a:	ff 4f       	sbci	r31, 0xFF	; 255
 80c:	10 82       	st	Z, r1
 80e:	8c 2f       	mov	r24, r28
 810:	90 e0       	ldi	r25, 0x00	; 0
 812:	66 e0       	ldi	r22, 0x06	; 6
 814:	70 e0       	ldi	r23, 0x00	; 0
 816:	2b d3       	rcall	.+1622   	; 0xe6e <__mulhi3>
 818:	fc 01       	movw	r30, r24
 81a:	e1 55       	subi	r30, 0x51	; 81
 81c:	ff 4f       	sbci	r31, 0xFF	; 255
 81e:	80 e2       	ldi	r24, 0x20	; 32
 820:	80 83       	st	Z, r24
 822:	36 c2       	rjmp	.+1132   	; 0xc90 <process_sensor+0x604>
 824:	c7 01       	movw	r24, r14
 826:	f7 fe       	sbrs	r15, 7
 828:	02 c0       	rjmp	.+4      	; 0x82e <process_sensor+0x1a2>
 82a:	80 e0       	ldi	r24, 0x00	; 0
 82c:	90 e0       	ldi	r25, 0x00	; 0
 82e:	8a 17       	cp	r24, r26
 830:	9b 07       	cpc	r25, r27
 832:	a0 f0       	brcs	.+40     	; 0x85c <process_sensor+0x1d0>
 834:	8c 2f       	mov	r24, r28
 836:	90 e0       	ldi	r25, 0x00	; 0
 838:	66 e0       	ldi	r22, 0x06	; 6
 83a:	70 e0       	ldi	r23, 0x00	; 0
 83c:	18 d3       	rcall	.+1584   	; 0xe6e <__mulhi3>
 83e:	fc 01       	movw	r30, r24
 840:	e1 55       	subi	r30, 0x51	; 81
 842:	ff 4f       	sbci	r31, 0xFF	; 255
 844:	84 e0       	ldi	r24, 0x04	; 4
 846:	80 83       	st	Z, r24
 848:	8c 2f       	mov	r24, r28
 84a:	90 e0       	ldi	r25, 0x00	; 0
 84c:	66 e0       	ldi	r22, 0x06	; 6
 84e:	70 e0       	ldi	r23, 0x00	; 0
 850:	0e d3       	rcall	.+1564   	; 0xe6e <__mulhi3>
 852:	fc 01       	movw	r30, r24
 854:	e1 55       	subi	r30, 0x51	; 81
 856:	ff 4f       	sbci	r31, 0xFF	; 255
 858:	12 82       	std	Z+2, r1	; 0x02
 85a:	25 c2       	rjmp	.+1098   	; 0xca6 <process_sensor+0x61a>
 85c:	dd 23       	and	r29, r29
 85e:	09 f4       	brne	.+2      	; 0x862 <process_sensor+0x1d6>
 860:	28 c2       	rjmp	.+1104   	; 0xcb2 <process_sensor+0x626>
 862:	80 91 ad 00 	lds	r24, 0x00AD
 866:	88 23       	and	r24, r24
 868:	09 f0       	breq	.+2      	; 0x86c <process_sensor+0x1e0>
 86a:	23 c2       	rjmp	.+1094   	; 0xcb2 <process_sensor+0x626>
 86c:	8c 2f       	mov	r24, r28
 86e:	90 e0       	ldi	r25, 0x00	; 0
 870:	66 e0       	ldi	r22, 0x06	; 6
 872:	70 e0       	ldi	r23, 0x00	; 0
 874:	fc d2       	rcall	.+1528   	; 0xe6e <__mulhi3>
 876:	fc 01       	movw	r30, r24
 878:	e1 55       	subi	r30, 0x51	; 81
 87a:	ff 4f       	sbci	r31, 0xFF	; 255
 87c:	25 81       	ldd	r18, Z+5	; 0x05
 87e:	30 e0       	ldi	r19, 0x00	; 0
 880:	d9 01       	movw	r26, r18
 882:	aa 0f       	add	r26, r26
 884:	bb 1f       	adc	r27, r27
 886:	ae 55       	subi	r26, 0x5E	; 94
 888:	bf 4f       	sbci	r27, 0xFF	; 255
 88a:	8d 91       	ld	r24, X+
 88c:	9c 91       	ld	r25, X
 88e:	11 97       	sbiw	r26, 0x01	; 1
 890:	f9 01       	movw	r30, r18
 892:	ee 0f       	add	r30, r30
 894:	ff 1f       	adc	r31, r31
 896:	e6 56       	subi	r30, 0x66	; 102
 898:	ff 4f       	sbci	r31, 0xFF	; 255
 89a:	40 81       	ld	r20, Z
 89c:	51 81       	ldd	r21, Z+1	; 0x01
 89e:	f9 01       	movw	r30, r18
 8a0:	e3 57       	subi	r30, 0x73	; 115
 8a2:	ff 4f       	sbci	r31, 0xFF	; 255
 8a4:	84 17       	cp	r24, r20
 8a6:	95 07       	cpc	r25, r21
 8a8:	68 f4       	brcc	.+26     	; 0x8c4 <process_sensor+0x238>
 8aa:	20 81       	ld	r18, Z
 8ac:	2d 0f       	add	r18, r29
 8ae:	20 83       	st	Z, r18
 8b0:	30 91 96 00 	lds	r19, 0x0096
 8b4:	30 58       	subi	r19, 0x80	; 128
 8b6:	23 17       	cp	r18, r19
 8b8:	08 f4       	brcc	.+2      	; 0x8bc <process_sensor+0x230>
 8ba:	fb c1       	rjmp	.+1014   	; 0xcb2 <process_sensor+0x626>
 8bc:	20 e8       	ldi	r18, 0x80	; 128
 8be:	20 83       	st	Z, r18
 8c0:	01 96       	adiw	r24, 0x01	; 1
 8c2:	10 c0       	rjmp	.+32     	; 0x8e4 <process_sensor+0x258>
 8c4:	48 17       	cp	r20, r24
 8c6:	59 07       	cpc	r21, r25
 8c8:	d0 f4       	brcc	.+52     	; 0x8fe <process_sensor+0x272>
 8ca:	20 81       	ld	r18, Z
 8cc:	2d 1b       	sub	r18, r29
 8ce:	20 83       	st	Z, r18
 8d0:	30 e8       	ldi	r19, 0x80	; 128
 8d2:	40 91 95 00 	lds	r20, 0x0095
 8d6:	53 2f       	mov	r21, r19
 8d8:	54 1b       	sub	r21, r20
 8da:	52 17       	cp	r21, r18
 8dc:	08 f4       	brcc	.+2      	; 0x8e0 <process_sensor+0x254>
 8de:	e9 c1       	rjmp	.+978    	; 0xcb2 <process_sensor+0x626>
 8e0:	30 83       	st	Z, r19
 8e2:	01 97       	sbiw	r24, 0x01	; 1
 8e4:	11 96       	adiw	r26, 0x01	; 1
 8e6:	9c 93       	st	X, r25
 8e8:	8e 93       	st	-X, r24
 8ea:	80 91 ab 00 	lds	r24, 0x00AB
 8ee:	90 91 ac 00 	lds	r25, 0x00AC
 8f2:	88 60       	ori	r24, 0x08	; 8
 8f4:	90 93 ac 00 	sts	0x00AC, r25
 8f8:	80 93 ab 00 	sts	0x00AB, r24
 8fc:	da c1       	rjmp	.+948    	; 0xcb2 <process_sensor+0x626>
 8fe:	80 81       	ld	r24, Z
 900:	81 38       	cpi	r24, 0x81	; 129
 902:	10 f0       	brcs	.+4      	; 0x908 <process_sensor+0x27c>
 904:	81 50       	subi	r24, 0x01	; 1
 906:	80 83       	st	Z, r24
 908:	80 81       	ld	r24, Z
 90a:	87 fd       	sbrc	r24, 7
 90c:	d2 c1       	rjmp	.+932    	; 0xcb2 <process_sensor+0x626>
 90e:	8f 5f       	subi	r24, 0xFF	; 255
 910:	b4 c1       	rjmp	.+872    	; 0xc7a <process_sensor+0x5ee>
 912:	c7 01       	movw	r24, r14
 914:	f7 fe       	sbrs	r15, 7
 916:	02 c0       	rjmp	.+4      	; 0x91c <process_sensor+0x290>
 918:	80 e0       	ldi	r24, 0x00	; 0
 91a:	90 e0       	ldi	r25, 0x00	; 0
 91c:	8a 17       	cp	r24, r26
 91e:	9b 07       	cpc	r25, r27
 920:	08 f4       	brcc	.+2      	; 0x924 <process_sensor+0x298>
 922:	ad c1       	rjmp	.+858    	; 0xc7e <process_sensor+0x5f2>
 924:	80 91 93 00 	lds	r24, 0x0093
 928:	80 93 ad 00 	sts	0x00AD, r24
 92c:	8c 2f       	mov	r24, r28
 92e:	90 e0       	ldi	r25, 0x00	; 0
 930:	66 e0       	ldi	r22, 0x06	; 6
 932:	70 e0       	ldi	r23, 0x00	; 0
 934:	9c d2       	rcall	.+1336   	; 0xe6e <__mulhi3>
 936:	fc 01       	movw	r30, r24
 938:	e1 55       	subi	r30, 0x51	; 81
 93a:	ff 4f       	sbci	r31, 0xFF	; 255
 93c:	8c 2f       	mov	r24, r28
 93e:	90 e0       	ldi	r25, 0x00	; 0
 940:	66 e0       	ldi	r22, 0x06	; 6
 942:	70 e0       	ldi	r23, 0x00	; 0
 944:	94 d2       	rcall	.+1320   	; 0xe6e <__mulhi3>
 946:	dc 01       	movw	r26, r24
 948:	a1 55       	subi	r26, 0x51	; 81
 94a:	bf 4f       	sbci	r27, 0xFF	; 255
 94c:	12 96       	adiw	r26, 0x02	; 2
 94e:	8c 91       	ld	r24, X
 950:	12 97       	sbiw	r26, 0x02	; 2
 952:	8f 5f       	subi	r24, 0xFF	; 255
 954:	82 83       	std	Z+2, r24	; 0x02
 956:	8c 2f       	mov	r24, r28
 958:	90 e0       	ldi	r25, 0x00	; 0
 95a:	66 e0       	ldi	r22, 0x06	; 6
 95c:	70 e0       	ldi	r23, 0x00	; 0
 95e:	87 d2       	rcall	.+1294   	; 0xe6e <__mulhi3>
 960:	fc 01       	movw	r30, r24
 962:	e1 55       	subi	r30, 0x51	; 81
 964:	ff 4f       	sbci	r31, 0xFF	; 255
 966:	04 81       	ldd	r16, Z+4	; 0x04
 968:	10 e0       	ldi	r17, 0x00	; 0
 96a:	08 73       	andi	r16, 0x38	; 56
 96c:	10 70       	andi	r17, 0x00	; 0
 96e:	33 e0       	ldi	r19, 0x03	; 3
 970:	16 95       	lsr	r17
 972:	07 95       	ror	r16
 974:	3a 95       	dec	r19
 976:	e1 f7       	brne	.-8      	; 0x970 <process_sensor+0x2e4>
 978:	00 23       	and	r16, r16
 97a:	09 f0       	breq	.+2      	; 0x97e <process_sensor+0x2f2>
 97c:	4d c0       	rjmp	.+154    	; 0xa18 <process_sensor+0x38c>
 97e:	55 c0       	rjmp	.+170    	; 0xa2a <process_sensor+0x39e>
 980:	dc 17       	cp	r29, r28
 982:	09 f4       	brne	.+2      	; 0x986 <process_sensor+0x2fa>
 984:	47 c0       	rjmp	.+142    	; 0xa14 <process_sensor+0x388>
 986:	8d 2f       	mov	r24, r29
 988:	90 e0       	ldi	r25, 0x00	; 0
 98a:	66 e0       	ldi	r22, 0x06	; 6
 98c:	70 e0       	ldi	r23, 0x00	; 0
 98e:	6f d2       	rcall	.+1246   	; 0xe6e <__mulhi3>
 990:	fc 01       	movw	r30, r24
 992:	e1 55       	subi	r30, 0x51	; 81
 994:	ff 4f       	sbci	r31, 0xFF	; 255
 996:	84 81       	ldd	r24, Z+4	; 0x04
 998:	90 e0       	ldi	r25, 0x00	; 0
 99a:	88 73       	andi	r24, 0x38	; 56
 99c:	90 70       	andi	r25, 0x00	; 0
 99e:	23 e0       	ldi	r18, 0x03	; 3
 9a0:	96 95       	lsr	r25
 9a2:	87 95       	ror	r24
 9a4:	2a 95       	dec	r18
 9a6:	e1 f7       	brne	.-8      	; 0x9a0 <process_sensor+0x314>
 9a8:	08 17       	cp	r16, r24
 9aa:	a1 f5       	brne	.+104    	; 0xa14 <process_sensor+0x388>
 9ac:	8d 2f       	mov	r24, r29
 9ae:	b8 dd       	rcall	.-1168   	; 0x520 <qt_get_sensor_delta>
 9b0:	9c 01       	movw	r18, r24
 9b2:	8d 2f       	mov	r24, r29
 9b4:	90 e0       	ldi	r25, 0x00	; 0
 9b6:	66 e0       	ldi	r22, 0x06	; 6
 9b8:	70 e0       	ldi	r23, 0x00	; 0
 9ba:	59 d2       	rcall	.+1202   	; 0xe6e <__mulhi3>
 9bc:	fc 01       	movw	r30, r24
 9be:	e1 55       	subi	r30, 0x51	; 81
 9c0:	ff 4f       	sbci	r31, 0xFF	; 255
 9c2:	83 81       	ldd	r24, Z+3	; 0x03
 9c4:	28 1b       	sub	r18, r24
 9c6:	31 09       	sbc	r19, r1
 9c8:	8c 2f       	mov	r24, r28
 9ca:	90 e0       	ldi	r25, 0x00	; 0
 9cc:	66 e0       	ldi	r22, 0x06	; 6
 9ce:	70 e0       	ldi	r23, 0x00	; 0
 9d0:	4e d2       	rcall	.+1180   	; 0xe6e <__mulhi3>
 9d2:	fc 01       	movw	r30, r24
 9d4:	e1 55       	subi	r30, 0x51	; 81
 9d6:	ff 4f       	sbci	r31, 0xFF	; 255
 9d8:	83 81       	ldd	r24, Z+3	; 0x03
 9da:	a7 01       	movw	r20, r14
 9dc:	48 1b       	sub	r20, r24
 9de:	51 09       	sbc	r21, r1
 9e0:	42 17       	cp	r20, r18
 9e2:	53 07       	cpc	r21, r19
 9e4:	6c f0       	brlt	.+26     	; 0xa00 <process_sensor+0x374>
 9e6:	8d 2f       	mov	r24, r29
 9e8:	90 e0       	ldi	r25, 0x00	; 0
 9ea:	66 e0       	ldi	r22, 0x06	; 6
 9ec:	70 e0       	ldi	r23, 0x00	; 0
 9ee:	3f d2       	rcall	.+1150   	; 0xe6e <__mulhi3>
 9f0:	fc 01       	movw	r30, r24
 9f2:	e1 55       	subi	r30, 0x51	; 81
 9f4:	ff 4f       	sbci	r31, 0xFF	; 255
 9f6:	80 81       	ld	r24, Z
 9f8:	80 31       	cpi	r24, 0x10	; 16
 9fa:	11 f0       	breq	.+4      	; 0xa00 <process_sensor+0x374>
 9fc:	88 30       	cpi	r24, 0x08	; 8
 9fe:	51 f4       	brne	.+20     	; 0xa14 <process_sensor+0x388>
 a00:	8c 2f       	mov	r24, r28
 a02:	90 e0       	ldi	r25, 0x00	; 0
 a04:	66 e0       	ldi	r22, 0x06	; 6
 a06:	70 e0       	ldi	r23, 0x00	; 0
 a08:	32 d2       	rcall	.+1124   	; 0xe6e <__mulhi3>
 a0a:	fc 01       	movw	r30, r24
 a0c:	e1 55       	subi	r30, 0x51	; 81
 a0e:	ff 4f       	sbci	r31, 0xFF	; 255
 a10:	12 82       	std	Z+2, r1	; 0x02
 a12:	11 e0       	ldi	r17, 0x01	; 1
 a14:	df 5f       	subi	r29, 0xFF	; 255
 a16:	02 c0       	rjmp	.+4      	; 0xa1c <process_sensor+0x390>
 a18:	10 e0       	ldi	r17, 0x00	; 0
 a1a:	d0 e0       	ldi	r29, 0x00	; 0
 a1c:	80 91 ae 00 	lds	r24, 0x00AE
 a20:	d8 17       	cp	r29, r24
 a22:	08 f4       	brcc	.+2      	; 0xa26 <process_sensor+0x39a>
 a24:	ad cf       	rjmp	.-166    	; 0x980 <process_sensor+0x2f4>
 a26:	11 23       	and	r17, r17
 a28:	79 f4       	brne	.+30     	; 0xa48 <process_sensor+0x3bc>
 a2a:	80 91 92 00 	lds	r24, 0x0092
 a2e:	88 23       	and	r24, r24
 a30:	59 f0       	breq	.+22     	; 0xa48 <process_sensor+0x3bc>
 a32:	80 91 ab 00 	lds	r24, 0x00AB
 a36:	90 91 ac 00 	lds	r25, 0x00AC
 a3a:	98 60       	ori	r25, 0x08	; 8
 a3c:	90 93 ac 00 	sts	0x00AC, r25
 a40:	80 93 ab 00 	sts	0x00AB, r24
 a44:	41 e0       	ldi	r20, 0x01	; 1
 a46:	01 c0       	rjmp	.+2      	; 0xa4a <process_sensor+0x3be>
 a48:	40 e0       	ldi	r20, 0x00	; 0
 a4a:	8c 2f       	mov	r24, r28
 a4c:	90 e0       	ldi	r25, 0x00	; 0
 a4e:	66 e0       	ldi	r22, 0x06	; 6
 a50:	70 e0       	ldi	r23, 0x00	; 0
 a52:	0d d2       	rcall	.+1050   	; 0xe6e <__mulhi3>
 a54:	fc 01       	movw	r30, r24
 a56:	e1 55       	subi	r30, 0x51	; 81
 a58:	ff 4f       	sbci	r31, 0xFF	; 255
 a5a:	92 81       	ldd	r25, Z+2	; 0x02
 a5c:	80 91 92 00 	lds	r24, 0x0092
 a60:	98 17       	cp	r25, r24
 a62:	08 f4       	brcc	.+2      	; 0xa66 <process_sensor+0x3da>
 a64:	27 c1       	rjmp	.+590    	; 0xcb4 <process_sensor+0x628>
 a66:	20 91 ab 00 	lds	r18, 0x00AB
 a6a:	30 91 ac 00 	lds	r19, 0x00AC
 a6e:	23 60       	ori	r18, 0x03	; 3
 a70:	30 93 ac 00 	sts	0x00AC, r19
 a74:	20 93 ab 00 	sts	0x00AB, r18
 a78:	8c 2f       	mov	r24, r28
 a7a:	90 e0       	ldi	r25, 0x00	; 0
 a7c:	66 e0       	ldi	r22, 0x06	; 6
 a7e:	70 e0       	ldi	r23, 0x00	; 0
 a80:	f6 d1       	rcall	.+1004   	; 0xe6e <__mulhi3>
 a82:	fc 01       	movw	r30, r24
 a84:	e1 55       	subi	r30, 0x51	; 81
 a86:	ff 4f       	sbci	r31, 0xFF	; 255
 a88:	80 e1       	ldi	r24, 0x10	; 16
 a8a:	80 83       	st	Z, r24
 a8c:	8c 2f       	mov	r24, r28
 a8e:	90 e0       	ldi	r25, 0x00	; 0
 a90:	66 e0       	ldi	r22, 0x06	; 6
 a92:	70 e0       	ldi	r23, 0x00	; 0
 a94:	ec d1       	rcall	.+984    	; 0xe6e <__mulhi3>
 a96:	fc 01       	movw	r30, r24
 a98:	e1 55       	subi	r30, 0x51	; 81
 a9a:	ff 4f       	sbci	r31, 0xFF	; 255
 a9c:	11 82       	std	Z+1, r1	; 0x01
 a9e:	0a c1       	rjmp	.+532    	; 0xcb4 <process_sensor+0x628>
 aa0:	22 ff       	sbrs	r18, 2
 aa2:	1e c0       	rjmp	.+60     	; 0xae0 <process_sensor+0x454>
 aa4:	8c 2f       	mov	r24, r28
 aa6:	90 e0       	ldi	r25, 0x00	; 0
 aa8:	66 e0       	ldi	r22, 0x06	; 6
 aaa:	70 e0       	ldi	r23, 0x00	; 0
 aac:	e0 d1       	rcall	.+960    	; 0xe6e <__mulhi3>
 aae:	fc 01       	movw	r30, r24
 ab0:	e1 55       	subi	r30, 0x51	; 81
 ab2:	ff 4f       	sbci	r31, 0xFF	; 255
 ab4:	e5 81       	ldd	r30, Z+5	; 0x05
 ab6:	f0 e0       	ldi	r31, 0x00	; 0
 ab8:	e3 57       	subi	r30, 0x73	; 115
 aba:	ff 4f       	sbci	r31, 0xFF	; 255
 abc:	80 e8       	ldi	r24, 0x80	; 128
 abe:	80 83       	st	Z, r24
 ac0:	8c 2f       	mov	r24, r28
 ac2:	90 e0       	ldi	r25, 0x00	; 0
 ac4:	66 e0       	ldi	r22, 0x06	; 6
 ac6:	70 e0       	ldi	r23, 0x00	; 0
 ac8:	d2 d1       	rcall	.+932    	; 0xe6e <__mulhi3>
 aca:	fc 01       	movw	r30, r24
 acc:	e1 55       	subi	r30, 0x51	; 81
 ace:	ff 4f       	sbci	r31, 0xFF	; 255
 ad0:	80 e2       	ldi	r24, 0x20	; 32
 ad2:	80 83       	st	Z, r24
 ad4:	80 91 ab 00 	lds	r24, 0x00AB
 ad8:	90 91 ac 00 	lds	r25, 0x00AC
 adc:	90 61       	ori	r25, 0x10	; 16
 ade:	58 c0       	rjmp	.+176    	; 0xb90 <process_sensor+0x504>
 ae0:	c7 01       	movw	r24, r14
 ae2:	f7 fe       	sbrs	r15, 7
 ae4:	02 c0       	rjmp	.+4      	; 0xaea <process_sensor+0x45e>
 ae6:	80 e0       	ldi	r24, 0x00	; 0
 ae8:	90 e0       	ldi	r25, 0x00	; 0
 aea:	80 17       	cp	r24, r16
 aec:	91 07       	cpc	r25, r17
 aee:	80 f4       	brcc	.+32     	; 0xb10 <process_sensor+0x484>
 af0:	8c 2f       	mov	r24, r28
 af2:	90 e0       	ldi	r25, 0x00	; 0
 af4:	66 e0       	ldi	r22, 0x06	; 6
 af6:	70 e0       	ldi	r23, 0x00	; 0
 af8:	ba d1       	rcall	.+884    	; 0xe6e <__mulhi3>
 afa:	fc 01       	movw	r30, r24
 afc:	e1 55       	subi	r30, 0x51	; 81
 afe:	ff 4f       	sbci	r31, 0xFF	; 255
 b00:	88 e0       	ldi	r24, 0x08	; 8
 b02:	80 83       	st	Z, r24
 b04:	80 91 ab 00 	lds	r24, 0x00AB
 b08:	90 91 ac 00 	lds	r25, 0x00AC
 b0c:	94 60       	ori	r25, 0x04	; 4
 b0e:	40 c0       	rjmp	.+128    	; 0xb90 <process_sensor+0x504>
 b10:	80 91 ab 00 	lds	r24, 0x00AB
 b14:	90 91 ac 00 	lds	r25, 0x00AC
 b18:	81 60       	ori	r24, 0x01	; 1
 b1a:	90 93 ac 00 	sts	0x00AC, r25
 b1e:	80 93 ab 00 	sts	0x00AB, r24
 b22:	8c 2f       	mov	r24, r28
 b24:	90 e0       	ldi	r25, 0x00	; 0
 b26:	66 e0       	ldi	r22, 0x06	; 6
 b28:	70 e0       	ldi	r23, 0x00	; 0
 b2a:	a1 d1       	rcall	.+834    	; 0xe6e <__mulhi3>
 b2c:	fc 01       	movw	r30, r24
 b2e:	e1 55       	subi	r30, 0x51	; 81
 b30:	ff 4f       	sbci	r31, 0xFF	; 255
 b32:	22 81       	ldd	r18, Z+2	; 0x02
 b34:	80 91 92 00 	lds	r24, 0x0092
 b38:	28 17       	cp	r18, r24
 b3a:	50 f4       	brcc	.+20     	; 0xb50 <process_sensor+0x4c4>
 b3c:	8c 2f       	mov	r24, r28
 b3e:	90 e0       	ldi	r25, 0x00	; 0
 b40:	66 e0       	ldi	r22, 0x06	; 6
 b42:	70 e0       	ldi	r23, 0x00	; 0
 b44:	94 d1       	rcall	.+808    	; 0xe6e <__mulhi3>
 b46:	fc 01       	movw	r30, r24
 b48:	e1 55       	subi	r30, 0x51	; 81
 b4a:	ff 4f       	sbci	r31, 0xFF	; 255
 b4c:	2f 5f       	subi	r18, 0xFF	; 255
 b4e:	22 83       	std	Z+2, r18	; 0x02
 b50:	30 91 94 00 	lds	r19, 0x0094
 b54:	33 23       	and	r19, r19
 b56:	11 f1       	breq	.+68     	; 0xb9c <process_sensor+0x510>
 b58:	8c 2f       	mov	r24, r28
 b5a:	90 e0       	ldi	r25, 0x00	; 0
 b5c:	66 e0       	ldi	r22, 0x06	; 6
 b5e:	70 e0       	ldi	r23, 0x00	; 0
 b60:	86 d1       	rcall	.+780    	; 0xe6e <__mulhi3>
 b62:	fc 01       	movw	r30, r24
 b64:	e1 55       	subi	r30, 0x51	; 81
 b66:	ff 4f       	sbci	r31, 0xFF	; 255
 b68:	21 81       	ldd	r18, Z+1	; 0x01
 b6a:	8c 2f       	mov	r24, r28
 b6c:	23 17       	cp	r18, r19
 b6e:	50 f4       	brcc	.+20     	; 0xb84 <process_sensor+0x4f8>
 b70:	90 e0       	ldi	r25, 0x00	; 0
 b72:	66 e0       	ldi	r22, 0x06	; 6
 b74:	70 e0       	ldi	r23, 0x00	; 0
 b76:	7b d1       	rcall	.+758    	; 0xe6e <__mulhi3>
 b78:	fc 01       	movw	r30, r24
 b7a:	e1 55       	subi	r30, 0x51	; 81
 b7c:	ff 4f       	sbci	r31, 0xFF	; 255
 b7e:	d2 0f       	add	r29, r18
 b80:	d1 83       	std	Z+1, r29	; 0x01
 b82:	0c c0       	rjmp	.+24     	; 0xb9c <process_sensor+0x510>
 b84:	68 dd       	rcall	.-1328   	; 0x656 <start_cal_sensor>
 b86:	80 91 ab 00 	lds	r24, 0x00AB
 b8a:	90 91 ac 00 	lds	r25, 0x00AC
 b8e:	92 60       	ori	r25, 0x02	; 2
 b90:	90 93 ac 00 	sts	0x00AC, r25
 b94:	80 93 ab 00 	sts	0x00AB, r24
 b98:	41 e0       	ldi	r20, 0x01	; 1
 b9a:	01 c0       	rjmp	.+2      	; 0xb9e <process_sensor+0x512>
 b9c:	40 e0       	ldi	r20, 0x00	; 0
 b9e:	80 91 93 00 	lds	r24, 0x0093
 ba2:	80 93 ad 00 	sts	0x00AD, r24
 ba6:	86 c0       	rjmp	.+268    	; 0xcb4 <process_sensor+0x628>
 ba8:	80 91 93 00 	lds	r24, 0x0093
 bac:	80 93 ad 00 	sts	0x00AD, r24
 bb0:	8c 2f       	mov	r24, r28
 bb2:	90 e0       	ldi	r25, 0x00	; 0
 bb4:	66 e0       	ldi	r22, 0x06	; 6
 bb6:	70 e0       	ldi	r23, 0x00	; 0
 bb8:	5a d1       	rcall	.+692    	; 0xe6e <__mulhi3>
 bba:	fc 01       	movw	r30, r24
 bbc:	e1 55       	subi	r30, 0x51	; 81
 bbe:	ff 4f       	sbci	r31, 0xFF	; 255
 bc0:	82 81       	ldd	r24, Z+2	; 0x02
 bc2:	88 23       	and	r24, r24
 bc4:	09 f4       	brne	.+2      	; 0xbc8 <process_sensor+0x53c>
 bc6:	5b c0       	rjmp	.+182    	; 0xc7e <process_sensor+0x5f2>
 bc8:	c7 01       	movw	r24, r14
 bca:	f7 fe       	sbrs	r15, 7
 bcc:	02 c0       	rjmp	.+4      	; 0xbd2 <process_sensor+0x546>
 bce:	80 e0       	ldi	r24, 0x00	; 0
 bd0:	90 e0       	ldi	r25, 0x00	; 0
 bd2:	08 17       	cp	r16, r24
 bd4:	19 07       	cpc	r17, r25
 bd6:	a8 f4       	brcc	.+42     	; 0xc02 <process_sensor+0x576>
 bd8:	8c 2f       	mov	r24, r28
 bda:	90 e0       	ldi	r25, 0x00	; 0
 bdc:	66 e0       	ldi	r22, 0x06	; 6
 bde:	70 e0       	ldi	r23, 0x00	; 0
 be0:	46 d1       	rcall	.+652    	; 0xe6e <__mulhi3>
 be2:	fc 01       	movw	r30, r24
 be4:	e1 55       	subi	r30, 0x51	; 81
 be6:	ff 4f       	sbci	r31, 0xFF	; 255
 be8:	80 e1       	ldi	r24, 0x10	; 16
 bea:	80 83       	st	Z, r24
 bec:	80 91 ab 00 	lds	r24, 0x00AB
 bf0:	90 91 ac 00 	lds	r25, 0x00AC
 bf4:	81 60       	ori	r24, 0x01	; 1
 bf6:	90 93 ac 00 	sts	0x00AC, r25
 bfa:	80 93 ab 00 	sts	0x00AB, r24
 bfe:	40 e0       	ldi	r20, 0x00	; 0
 c00:	0a c0       	rjmp	.+20     	; 0xc16 <process_sensor+0x58a>
 c02:	80 91 ab 00 	lds	r24, 0x00AB
 c06:	90 91 ac 00 	lds	r25, 0x00AC
 c0a:	94 60       	ori	r25, 0x04	; 4
 c0c:	90 93 ac 00 	sts	0x00AC, r25
 c10:	80 93 ab 00 	sts	0x00AB, r24
 c14:	41 e0       	ldi	r20, 0x01	; 1
 c16:	8c 2f       	mov	r24, r28
 c18:	90 e0       	ldi	r25, 0x00	; 0
 c1a:	66 e0       	ldi	r22, 0x06	; 6
 c1c:	70 e0       	ldi	r23, 0x00	; 0
 c1e:	27 d1       	rcall	.+590    	; 0xe6e <__mulhi3>
 c20:	fc 01       	movw	r30, r24
 c22:	e1 55       	subi	r30, 0x51	; 81
 c24:	ff 4f       	sbci	r31, 0xFF	; 255
 c26:	8c 2f       	mov	r24, r28
 c28:	90 e0       	ldi	r25, 0x00	; 0
 c2a:	66 e0       	ldi	r22, 0x06	; 6
 c2c:	70 e0       	ldi	r23, 0x00	; 0
 c2e:	1f d1       	rcall	.+574    	; 0xe6e <__mulhi3>
 c30:	dc 01       	movw	r26, r24
 c32:	a1 55       	subi	r26, 0x51	; 81
 c34:	bf 4f       	sbci	r27, 0xFF	; 255
 c36:	12 96       	adiw	r26, 0x02	; 2
 c38:	8c 91       	ld	r24, X
 c3a:	12 97       	sbiw	r26, 0x02	; 2
 c3c:	81 50       	subi	r24, 0x01	; 1
 c3e:	82 83       	std	Z+2, r24	; 0x02
 c40:	39 c0       	rjmp	.+114    	; 0xcb4 <process_sensor+0x628>
 c42:	8c 2f       	mov	r24, r28
 c44:	90 e0       	ldi	r25, 0x00	; 0
 c46:	66 e0       	ldi	r22, 0x06	; 6
 c48:	70 e0       	ldi	r23, 0x00	; 0
 c4a:	11 d1       	rcall	.+546    	; 0xe6e <__mulhi3>
 c4c:	fc 01       	movw	r30, r24
 c4e:	e1 55       	subi	r30, 0x51	; 81
 c50:	ff 4f       	sbci	r31, 0xFF	; 255
 c52:	e5 81       	ldd	r30, Z+5	; 0x05
 c54:	f0 e0       	ldi	r31, 0x00	; 0
 c56:	e3 57       	subi	r30, 0x73	; 115
 c58:	ff 4f       	sbci	r31, 0xFF	; 255
 c5a:	80 81       	ld	r24, Z
 c5c:	8f 5f       	subi	r24, 0xFF	; 255
 c5e:	80 83       	st	Z, r24
 c60:	22 fd       	sbrc	r18, 2
 c62:	10 c0       	rjmp	.+32     	; 0xc84 <process_sensor+0x5f8>
 c64:	87 ff       	sbrs	r24, 7
 c66:	0b c0       	rjmp	.+22     	; 0xc7e <process_sensor+0x5f2>
 c68:	8c 2f       	mov	r24, r28
 c6a:	90 e0       	ldi	r25, 0x00	; 0
 c6c:	66 e0       	ldi	r22, 0x06	; 6
 c6e:	70 e0       	ldi	r23, 0x00	; 0
 c70:	fe d0       	rcall	.+508    	; 0xe6e <__mulhi3>
 c72:	fc 01       	movw	r30, r24
 c74:	e1 55       	subi	r30, 0x51	; 81
 c76:	ff 4f       	sbci	r31, 0xFF	; 255
 c78:	80 e1       	ldi	r24, 0x10	; 16
 c7a:	80 83       	st	Z, r24
 c7c:	1a c0       	rjmp	.+52     	; 0xcb2 <process_sensor+0x626>
 c7e:	8c 2f       	mov	r24, r28
 c80:	b9 dc       	rcall	.-1678   	; 0x5f4 <goto_no_detect>
 c82:	17 c0       	rjmp	.+46     	; 0xcb2 <process_sensor+0x626>
 c84:	90 91 97 00 	lds	r25, 0x0097
 c88:	89 17       	cp	r24, r25
 c8a:	68 f0       	brcs	.+26     	; 0xca6 <process_sensor+0x61a>
 c8c:	8c 2f       	mov	r24, r28
 c8e:	e3 dc       	rcall	.-1594   	; 0x656 <start_cal_sensor>
 c90:	80 91 ab 00 	lds	r24, 0x00AB
 c94:	90 91 ac 00 	lds	r25, 0x00AC
 c98:	90 61       	ori	r25, 0x10	; 16
 c9a:	90 93 ac 00 	sts	0x00AC, r25
 c9e:	80 93 ab 00 	sts	0x00AB, r24
 ca2:	41 e0       	ldi	r20, 0x01	; 1
 ca4:	07 c0       	rjmp	.+14     	; 0xcb4 <process_sensor+0x628>
 ca6:	80 91 ab 00 	lds	r24, 0x00AB
 caa:	90 91 ac 00 	lds	r25, 0x00AC
 cae:	94 60       	ori	r25, 0x04	; 4
 cb0:	f4 cf       	rjmp	.-24     	; 0xc9a <process_sensor+0x60e>
 cb2:	40 e0       	ldi	r20, 0x00	; 0
 cb4:	84 2f       	mov	r24, r20
 cb6:	cd b7       	in	r28, 0x3d	; 61
 cb8:	de b7       	in	r29, 0x3e	; 62
 cba:	e6 e0       	ldi	r30, 0x06	; 6
 cbc:	12 c1       	rjmp	.+548    	; 0xee2 <__epilogue_restores__+0x18>

00000cbe <get_channel_delta>:
 cbe:	90 e0       	ldi	r25, 0x00	; 0
 cc0:	fc 01       	movw	r30, r24
 cc2:	34 96       	adiw	r30, 0x04	; 4
 cc4:	2a e9       	ldi	r18, 0x9A	; 154
 cc6:	30 e0       	ldi	r19, 0x00	; 0
 cc8:	ee 0f       	add	r30, r30
 cca:	ff 1f       	adc	r31, r31
 ccc:	e2 0f       	add	r30, r18
 cce:	f3 1f       	adc	r31, r19
 cd0:	dc 01       	movw	r26, r24
 cd2:	aa 0f       	add	r26, r26
 cd4:	bb 1f       	adc	r27, r27
 cd6:	a2 0f       	add	r26, r18
 cd8:	b3 1f       	adc	r27, r19
 cda:	80 81       	ld	r24, Z
 cdc:	91 81       	ldd	r25, Z+1	; 0x01
 cde:	2d 91       	ld	r18, X+
 ce0:	3c 91       	ld	r19, X
 ce2:	11 97       	sbiw	r26, 0x01	; 1
 ce4:	82 1b       	sub	r24, r18
 ce6:	93 0b       	sbc	r25, r19
 ce8:	08 95       	ret

00000cea <burst_init>:
 cea:	0f 93       	push	r16
 cec:	cf 93       	push	r28
 cee:	df 93       	push	r29
 cf0:	81 e0       	ldi	r24, 0x01	; 1
 cf2:	80 93 78 00 	sts	0x0078, r24
 cf6:	10 92 cc 00 	sts	0x00CC, r1
 cfa:	10 92 cd 00 	sts	0x00CD, r1
 cfe:	10 92 ce 00 	sts	0x00CE, r1
 d02:	10 92 cf 00 	sts	0x00CF, r1
 d06:	10 92 d0 00 	sts	0x00D0, r1
 d0a:	30 91 ae 00 	lds	r19, 0x00AE
 d0e:	c4 eb       	ldi	r28, 0xB4	; 180
 d10:	d0 e0       	ldi	r29, 0x00	; 0
 d12:	20 e0       	ldi	r18, 0x00	; 0
 d14:	61 e0       	ldi	r22, 0x01	; 1
 d16:	70 e0       	ldi	r23, 0x00	; 0
 d18:	38 c0       	rjmp	.+112    	; 0xd8a <burst_init+0xa0>
 d1a:	e8 81       	ld	r30, Y
 d1c:	8e 2f       	mov	r24, r30
 d1e:	86 95       	lsr	r24
 d20:	86 95       	lsr	r24
 d22:	90 e0       	ldi	r25, 0x00	; 0
 d24:	88 0f       	add	r24, r24
 d26:	99 1f       	adc	r25, r25
 d28:	dc 01       	movw	r26, r24
 d2a:	ac 59       	subi	r26, 0x9C	; 156
 d2c:	bf 4f       	sbci	r27, 0xFF	; 255
 d2e:	ab 01       	movw	r20, r22
 d30:	0c 90       	ld	r0, X
 d32:	02 c0       	rjmp	.+4      	; 0xd38 <burst_init+0x4e>
 d34:	44 0f       	add	r20, r20
 d36:	55 1f       	adc	r21, r21
 d38:	0a 94       	dec	r0
 d3a:	e2 f7       	brpl	.-8      	; 0xd34 <burst_init+0x4a>
 d3c:	50 91 cc 00 	lds	r21, 0x00CC
 d40:	54 2b       	or	r21, r20
 d42:	50 93 cc 00 	sts	0x00CC, r21
 d46:	8e 59       	subi	r24, 0x9E	; 158
 d48:	9f 4f       	sbci	r25, 0xFF	; 255
 d4a:	ab 01       	movw	r20, r22
 d4c:	dc 01       	movw	r26, r24
 d4e:	0c 90       	ld	r0, X
 d50:	02 c0       	rjmp	.+4      	; 0xd56 <burst_init+0x6c>
 d52:	44 0f       	add	r20, r20
 d54:	55 1f       	adc	r21, r21
 d56:	0a 94       	dec	r0
 d58:	e2 f7       	brpl	.-8      	; 0xd52 <burst_init+0x68>
 d5a:	ca 01       	movw	r24, r20
 d5c:	90 91 cd 00 	lds	r25, 0x00CD
 d60:	98 2b       	or	r25, r24
 d62:	90 93 cd 00 	sts	0x00CD, r25
 d66:	e3 70       	andi	r30, 0x03	; 3
 d68:	f0 e0       	ldi	r31, 0x00	; 0
 d6a:	ee 0f       	add	r30, r30
 d6c:	ff 1f       	adc	r31, r31
 d6e:	ee 0f       	add	r30, r30
 d70:	ff 1f       	adc	r31, r31
 d72:	ea 59       	subi	r30, 0x9A	; 154
 d74:	ff 4f       	sbci	r31, 0xFF	; 255
 d76:	a3 81       	ldd	r26, Z+3	; 0x03
 d78:	b0 e0       	ldi	r27, 0x00	; 0
 d7a:	a4 53       	subi	r26, 0x34	; 52
 d7c:	bf 4f       	sbci	r27, 0xFF	; 255
 d7e:	8c 91       	ld	r24, X
 d80:	92 81       	ldd	r25, Z+2	; 0x02
 d82:	89 2b       	or	r24, r25
 d84:	8c 93       	st	X, r24
 d86:	2f 5f       	subi	r18, 0xFF	; 255
 d88:	26 96       	adiw	r28, 0x06	; 6
 d8a:	23 17       	cp	r18, r19
 d8c:	31 f6       	brne	.-116    	; 0xd1a <burst_init+0x30>
 d8e:	80 91 cd 00 	lds	r24, 0x00CD
 d92:	60 91 cc 00 	lds	r22, 0x00CC
 d96:	40 91 ce 00 	lds	r20, 0x00CE
 d9a:	20 91 cf 00 	lds	r18, 0x00CF
 d9e:	00 91 d0 00 	lds	r16, 0x00D0
 da2:	a4 d9       	rcall	.-3256   	; 0xec <_00110000001_>
 da4:	df 91       	pop	r29
 da6:	cf 91       	pop	r28
 da8:	0f 91       	pop	r16
 daa:	08 95       	ret

00000dac <burst_reset>:
 dac:	80 e4       	ldi	r24, 0x40	; 64
 dae:	80 93 79 00 	sts	0x0079, r24
 db2:	80 93 7a 00 	sts	0x007A, r24
 db6:	80 93 7b 00 	sts	0x007B, r24
 dba:	80 93 7c 00 	sts	0x007C, r24
 dbe:	08 95       	ret

00000dc0 <burst>:
 dc0:	a0 e0       	ldi	r26, 0x00	; 0
 dc2:	b0 e0       	ldi	r27, 0x00	; 0
 dc4:	e5 ee       	ldi	r30, 0xE5	; 229
 dc6:	f6 e0       	ldi	r31, 0x06	; 6
 dc8:	6c c0       	rjmp	.+216    	; 0xea2 <__prologue_saves__+0x10>
 dca:	8f b7       	in	r24, 0x3f	; 63
 dcc:	80 78       	andi	r24, 0x80	; 128
 dce:	80 93 c8 00 	sts	0x00C8, r24
 dd2:	d3 b1       	in	r29, 0x03	; 3
 dd4:	18 b1       	in	r17, 0x08	; 8
 dd6:	0f b5       	in	r16, 0x2f	; 47
 dd8:	fe b4       	in	r15, 0x2e	; 46
 dda:	eb b0       	in	r14, 0x0b	; 11
 ddc:	ac b4       	in	r10, 0x2c	; 44
 dde:	bd b4       	in	r11, 0x2d	; 45
 de0:	d0 b0       	in	r13, 0x00	; 0
 de2:	c7 b0       	in	r12, 0x07	; 7
 de4:	80 e4       	ldi	r24, 0x40	; 64
 de6:	83 b9       	out	0x03, r24	; 3
 de8:	84 e0       	ldi	r24, 0x04	; 4
 dea:	88 b9       	out	0x08, r24	; 8
 dec:	1f bc       	out	0x2f, r1	; 47
 dee:	81 e8       	ldi	r24, 0x81	; 129
 df0:	8e bd       	out	0x2e, r24	; 46
 df2:	f8 94       	cli
 df4:	c0 e0       	ldi	r28, 0x00	; 0
 df6:	20 c0       	rjmp	.+64     	; 0xe38 <burst+0x78>
 df8:	8c 2f       	mov	r24, r28
 dfa:	90 e0       	ldi	r25, 0x00	; 0
 dfc:	66 e0       	ldi	r22, 0x06	; 6
 dfe:	70 e0       	ldi	r23, 0x00	; 0
 e00:	36 d0       	rcall	.+108    	; 0xe6e <__mulhi3>
 e02:	fc 01       	movw	r30, r24
 e04:	e1 55       	subi	r30, 0x51	; 81
 e06:	ff 4f       	sbci	r31, 0xFF	; 255
 e08:	85 81       	ldd	r24, Z+5	; 0x05
 e0a:	a8 2f       	mov	r26, r24
 e0c:	a3 70       	andi	r26, 0x03	; 3
 e0e:	b0 e0       	ldi	r27, 0x00	; 0
 e10:	aa 0f       	add	r26, r26
 e12:	bb 1f       	adc	r27, r27
 e14:	aa 0f       	add	r26, r26
 e16:	bb 1f       	adc	r27, r27
 e18:	aa 59       	subi	r26, 0x9A	; 154
 e1a:	bf 4f       	sbci	r27, 0xFF	; 255
 e1c:	ed 91       	ld	r30, X+
 e1e:	fc 91       	ld	r31, X
 e20:	11 97       	sbiw	r26, 0x01	; 1
 e22:	30 97       	sbiw	r30, 0x00	; 0
 e24:	19 f0       	breq	.+6      	; 0xe2c <burst+0x6c>
 e26:	12 96       	adiw	r26, 0x02	; 2
 e28:	6c 91       	ld	r22, X
 e2a:	09 95       	icall
 e2c:	8f b7       	in	r24, 0x3f	; 63
 e2e:	90 91 c8 00 	lds	r25, 0x00C8
 e32:	89 2b       	or	r24, r25
 e34:	8f bf       	out	0x3f, r24	; 63
 e36:	cf 5f       	subi	r28, 0xFF	; 255
 e38:	80 91 ae 00 	lds	r24, 0x00AE
 e3c:	c8 17       	cp	r28, r24
 e3e:	e0 f2       	brcs	.-72     	; 0xdf8 <burst+0x38>
 e40:	d3 b9       	out	0x03, r29	; 3
 e42:	18 b9       	out	0x08, r17	; 8
 e44:	0f bd       	out	0x2f, r16	; 47
 e46:	fe bc       	out	0x2e, r15	; 46
 e48:	eb b8       	out	0x0b, r14	; 11
 e4a:	bd bc       	out	0x2d, r11	; 45
 e4c:	ac bc       	out	0x2c, r10	; 44
 e4e:	d0 b8       	out	0x00, r13	; 0
 e50:	c7 b8       	out	0x07, r12	; 7
 e52:	8f b7       	in	r24, 0x3f	; 63
 e54:	90 91 c8 00 	lds	r25, 0x00C8
 e58:	89 2b       	or	r24, r25
 e5a:	8f bf       	out	0x3f, r24	; 63
 e5c:	cd b7       	in	r28, 0x3d	; 61
 e5e:	de b7       	in	r29, 0x3e	; 62
 e60:	ea e0       	ldi	r30, 0x0A	; 10
 e62:	3b c0       	rjmp	.+118    	; 0xeda <__epilogue_restores__+0x10>

00000e64 <main>:

int main( void )
{

   /* initialise host app, pins, watchdog, etc */
    init_system();
 e64:	3b d9       	rcall	.-3466   	; 0xdc <init_system>

    /* configure timer ISR to fire regularly */
    init_timer_isr();
 e66:	f9 d8       	rcall	.-3598   	; 0x5a <init_timer_isr>

	/* Initialize Touch sensors */
	touch_init();
 e68:	a5 d9       	rcall	.-3254   	; 0x1b4 <touch_init>


    /* loop forever */
    for( ; ; )
    {
        touch_measure();
 e6a:	c2 d9       	rcall	.-3196   	; 0x1f0 <touch_measure>
 e6c:	fe cf       	rjmp	.-4      	; 0xe6a <main+0x6>

00000e6e <__mulhi3>:
 e6e:	55 27       	eor	r21, r21
 e70:	00 24       	eor	r0, r0

00000e72 <__mulhi3_loop>:
 e72:	80 ff       	sbrs	r24, 0
 e74:	02 c0       	rjmp	.+4      	; 0xe7a <__mulhi3_skip1>
 e76:	06 0e       	add	r0, r22
 e78:	57 1f       	adc	r21, r23

00000e7a <__mulhi3_skip1>:
 e7a:	66 0f       	add	r22, r22
 e7c:	77 1f       	adc	r23, r23
 e7e:	61 15       	cp	r22, r1
 e80:	71 05       	cpc	r23, r1
 e82:	21 f0       	breq	.+8      	; 0xe8c <__mulhi3_exit>
 e84:	96 95       	lsr	r25
 e86:	87 95       	ror	r24
 e88:	00 97       	sbiw	r24, 0x00	; 0
 e8a:	99 f7       	brne	.-26     	; 0xe72 <__mulhi3_loop>

00000e8c <__mulhi3_exit>:
 e8c:	95 2f       	mov	r25, r21
 e8e:	80 2d       	mov	r24, r0
 e90:	08 95       	ret

00000e92 <__prologue_saves__>:
 e92:	2f 92       	push	r2
 e94:	3f 92       	push	r3
 e96:	4f 92       	push	r4
 e98:	5f 92       	push	r5
 e9a:	6f 92       	push	r6
 e9c:	7f 92       	push	r7
 e9e:	8f 92       	push	r8
 ea0:	9f 92       	push	r9
 ea2:	af 92       	push	r10
 ea4:	bf 92       	push	r11
 ea6:	cf 92       	push	r12
 ea8:	df 92       	push	r13
 eaa:	ef 92       	push	r14
 eac:	ff 92       	push	r15
 eae:	0f 93       	push	r16
 eb0:	1f 93       	push	r17
 eb2:	cf 93       	push	r28
 eb4:	df 93       	push	r29
 eb6:	cd b7       	in	r28, 0x3d	; 61
 eb8:	de b7       	in	r29, 0x3e	; 62
 eba:	ca 1b       	sub	r28, r26
 ebc:	db 0b       	sbc	r29, r27
 ebe:	0f b6       	in	r0, 0x3f	; 63
 ec0:	f8 94       	cli
 ec2:	de bf       	out	0x3e, r29	; 62
 ec4:	0f be       	out	0x3f, r0	; 63
 ec6:	cd bf       	out	0x3d, r28	; 61
 ec8:	09 94       	ijmp

00000eca <__epilogue_restores__>:
 eca:	2a 88       	ldd	r2, Y+18	; 0x12
 ecc:	39 88       	ldd	r3, Y+17	; 0x11
 ece:	48 88       	ldd	r4, Y+16	; 0x10
 ed0:	5f 84       	ldd	r5, Y+15	; 0x0f
 ed2:	6e 84       	ldd	r6, Y+14	; 0x0e
 ed4:	7d 84       	ldd	r7, Y+13	; 0x0d
 ed6:	8c 84       	ldd	r8, Y+12	; 0x0c
 ed8:	9b 84       	ldd	r9, Y+11	; 0x0b
 eda:	aa 84       	ldd	r10, Y+10	; 0x0a
 edc:	b9 84       	ldd	r11, Y+9	; 0x09
 ede:	c8 84       	ldd	r12, Y+8	; 0x08
 ee0:	df 80       	ldd	r13, Y+7	; 0x07
 ee2:	ee 80       	ldd	r14, Y+6	; 0x06
 ee4:	fd 80       	ldd	r15, Y+5	; 0x05
 ee6:	0c 81       	ldd	r16, Y+4	; 0x04
 ee8:	1b 81       	ldd	r17, Y+3	; 0x03
 eea:	aa 81       	ldd	r26, Y+2	; 0x02
 eec:	b9 81       	ldd	r27, Y+1	; 0x01
 eee:	ce 0f       	add	r28, r30
 ef0:	d1 1d       	adc	r29, r1
 ef2:	0f b6       	in	r0, 0x3f	; 63
 ef4:	f8 94       	cli
 ef6:	de bf       	out	0x3e, r29	; 62
 ef8:	0f be       	out	0x3f, r0	; 63
 efa:	cd bf       	out	0x3d, r28	; 61
 efc:	ed 01       	movw	r28, r26
 efe:	08 95       	ret

00000f00 <_exit>:
 f00:	f8 94       	cli

00000f02 <__stop_program>:
 f02:	ff cf       	rjmp	.-2      	; 0xf02 <__stop_program>
